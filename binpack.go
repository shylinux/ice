package ice

import (
	"encoding/base64"
	ice "shylinux.com/x/icebergs"
	"shylinux.com/x/icebergs/base/nfs"
)

func init() {

	pack := ice.Maps{
        "usr/volcanos/favicon.ico": "",
        "usr/volcanos/proto.js": "",
        "usr/volcanos/frame.js": "",
        "usr/volcanos/lib/base.js": "",
        "usr/volcanos/lib/core.js": "Vm9sY2Fub3MoImNvcmUiLCB7aGVscDogIuaVsOaNrue7k+aehCIsCglLZXlzOiBzaHkoIui/nuaOpeWZqCIsIGZ1bmN0aW9uKCkgeyB2YXIgbGlzdCA9IFtdCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHYgPSBhcmd1bWVudHNbaV0KCQkJc3dpdGNoICh0eXBlb2YgdikgewoJCQkJY2FzZSBsYW5nLk9CSkVDVDogZm9yICh2YXIgaiA9IDA7IGogPCB2Lmxlbmd0aDsgaisrKSB7IGxpc3QucHVzaCh2W2pdKSB9IGJyZWFrCgkJCQljYXNlIGxhbmcuTlVNQkVSOiBsaXN0LnB1c2godisiIik7IGJyZWFrCgkJCQljYXNlIGxhbmcuRlVOQ1RJT046IHYgPSB2KCkKCQkJCWRlZmF1bHQ6IHYgJiYgbGlzdC5wdXNoKHYrIiIpCgkJCX0KCQl9CgkJcmV0dXJuIGxpc3Quam9pbihpY2UuUFQpCgl9KSwKCVZhbHVlOiBzaHkoIuWtmOWCqOWZqCIsIGZ1bmN0aW9uKGRhdGEsIGtleSwgdmFsdWUpIHsKCQlpZiAoZGF0YSA9PSB1bmRlZmluZWQpIHsgcmV0dXJuIH0KCQlpZiAoa2V5ID09IHVuZGVmaW5lZCkgeyByZXR1cm4gZGF0YSB9CgoJCWlmICh0eXBlb2Yga2V5ID09IGxhbmcuT0JKRUNUICYmIGtleS5sZW5ndGggPiAwKSB7IGtleSA9IGtleS5qb2luKGljZS5QVCkgfQoJCWlmICh0eXBlb2Yga2V5ID09IGxhbmcuT0JKRUNUKSB7IGZvciAodmFyIGsgaW4ga2V5KSB7IGFyZ3VtZW50cy5jYWxsZWUuY2FsbCh0aGlzLCBkYXRhLCBrLCBrZXlba10pIH0gcmV0dXJuIGRhdGEgfQoKCQlpZiAodmFsdWUgIT0gdW5kZWZpbmVkKSB7CgkJCXZhciBfZGF0YSA9IGRhdGEKCgkJCXZhciBscyA9IGtleS5zcGxpdChpY2UuUFQpCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgbHMubGVuZ3RoOyBpKyspIHsKCQkJCXZhciBfc3ViID0gX2RhdGFbbHNbaV1dfHx7fQoJCQkJX2RhdGFbbHNbaV1dID0gX3N1YgoJCQkJaWYgKGkgPT0gbHMubGVuZ3RoIC0gMSkgewoJCQkJCV9kYXRhW2xzW2ldXSA9IHZhbHVlCgkJCQl9IGVsc2UgewoJCQkJCV9kYXRhID0gX3N1YgoJCQkJfQoJCQl9CgkJCS8vIGRhdGFba2V5XSA9IHZhbHVlCgkJfQoJCWlmIChkYXRhW2tleV0gIT0gdW5kZWZpbmVkKSB7IHJldHVybiBkYXRhW2tleV0gfQoKCQl2YXIgcCA9IGRhdGEsIGxzID0ga2V5LnNwbGl0KGljZS5QVCk7IHdoaWxlIChwICYmIGxzLmxlbmd0aCA+IDApIHsKCQkJaWYgKGxzWzBdID09ICItMSIpIHsgbHNbMF0gPSBwLmxlbmd0aC0xIH0KCQkJcCA9IHBbbHNbMF1dLCBscyA9IGxzLnNsaWNlKDEpCgkJfSByZXR1cm4gcAoJfSksCglTcGxpdDogc2h5KCLliIbor43lmagiLCBmdW5jdGlvbihzdHIpIHsgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHsgcmV0dXJuIFtdIH0KCQl2YXIgb3B0ID0ge2RldGFpbDogZmFsc2V9LCBhcmcgPSBbXTsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKCQkJdHlwZW9mIGFyZ3VtZW50c1tpXSA9PSBsYW5nLk9CSkVDVD8gb3B0ID0gYXJndW1lbnRzW2ldOiBhcmcucHVzaChhcmd1bWVudHNbaV0pCgkJfQoKCQkvLyDlrZfnrKblrprkuYkKCQlmdW5jdGlvbiBfbGlzdChzdHIpIHsgdmFyIHJlcyA9IHt9OyBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykgeyByZXNbc3RyW2ldXSA9IHRydWUgfTsgcmV0dXJuIHJlcyB9CgkJdmFyIHNwYWNlID0gX2xpc3QoYXJnWzBdfHwiXHQgLDtcbiIpICAvLyDnqbrnmb3nrKYKCQl2YXIgYmxvY2sgPSBfbGlzdChhcmdbMV18fCJ7WygpXX0iKSAgIC8vIOWIhumalOespgoJCXZhciBxdW90ZSA9IF9saXN0KGFyZ1syXXx8IidcImAiKSAgICAgLy8g5byV55So56ymCgkJdmFyIHRyYW5zID0gX2xpc3QoYXJnWzNdfHwiXFwiKSAgICAgICAvLyDovazkuYnnrKYKCgkJdmFyIHJlcyA9IFtdLCBiZWdpbiA9IDA7IGZ1bmN0aW9uIHB1c2gob2JqKSB7CgkJCW9iaiAmJiByZXMucHVzaCh0eXBlb2Ygb2JqID09IGxhbmcuU1RSSU5HIHx8IG9wdC5kZXRhaWw/IG9iajogb2JqLnRleHQpLCBiZWdpbiA9IC0xCgkJfQoKCQkvLyDlvIDlp4vliIbor40KCQlmb3IgKHZhciBzID0gIiIsIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7CgkJCWlmIChzcGFjZVtzdHJbaV1dKSB7IC8vIOepuueZveespgoJCQkJaWYgKHMpIHsgY29udGludWUgfQoJCQkJYmVnaW4gPiAtMSAmJiBwdXNoKHN0ci5zbGljZShiZWdpbiwgaSkpCgkJCQlvcHQuZGV0YWlsICYmIHB1c2goe3R5cGU6IGh0bWwuU1BBQ0UsIHRleHQ6IHN0ci5zbGljZShpLCBpKzEpfSkKCgkJCX0gZWxzZSBpZiAoYmxvY2tbc3RyW2ldXSkgeyAvLyDliIbpmpTnrKYKCQkJCWlmIChzKSB7IGNvbnRpbnVlIH0KCQkJCWJlZ2luID4gLTEgJiYgcHVzaChzdHIuc2xpY2UoYmVnaW4sIGkpKQoJCQkJcHVzaChzdHIuc2xpY2UoaSwgaSsxKSkKCgkJCX0gZWxzZSBpZiAocXVvdGVbc3RyW2ldXSkgeyAvLyDlvJXnlKjnrKYKCQkJCWlmIChzID09ICIiKSB7CgkJCQkJYmVnaW4gPiAtMSAmJiBwdXNoKHN0ci5zbGljZShiZWdpbiwgaSkpCgkJCQkJcyA9IHN0cltpXSwgYmVnaW4gPSBpKzEKCQkJCX0gZWxzZSBpZiAocyA9PSBzdHJbaV0pIHsKCQkJCQlwdXNoKHt0eXBlOiBsYW5nLlNUUklORywgdGV4dDogc3RyLnNsaWNlKGJlZ2luLCBpKSwgbGVmdDogcywgcmlnaHQ6IHN0cltpXX0pCgkJCQkJcyA9ICIiLCBiZWdpbiA9IC0xCgkJCQl9CgoJCQl9IGVsc2UgaWYgKHRyYW5zW3N0cltpXV0pIHsgLy8g6L2s5LmJ56ymCgkJCQliZWdpbiA9PSAtMSAmJiAoYmVnaW4gPSBpKyspCgoJCQl9IGVsc2UgeyAvLyDmma7pgJrnrKYKCQkJCWJlZ2luID09IC0xICYmIChiZWdpbiA9IGkpCgkJCX0KCQl9CgoJCS8vIOWJqeS9meWtl+espgoJCWJlZ2luID49IDAgJiYgKHM/IHB1c2goe3R5cGU6IGxhbmcuU1RSSU5HLCB0ZXh0OiBzdHIuc2xpY2UoYmVnaW4pLCBsZWZ0OiBzLCByaWdodDogIiJ9KTogcHVzaChzdHIuc2xpY2UoYmVnaW4pKSkKCQlyZXR1cm4gcmVzCgl9KSwKCUNhbGxGdW5jOiBzaHkoIuiwg+eUqOWZqCIsIGZ1bmN0aW9uKGZ1bmMsIGFyZ3MsIG1vZCkgeyBhcmdzID0gYXJnc3x8e30KCQl2YXIgZXZlbnQgPSBhcmdzWyJldmVudCJdfHx7fSwgY2FuID0gYXJnc1siY2FuIl18fGFyZ3NbMF0sIG1zZyA9IGFyZ3NbIm1zZyJdfHxhcmdzWzFdLCBjbWRzID0gYXJnc1siY21kcyJdfHxbXQoJCWV2ZW50ID0gZXZlbnQuX2V2ZW50fHxldmVudAoKCQkvLyDmn6Xmib7osIPnlKgKCQlmdW5jID0gdHlwZW9mIGZ1bmMgPT0gbGFuZy5GVU5DVElPTj8gZnVuYzogdHlwZW9mIGZ1bmMgPT0gbGFuZy5TVFJJTkc/IHRoaXMuVmFsdWUobW9kfHxjYW4sIGZ1bmMpOgoJCQl0eXBlb2YgZnVuYyA9PSBsYW5nLk9CSkVDVCAmJiBmdW5jLmxlbmd0aCA+IDA/IHRoaXMuVmFsdWUoZnVuY1swXSwgdGhpcy5LZXlzKGZ1bmMuc2xpY2UoMSkpKTogbnVsbAoJCWlmICh0eXBlb2YgZnVuYyAhPSBsYW5nLkZVTkNUSU9OKSB7IHJldHVybiB9CgoJCS8vIOino+aekOWPguaVsAoJCXZhciBsaXN0ID0gW10sIGVjaG8gPSBmYWxzZSwgY2IgPSBhcmdzWyJjYiJdCgkJdGhpcy5MaXN0KGZ1bmMudG9TdHJpbmcoKS5zcGxpdCgiKSIpWzBdLnNwbGl0KCIoIilbMV0uc3BsaXQoaWNlLkZTKSwgZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHsgaXRlbSA9IGl0ZW0udHJpbSgpOyBpZiAoaXRlbSA9PSAiIikgeyByZXR1cm4gfQoJCQl2YXIgYXJnID0gYXJnc1tpdGVtXSB8fCBtc2cmJm1zZy5PcHRpb24mJm1zZy5PcHRpb24oaXRlbSkgfHwgY2FuJiZjYW4uQ29uZiYmY2FuLkNvbmYoaXRlbSkgfHwKCQkJCWV2ZW50JiYhKGV2ZW50IGluc3RhbmNlb2YgRXZlbnQpJiZldmVudFtpdGVtXSB8fCBhcmdzW2luZGV4XSB8fCBjbWRzW2luZGV4XSB8fCBudWxsCgkJCWlmIChpdGVtID09ICJjYiIpIHsgZWNobyA9IHRydWUgfQoJCQlsaXN0LnB1c2goYXJnKQoJCX0pCgoJCS8vIOaJp+ihjOiwg+eUqAoJCXZhciByZXMgPSBmdW5jLmFwcGx5KG1vZHx8Y2FuLCBsaXN0KQoJCWlmICghZWNobyAmJiB0eXBlb2YgY2IgPT0gbGFuZy5GVU5DVElPTikgeyByZXMgJiYgbXNnICYmIG1zZy5FY2hvKHJlcyksIGFyZ3VtZW50cy5jYWxsZWUuYXBwbHkodGhpcywgW2NiLCB7bXNnOiBtc2csIHJlczogcmVzfV0pIH0KCQlyZXR1cm4gcmVzCgl9KSwKCglMaXN0OiBzaHkoIui/reS7o+WZqCIsIGZ1bmN0aW9uKGxpc3QsIGNiLCBpbnRlcnZhbCwgY2JzKSB7CgkJaWYgKHR5cGVvZiBsaXN0ID09IGxhbmcuU1RSSU5HKSB7IC8vIOm7mOiupOW6j+WIlwoJCQlsaXN0ID0gW2xpc3RdCgkJfSBlbHNlIGlmICh0eXBlb2YgbGlzdCA9PSBsYW5nLk5VTUJFUikgeyAvLyDnrYnlt67luo/liJcgW2VuZCBjYiBpbnRlcnZhbF18W2JlZ2luIGVuZCBpbnRlcnZhbF0KCQkJdmFyIGJlZ2luID0gMCwgZW5kID0gbGlzdCwgc3RlcCA9IHR5cGVvZiBpbnRlcnZhbCA9PSBsYW5nLk5VTUJFUj8gaW50ZXJ2YWw6IDEKCQkJaWYgKHR5cGVvZiBjYiA9PSBsYW5nLk5VTUJFUikgeyBiZWdpbiA9IGxpc3QsIGVuZCA9IGNiLCBjYiA9IG51bGwgfQoJCQlsaXN0ID0gW107IGZvciAodmFyIGkgPSBiZWdpbjsgaSA8IGVuZDsgaSArPSBzdGVwKSB7IGxpc3QucHVzaChpKSB9CgkJfQoKCQlsaXN0ID0gbGlzdHx8W10KCQlpZiAoaW50ZXJ2YWwgPiAwKSB7IC8vIOaXtumXtOW6j+WIlwoJCQlmdW5jdGlvbiBsb29wKGkpIHsgaWYgKGkgPj0gbGlzdC5sZW5ndGgpIHsgcmV0dXJuIHR5cGVvZiBjYnMgPT0gbGFuZy5GVU5DVElPTiAmJiBjYnMobGlzdCkgfQoJCQkJY2IobGlzdFtpXSwgaSwgbGlzdCksIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IGxvb3AoaSsxKSB9LCBpbnRlcnZhbCkKCQkJfQoJCQl0eXBlb2YgY2IgPT0gbGFuZy5GVU5DVElPTiAmJiBsaXN0Lmxlbmd0aCA+IDAgJiYgc2V0VGltZW91dChmdW5jdGlvbigpIHsgbG9vcCgwKSB9LCBpbnRlcnZhbC80KQoJCX0gZWxzZSB7IC8vIOmAieaLqeW6j+WIlwoJCQl2YXIgc2xpY2UgPSBbXSwgcmVzCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykgewoJCQkJdHlwZW9mIGNiID09IGxhbmcuRlVOQ1RJT04/IChyZXMgPSBjYihsaXN0W2ldLCBpLCBsaXN0KSkgIT0gdW5kZWZpbmVkICYmIHNsaWNlLnB1c2gocmVzKTogc2xpY2UucHVzaChsaXN0W2ldKQoJCQl9OyBsaXN0ID0gc2xpY2UKCQl9CgkJcmV0dXJuIGxpc3QKCX0pLAoJTmV4dDogc2h5KCLov63ku6PlmagiLCBmdW5jdGlvbihsaXN0LCBjYiwgY2JzKSB7CgkJc3dpdGNoICh0eXBlb2YgbGlzdCkgewoJCQljYXNlIGxhbmcuT0JKRUNUOiBpZiAobGlzdCA9PSBudWxsKSB7IGxpc3QgPSBbXTsgYnJlYWsgfQoJCQkJaWYgKGxpc3QubGVuZ3RoID09IHVuZGVmaW5lZCkgeyB2YXIgbHMgPSBbXTsgZm9yICh2YXIgayBpbiBsaXN0KSB7IGxzLnB1c2goaykgfSBsaXN0ID0gbHMgfSBicmVhawoJCQlkZWZhdWx0OiBpZiAobGlzdCA9PSB1bmRlZmluZWQpIHsgbGlzdCA9IFtdOyBicmVhayB9CgkJCQlsaXN0ID0gW2xpc3RdCgkJfQoKCQlmdW5jdGlvbiBuZXh0KGkpIHsgaSA8IGxpc3QubGVuZ3RoPyAgdHlwZW9mIGNiID09IGxhbmcuRlVOQ1RJT04gJiYgY2IobGlzdFtpXSwgZnVuY3Rpb24oKSB7IG5leHQoaSsxKSB9LCBpLCBsaXN0KToKCQkJCXR5cGVvZiBjYnMgPT0gbGFuZy5GVU5DVElPTiAmJiBjYnMobGlzdCkgfQoJCXJldHVybiBuZXh0KDApLCBsaXN0Cgl9KSwKCUl0ZW1zOiBzaHkoIui/reS7o+WZqCIsIGZ1bmN0aW9uKG9iaiwgY2IpIHsgdmFyIGxpc3QgPSBbXQoJCWZvciAodmFyIGsgaW4gb2JqKSB7CgkJCWxpc3QgPSBsaXN0LmNvbmNhdCh0aGlzLkxpc3Qob2JqW2tdLCBmdW5jdGlvbih2LCBpKSB7CgkJCQlyZXR1cm4gdHlwZW9mIGNiID09IGxhbmcuRlVOQ1RJT04gJiYgY2IodiwgaSwgaywgb2JqKQoJCQl9KSkKCQl9CgkJcmV0dXJuIGxpc3QKCX0pLAoJSXRlbVNvcnQ6IHNoeSgi6L+t5Luj5ZmoIiwgZnVuY3Rpb24ob2JqLCBrZXksIGNiKSB7IHZhciBsaXN0ID0gW10KCQl2YXIgb3JkZXIgPSBbXSwga2V5cyA9IHt9LCB2YWxzID0ge30sIGkgPSAwCgkJZm9yICh2YXIgayBpbiBvYmopIHsgbyA9IG9ialtrXVtrZXldfHxpKysKCQkJb3JkZXIucHVzaChvKSwga2V5c1tvXSA9IGssIHZhbHNbb10gPSBvYmpba10KCQl9OyBvcmRlci5zb3J0KCkKCgkJZm9yICh2YXIgaSBpbiBvcmRlcikgeyB2YXIgayA9IG9yZGVyW2ldCgkJCXZhciByZXMgPSB0eXBlb2YgY2IgPT0gbGFuZy5GVU5DVElPTj8gY2Ioa2V5c1trXSwgdmFsc1trXSk6IGsKCQkJcmVzICE9IHVuZGVmaW5lZCAmJiBsaXN0LnB1c2gocmVzKQoJCX0KCQlyZXR1cm4gbGlzdAoJfSksCglJdGVtOiBzaHkoIui/reS7o+WZqCIsIGZ1bmN0aW9uKG9iaiwgY2IpIHsgdmFyIGxpc3QgPSBbXQoJCWZvciAodmFyIGsgaW4gb2JqKSB7CgkJCXZhciByZXMgPSB0eXBlb2YgY2IgPT0gbGFuZy5GVU5DVElPTj8gY2Ioaywgb2JqW2tdKTogawoJCQlyZXMgIT0gdW5kZWZpbmVkICYmIGxpc3QucHVzaChyZXMpCgkJfQoJCXJldHVybiBsaXN0Cgl9KSwKCUl0ZW1DQjogc2h5KCLov63ku6PlmagiLCBmdW5jdGlvbihtZXRhLCBjYiwgY2FuLCBpdGVtKSB7IHZhciBsaXN0ID0gW10KCQlmb3IgKHZhciBrIGluIG1ldGEpIHsgKGZ1bmN0aW9uKGspIHsKCQkJaWYgKGsuaW5kZXhPZigib24iKSA9PSAwICYmIHR5cGVvZiBtZXRhW2tdID09IGxhbmcuRlVOQ1RJT04pIHsKCQkJCWlmICh0eXBlb2YgY2IgPT0gbGFuZy5GVU5DVElPTikgewoJCQkJCWNiKGssIG1ldGFba10pCgkJCQl9IGVsc2UgewoJCQkJCWNiW2tdID0gZnVuY3Rpb24oZXZlbnQpIHsgbWV0YVtrXShldmVudCwgY2FuLCBpdGVtKSB9CgkJCQl9CgkJCQlsaXN0LnB1c2goaykKCQkJfQoJCX0pKGspIH0KCQlyZXR1cm4gbGlzdAoJfSksCgoJU3BsaXRJbnB1dDogZnVuY3Rpb24oaXRlbSwgdHlwZSkgeyBpZiAodHlwZW9mIGl0ZW0gPT0gbGFuZy5PQkpFQ1QpIHsgcmV0dXJuIGl0ZW0gfQoJCXR5cGUgPSB0eXBlfHxodG1sLlRFWFQ7IHN3aXRjaCAoaXRlbSkgewoJCQljYXNlIG1kYi5MSVNUOiByZXR1cm4ge3R5cGU6IHR5cGUgPSBodG1sLkJVVFRPTiwgbmFtZTogaXRlbSwgYWN0aW9uOiBpY2UuQVVUT30KCQkJY2FzZSBjbGkuQkFDSzogcmV0dXJuIHt0eXBlOiB0eXBlID0gaHRtbC5CVVRUT04sIG5hbWU6IGl0ZW19CgkJCWNhc2UgbWRiLk5BTUU6IHJldHVybiB7dHlwZTogdHlwZSA9IGh0bWwuVEVYVCwgbmFtZTogaXRlbX0KCQkJY2FzZSBtZGIuVEVYVDogcmV0dXJuIHt0eXBlOiB0eXBlID0gaHRtbC5URVhUQVJFQSwgbmFtZTogaXRlbX0KCQkJZGVmYXVsdDogdmFyIGxzID0gdGhpcy5TcGxpdChpdGVtLCAiICIsICI6PUAiKSwgcmVzID0ge3R5cGU6IHR5cGUsIG5hbWU6IGxzWzBdfTsgZm9yICh2YXIgaSA9IDE7IGkgPCBscy5sZW5ndGg7IGkgKz0gMikgewoJCQkJCXN3aXRjaCAobHNbaV0pIHsKCQkJCQkJY2FzZSAiOiI6IHJlc1ttZGIuVFlQRV0gPSBsc1tpKzFdOyBicmVhawoJCQkJCQljYXNlICI9IjoKCQkJCQkJCWlmIChyZXNbbWRiLlRZUEVdID09IGh0bWwuU0VMRUNUKSB7CgkJCQkJCQkJcmVzLnZhbHVlcyA9IHRoaXMuU3BsaXQobHNbaSsxXSkKCQkJCQkJCQlmb3IgKHZhciBqID0gMTsgaiA8IHJlcy52YWx1ZXMubGVuZ3RoOyBqKyspIHsKCQkJCQkJCQkJaWYgKHJlcy52YWx1ZXNbMF0gPT0gIiIgfHwgcmVzLnZhbHVlc1swXSA9PSByZXMudmFsdWVzW2pdKSB7CgkJCQkJCQkJCQlyZXMudmFsdWUgPSByZXMudmFsdWVzWzBdLCByZXMudmFsdWVzID0gcmVzLnZhbHVlcy5zbGljZSgxKQoJCQkJCQkJCQkJYnJlYWsKCQkJCQkJCQkJfQoJCQkJCQkJCX0KCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJcmVzLnZhbHVlID0gbHNbaSsxXQoJCQkJCQkJfQoJCQkJCQkJYnJlYWsKCQkJCQkJY2FzZSAiQCI6IHJlc1tjdHguQUNUSU9OXSA9IGxzW2krMV07IGJyZWFrCgkJCQkJfQoJCQkJfSByZXR1cm4gcmVzCgkJfQoJfSwKCVRpbWVyMzAwbXM6IGZ1bmN0aW9uKGNiKSB7IHRoaXMuVGltZXIoMzAwLCBjYikgfSwKCVRpbWVyMzAwOiBmdW5jdGlvbihjYikgeyB0aGlzLlRpbWVyKDMwMCwgY2IpIH0sCglUaW1lcjNzOiBmdW5jdGlvbihjYikgeyB0aGlzLlRpbWVyKDMwMDAsIGNiKSB9LAoJVGltZXI6IHNoeSgi5a6a5pe25ZmoLCB2YWx1ZSwgWzEsMiwzLDRdLCB7aW50ZXJ2YWwsIGxlbmd0aH0iLCBmdW5jdGlvbihpbnRlcnZhbCwgY2IsIGNicykgewoJCXZhciB0aW1lciA9IHtzdG9wOiBmYWxzZX07IGZ1bmN0aW9uIGxvb3AoaSkgewoJCQl0aW1lci5zdG9wIHx8IGkgPj0gaW50ZXJ2YWwubGVuZ3RoICYmIGludGVydmFsLmxlbmd0aCA+PSAwIHx8IGNiKHRpbWVyLCBpbnRlcnZhbC5pbnRlcnZhbHx8aW50ZXJ2YWxbaV0sIGksIGludGVydmFsKT8KCQkJCXR5cGVvZiBjYnMgPT0gbGFuZy5GVU5DVElPTiAmJiBjYnModGltZXIsIGludGVydmFsKTogc2V0VGltZW91dChmdW5jdGlvbigpIHsgbG9vcChpKzEpIH0sIGludGVydmFsLmludGVydmFsfHxpbnRlcnZhbFtpKzFdKQoJCX0KCgkJaW50ZXJ2YWwgPSB0eXBlb2YgaW50ZXJ2YWwgPT0gbGFuZy5PQkpFQ1Q/IGludGVydmFsOiBbaW50ZXJ2YWxdCgkJaWYgKGludGVydmFsLmludGVydmFsID09IDApIHsgY2IoKTsgcmV0dXJuIHRpbWVyIH0KCgkJdHlwZW9mIGNiID09IGxhbmcuRlVOQ1RJT04gJiYgc2V0VGltZW91dChmdW5jdGlvbigpIHsgbG9vcCgwKSB9LCBpbnRlcnZhbC5pbnRlcnZhbHx8aW50ZXJ2YWxbMF0pCgkJcmV0dXJuIHRpbWVyCgl9KSwKfSkK",
        "usr/volcanos/lib/misc.js": "",
        "usr/volcanos/lib/page.js": "",
        "usr/volcanos/lib/user.js": "",
        "usr/volcanos/page/cache.css": "",
        "usr/volcanos/page/cache.js": "",
        "usr/volcanos/page/can.css": "",
        "usr/volcanos/page/can.js": "",
        "usr/volcanos/page/index.css": "",
        "usr/volcanos/page/index.html": "PCFET0NUWVBFIGh0bWw+CjxoZWFkPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTAuOCxtYXhpbXVtLXNjYWxlPTAuOCx1c2VyLXNjYWxhYmxlPTAiPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPjx0aXRsZT52b2xjYW5vczwvdGl0bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvcGFnZS9pbmRleC5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL3BhZ2UvY2FjaGUuY3NzIj4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSIvZmF2aWNvbi5pY28iPgo8L2hlYWQ+Cjxib2R5PgogICAgPHNjcmlwdCBzcmM9Ii9wcm90by5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iL3BhZ2UvY2FjaGUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii9wYWdlL2luZGV4LmpzIj48L3NjcmlwdD4KPC9ib2R5PgoK",
        "usr/volcanos/page/index.js": "Vm9sY2Fub3Moe25hbWU6ICJjaGF0Iiwgcml2ZXI6IHsKCXByb2R1Y3Q6IHtuYW1lOiAi5Lqn5ZOB576kIiwgc3Rvcm06IHsKCQlvZmZpY2U6IHtuYW1lOiAi5Yqe5YWsIG9mZmljZSIsICBsaXN0OiBbCgkJCXtuYW1lOiAiZmVlbCIsIGhlbHA6ICLlvbHpn7PlqpLkvZMiLCBpbmRleDogIndlYi53aWtpLmZlZWwifSwKCQkJe25hbWU6ICJkcmF3IiwgaGVscDogIuaAnee7tOWvvOWbviIsIGluZGV4OiAid2ViLndpa2kuZHJhdyJ9LAoJCQl7bmFtZTogImRhdGEiLCBoZWxwOiAi5pWw5o2u6KGo5qC8IiwgaW5kZXg6ICJ3ZWIud2lraS5kYXRhIn0sCgkJCXtuYW1lOiAicGxhbiIsIGhlbHA6ICLorqHliJLku7vliqEiLCBpbmRleDogIndlYi50ZWFtLnBsYW4ifSwKCQkJe25hbWU6ICJjb250ZXh0IiwgaGVscDogIue8lueoiyIsIGluZGV4OiAid2ViLndpa2kud29yZCIsIGFyZ3M6IFsic3JjL21haW4uc2h5Il19LAoJCV19LAoJfX0sCglwcm9qZWN0OiB7bmFtZTogIueglOWPkee+pCIsIHN0b3JtOiB7CgkJc3R1ZGlvOiB7bmFtZTogIueglOWPkSBzdHVkaW8iLCBsaXN0OiBbCgkJCXtuYW1lOiAidmltZXIiLCBoZWxwOiAi57yW6L6R5ZmoIiwgaW5kZXg6ICJ3ZWIuY29kZS52aW1lciJ9LAoJCQl7bmFtZTogInJlcG9zIiwgaGVscDogIuS7o+eggeW6kyIsIGluZGV4OiAid2ViLmNvZGUuZ2l0LnN0YXR1cyJ9LAoJCQl7bmFtZTogInBsYW4iLCBoZWxwOiAi5Lu75Yqh6KGoIiwgaW5kZXg6ICJ3ZWIudGVhbS5wbGFuIn0sCgkJCXtuYW1lOiAidG9kbyIsIGhlbHA6ICLlvoXlip7pobkiLCBpbmRleDogIndlYi50ZWFtLnRvZG8ifSwKCQkJe25hbWU6ICJjdHgiLCBoZWxwOiAi5LiK5LiL5paHIiwgaW5kZXg6ICJ3ZWIud2lraS53b3JkIn0sCgkJXX0sCgl9fSwKCXByb2ZpbGU6IHtuYW1lOiAi5rWL6K+V576kIiwgc3Rvcm06IHsKCQl3ZWJzaXRlOiB7bmFtZTogIuWumuWItiB3ZWJzaXRlIiwgaW5kZXg6IFsKCQkJIndlYi5jaGF0LndlYnNpdGUiLAoJCQkid2ViLmNoYXQuZGl2IiwKCQkJIndlYi5jb2RlLnZpbWVyIiwKCQkJIndlYi5kcmVhbSIsCgkJXX0sCgkJcmVsZWFzZToge25hbWU6ICLlj5HluIMgcmVsZWFzZSIsIGluZGV4OiBbCgkJCSJ3ZWIuY29kZS5pbnN0YWxsIiwgIndlYi5jb2RlLnVwZ3JhZGUiLCAid2ViLmNvZGUucHVibGlzaCIsICJ3ZWIuY29kZS5jb21waWxlIiwgIndlYi5jb2RlLmF1dG9nZW4iLCAid2ViLmNvZGUuYmlucGFjayIsICJ3ZWIuY29kZS53ZWJwYWNrIiwKCQkJIndlYi5jb2RlLmdpdC5zdGF0dXMiLCAid2ViLmNvZGUuZ2l0LnNlcnZlciIsCgkJXX0sCgkJcmVzZWFyY2g6IHtuYW1lOiAi5rWL6K+VIHJlc2VhcmNoIiwgaW5kZXg6IFsKCQkJIndlYi5jb2RlLmZhdm9yIiwgIndlYi5jb2RlLmJlbmNoIiwgIndlYi5jb2RlLnBwcm9mIiwKCQkJIndlYi5jb2RlLmNhc2UiLAoJCV19LAoJfX0sCglvcGVyYXRlOiB7bmFtZTogIui/kOe7tOe+pCIsIHN0b3JtOiB7CgkJYWFhOiB7bmFtZTogIuadg+mZkCBhYWEiLCBpbmRleDogWwoJCQkidXNlciIsICJ0b3RwIiwgInNlc3MiLCAicm9sZSIsCgkJXX0sCgkJd2ViOiB7bmFtZTogIuW6lOeUqCB3ZWIiLCBpbmRleDogWwoJCQkic2VydmUiLCAic3BhY2UiLCAiZHJlYW0iLCAicm91dGUiLAoJCQkic2hhcmUiLCAic3BpZGUiLCAiY2FjaGUiLCAic3RvcnkiLAoJCV19LAoJCWNsaToge25hbWU6ICLns7vnu58gY2xpIiwgaW5kZXg6IFsKCQkJInFyY29kZSIsICJkYWVtb24iLCAic3lzdGVtIiwgInJ1bnRpbWUiLCAibWlycm9ycyIsICJmb3JldmVyIiwKCQldfSwKCQluZnM6IHtuYW1lOiAi5paH5Lu2IG5mcyIsIGluZGV4OiBbCgkJCSJjYXQiLCAiZGlyIiwgInBvcnQiLCAidGFpbCIsICJ0cmFzaCIsCgkJXX0sCgl9fSwKfX0pCg==",
        "usr/volcanos/page/package-lock.json": "ewogICJyZXF1aXJlcyI6IHRydWUsCiAgImxvY2tmaWxlVmVyc2lvbiI6IDEsCiAgImRlcGVuZGVuY2llcyI6IHsKICAgICJ4dGVybSI6IHsKICAgICAgInZlcnNpb24iOiAiNC4xOS4wIiwKICAgICAgInJlc29sdmVkIjogImh0dHBzOi8vcmVnaXN0cnkubnBtanMub3JnL3h0ZXJtLy0veHRlcm0tNC4xOS4wLnRneiIsCiAgICAgICJpbnRlZ3JpdHkiOiAic2hhNTEyLWMzQ3A0ZU9Wc1lZNVE4MzlkUjVJZWpnaFJQcHhjaUdtTFdXYVA5ZytwcGZNZUJDaE1lTGExRENBK3BtWC9qeURaK3p4Rk9tbEpMLzgycVZkYXlWb0dRPT0iCiAgICB9LAogICAgInh0ZXJtLWFkZG9uLWZpdCI6IHsKICAgICAgInZlcnNpb24iOiAiMC41LjAiLAogICAgICAicmVzb2x2ZWQiOiAiaHR0cHM6Ly9yZWdpc3RyeS5ucG1qcy5vcmcveHRlcm0tYWRkb24tZml0Ly0veHRlcm0tYWRkb24tZml0LTAuNS4wLnRneiIsCiAgICAgICJpbnRlZ3JpdHkiOiAic2hhNTEyLURzUzlmcWhYSGFjRW1zUHhCSlp2ZmoybGEzMEl6OXhrK1VLamhRZ25ZTmtyVUlONUNZTGJ3N1dFZnoxMTdjNytTODZTL3RwSFBmdk54SnNGNS9HOHdRPT0iCiAgICB9LAogICAgInh0ZXJtLWFkZG9uLXdlYi1saW5rcyI6IHsKICAgICAgInZlcnNpb24iOiAiMC42LjAiLAogICAgICAicmVzb2x2ZWQiOiAiaHR0cHM6Ly9yZWdpc3RyeS5ucG1qcy5vcmcveHRlcm0tYWRkb24td2ViLWxpbmtzLy0veHRlcm0tYWRkb24td2ViLWxpbmtzLTAuNi4wLnRneiIsCiAgICAgICJpbnRlZ3JpdHkiOiAic2hhNTEyLUg2WHpqV1dadThGQm8rZm5ZcHhkUGs5dzVNNmRyYnN2d1BFSlpHUlMzOE1paGlRYVZGcEtsQ01LZGZSZ0RiS0dFNTMwdHcxeUg1NHJocFpmSGd0Mi9BPT0iCiAgICB9CiAgfQp9Cg==",
        "usr/volcanos/page/package.json": "ewogICJkZXBlbmRlbmNpZXMiOiB7CiAgICAieHRlcm0iOiAiXjQuMTkuMCIsCiAgICAieHRlcm0tYWRkb24tZml0IjogIl4wLjUuMCIsCiAgICAieHRlcm0tYWRkb24td2ViLWxpbmtzIjogIl4wLjYuMCIKICB9Cn0K",
        "usr/volcanos/panel/action.css": "ZmllbGRzZXQuQWN0aW9uIHsgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDExNCwgMTUzLCAxNjIsIDAuNTQpOyBtaW4td2lkdGg6MTYwcHg7IH0KZmllbGRzZXQuQWN0aW9uPmRpdi5hY3Rpb24geyBiYWNrZ3JvdW5kLWNvbG9yOiM0NjgyYjQ2Yjsgd2lkdGg6aW5oZXJpdDsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LkFjdGlvbj5kaXYuYWN0aW9uIGRpdi50YWJzIHsgZm9udC1zaXplOjEuMXJlbTsgcGFkZGluZzo1cHg7IGhlaWdodDoyMXB4OyB9CmZpZWxkc2V0LkFjdGlvbj5kaXYuYWN0aW9uIGRpdi50YWJzLnNlbGVjdCB7IGJhY2tncm91bmQ6IzY0OTVlZDYzOyB9CmZpZWxkc2V0LkFjdGlvbj5kaXYuYWN0aW9uIGRpdi50YWJzOmhvdmVyIHsgYmFja2dyb3VuZDojNjQ5NWVkNjM7IH0KZmllbGRzZXQuQWN0aW9uLnRhYnM+ZGl2LmFjdGlvbiB7IGRpc3BsYXk6YmxvY2s7IH0KZmllbGRzZXQuQWN0aW9uLnRhYnM+ZGl2Lm91dHB1dD5maWVsZHNldD5sZWdlbmQgeyBkaXNwbGF5Om5vbmU7IH0KZmllbGRzZXQuQWN0aW9uLnRhYnM+ZGl2Lm91dHB1dCBmaWVsZHNldC5wbHVnaW4geyBkaXNwbGF5Om5vbmU7IH0KZmllbGRzZXQuQWN0aW9uLnRhYnM+ZGl2Lm91dHB1dCBmaWVsZHNldC5wbHVnaW4uc2VsZWN0IHsgZGlzcGxheTpibG9jazsgfQoKZmllbGRzZXQuQWN0aW9uLmdyaWQ+ZGl2Lm91dHB1dCBmaWVsZHNldC5wbHVnaW4geyBvdmVyZmxvdzphdXRvOyBmbG9hdDpsZWZ0OyB9CmZpZWxkc2V0LkFjdGlvbi5ncmlkPmRpdi5vdXRwdXQgZmllbGRzZXQucGx1Z2luPmRpdi5vdXRwdXQgeyBvdmVyZmxvdzphdXRvOyB9CgpmaWVsZHNldC5BY3Rpb24uZnJlZT5kaXYub3V0cHV0IGZpZWxkc2V0LnBsdWdpbiB7IHBvc2l0aW9uOmFic29sdXRlOyB9CmZpZWxkc2V0LkFjdGlvbi5mcmVlPmRpdi5vdXRwdXQgZmllbGRzZXQucGx1Z2luLnNlbGVjdCB7IGRpc3BsYXk6YmxvY2s7IH0KZmllbGRzZXQuQWN0aW9uLmZsb3c+ZGl2Lm91dHB1dCBmaWVsZHNldC5wbHVnaW4geyBmbG9hdDpsZWZ0OyB9CgpmaWVsZHNldC5wYW5lbC5jbWQ+ZGl2Lm91dHB1dD5maWVsZHNldC5wbHVnaW4geyBwYWRkaW5nOjA7IG1hcmdpbjowOyB9CmZpZWxkc2V0LnBhbmVsLmNtZD5kaXYub3V0cHV0PmZpZWxkc2V0LnBsdWdpbj5sZWdlbmQgeyBwYWRkaW5nOjAgMTBweDsgbWFyZ2luLXJpZ2h0OjNweDsgZmxvYXQ6bGVmdDsgfQoKZmllbGRzZXQuQWN0aW9uPmRpdi5wcm9qZWN0LnRvZ2dsZSB7CgliYWNrZ3JvdW5kLWNvbG9yOmNvcm5zaWxrOyBvcGFjaXR5OjAuNDsgY29sb3I6dGVhbDsgZm9udC1zaXplOiAyOHB4OyBwYWRkaW5nLXRvcDogNTBweDsgaGVpZ2h0OiAxMDBweDsgd2lkdGg6MjBweDsgcG9zaXRpb246IGZpeGVkOyB0b3A6IDMwJTsKCWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOjIwcHg7IGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjIwcHg7Cn0KCmRpdi5oZWFkIHsgYmFja2dyb3VuZC1jb2xvcjojNDA0MDQwOyBjb2xvcjp3aGl0ZTsgcGFkZGluZzo1cHg7IGhlaWdodDo0MnB4OyBjbGVhcjpib3RoOyB9CmRpdi5oZWFkIGRpdi51c2VybmFtZSB7IGZsb2F0OnJpZ2h0OyBtYXJnaW4tcmlnaHQ6MTBweDsgfQpkaXYuaGVhZCBkaXYudXNlcm5hbWUgZGl2Lm5hbWUgeyBwYWRkaW5nOjEwcHg7IGZsb2F0OmxlZnQ7IH0KZGl2LmhlYWQgZGl2LnVzZXJuYW1lIGRpdi5pY29uIHsgZmxvYXQ6bGVmdDsgfQpkaXYuaGVhZCBkaXYudXNlcm5hbWUgaW1nIHsgaGVpZ2h0OjQycHg7IH0KZGl2LmhlYWQgZGl2Lm1lbnUgeyBjdXJzb3I6cG9pbnRlcjsgcGFkZGluZzoxMHB4OyBmbG9hdDpsZWZ0OyB9CmRpdi5oZWFkPmRpdi5tZW51OmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjojMzIzMjMyOyB9CmRpdi5sZWZ0IHsgYmFja2dyb3VuZC1jb2xvcjojMzIzMjMyOyB3aWR0aDoxNjBweDsgcGFkZGluZzoyMHB4OyBvdmVyZmxvdzphdXRvOyBmbG9hdDpsZWZ0OyB9CmRpdi5sZWZ0IGRpdi5pdGVtIHsgYmFja2dyb3VuZC1jb2xvcjojMzIzMjMyOyBjb2xvcjp3aGl0ZTsgcGFkZGluZzo1cHggMTBweDsgfQpkaXYubGVmdCBkaXYuaXRlbTpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IzQwNDA0MDsgfQpkaXYubGVmdCBkaXYudXNlcm5hbWUgZGl2IHsgY29sb3I6d2hpdGU7IHRleHQtYWxpZ246Y2VudGVyOyBwYWRkaW5nOjEwcHg7IH0KZGl2LmxlZnQgZGl2LnVzZXJuYW1lIGltZyB7IHdpZHRoOjEyMHB4OyB9CmRpdi5tYWluIGlmcmFtZSB7IGJvcmRlcjowOyB9CmRpdi5tYWluIGlucHV0W3R5cGU9YnV0dG9uXSB7IHBhZGRpbmc6MCAyMHB4OyB9CmRpdi5tYWluIHsgYmFja2dyb3VuZC1jb2xvcjojY2NjY2NjOyBjb2xvcjpibGFjazsgb3ZlcmZsb3c6YXV0bzsgZmxvYXQ6bGVmdDsgfQpkaXYubWFpbiBmaWVsZHNldC5wbHVnaW4geyBiYWNrZ3JvdW5kLWNvbG9yOiNmOGY4Zjg7IHBhZGRpbmc6MTBweDsgbWFyZ2luOjEwcHg7IH0KZGl2Lm1haW4gZmllbGRzZXQucGx1Z2luIGxlZ2VuZCB7IG1hcmdpbi1ib3R0b206MTBweDsgZGlzcGxheTpibG9jazsgZmxvYXQ6bGVmdDsgfQpkaXYubWFpbiBmaWVsZHNldC5wbHVnaW4gc2VsZWN0IHsgb3V0bGluZTpub25lOyBib3gtc2hhZG93Om5vbmU7IH0KZGl2Lm1haW4gZmllbGRzZXQucGx1Z2luIGZvcm0ub3B0aW9uIHsgZGlzcGxheTpibG9jazsgY2xlYXI6Ym90aDsgfQpkaXYubWFpbiBmaWVsZHNldC5wbHVnaW4gZm9ybS5vcHRpb24gZGl2Lml0ZW0geyBtYXJnaW46NXB4OyB9CmRpdi5tYWluIGZpZWxkc2V0LnBsdWdpbiBkaXYuYWN0aW9uIGRpdi5pdGVtIHsgbWFyZ2luOjVweDsgfQpkaXYubWFpbiBmaWVsZHNldC5wbHVnaW4gdGFibGUuY29udGVudCB0ciB7IGJvcmRlcjpzb2xpZCAxcHggbGlnaHRncmF5OyB9CmRpdi5tYWluIGZpZWxkc2V0LnBsdWdpbiB0YWJsZS5jb250ZW50IHRyOmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZXNtb2tlOyB9CmRpdi5tYWluIGZpZWxkc2V0LnBsdWdpbiB0YWJsZS5jb250ZW50IHRoIHsgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZXNtb2tlOyBwYWRkaW5nOjEwcHg7IH0KZGl2Lm1haW4gZmllbGRzZXQucGx1Z2luIHRhYmxlLmNvbnRlbnQgdGQgeyBiYWNrZ3JvdW5kLWNvbG9yOndoaXRlOyBwYWRkaW5nOjEwcHg7IH0KZGl2LmZvb3QgeyBiYWNrZ3JvdW5kLWNvbG9yOiM0MDQwNDA7IGNvbG9yOndoaXRlOyBwYWRkaW5nOjVweDsgaGVpZ2h0OjQycHg7IGNsZWFyOmJvdGg7IH0KZGl2LmZvb3QgZGl2LnVzZXJuYW1lIHsgZmxvYXQ6cmlnaHQ7IG1hcmdpbi1yaWdodDoxMHB4OyB9CmRpdi5mb290IGRpdi51c2VybmFtZSBkaXYubmFtZSB7IHBhZGRpbmc6MTBweDsgZmxvYXQ6bGVmdDsgfQpkaXYuZm9vdCBkaXYudXNlcm5hbWUgZGl2Lmljb24geyBmbG9hdDpsZWZ0OyB9CmRpdi5mb290IGRpdi51c2VybmFtZSBpbWcgeyBoZWlnaHQ6NDJweDsgfQpkaXYuZm9vdCBkaXYubWVudSB7IGN1cnNvcjpwb2ludGVyOyBwYWRkaW5nOjEwcHg7IGZsb2F0OmxlZnQ7IH0KZGl2LmZvb3Q+ZGl2Lm1lbnU6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiMzMjMyMzI7IH0KCmRpdi50YWJzOmhvdmVyIHsKCWJhY2tncm91bmQtY29sb3I6IzI3MjcyNzsKfQpkaXYudGFicyBkaXYubmFtZSB7CgloZWlnaHQ6NDZweDsgd2lkdGg6LXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKCXBvc2l0aW9uOnN0aWNreTsgdG9wOjVweDsKCXotaW5kZXg6MTsKfQpkaXYudGFicyBkaXYubmFtZSBkaXYuaXRlbSB7Cgljb2xvcjpncmF5OyBwYWRkaW5nOjEwcHg7IGZsb2F0OmxlZnQ7Cn0KZGl2LnRhYnMgZGl2Lm5hbWUgZGl2Lml0ZW0uc2VsZWN0IHsKCWJhY2tncm91bmQtY29sb3I6IzQwNDA0MDsgY29sb3I6d2hpdGU7CiAJYm9yZGVyLWJvdHRvbTpzb2xpZCByZWQgMnB4Owp9CmRpdi50YWJzIGRpdi5wYWdlIHsKCW92ZXJmbG93OmF1dG87IGNsZWFyOmJvdGg7Cn0KZGl2LnRhYnMgZGl2LnBhZ2U+ZGl2LmlucHV0IHsKCXBhZGRpbmc6NXB4OyBwb3NpdGlvbjpzdGlja3k7IHRvcDowcHg7Cn0KZGl2LnRhYnMgZGl2LnBhZ2U+ZGl2LmlucHV0IGlucHV0IHsKCWJhY2tncm91bmQtY29sb3I6IzIxMjEyMTsgY29sb3I6d2hpdGU7IGJvcmRlcjowOyBvdXRsaW5lOm5vbmU7IHdpZHRoOjIzMHB4Owp9CmRpdi50YWJzIGRpdi5wYWdlPmRpdi5pdGVtIHsKCWJhY2tncm91bmQtY29sb3I6IzQwNDA0MDsgY2xlYXI6Ym90aDsgZGlzcGxheTpub25lOwp9CmRpdi50YWJzIGRpdi5wYWdlPmRpdi5saXN0IHsKCXBhZGRpbmctbGVmdDoyMHB4OyBkaXNwbGF5Om5vbmU7IGNsZWFyOmJvdGg7Cn0KZGl2LnRhYnMgZGl2LnBhZ2U+ZGl2Lmxpc3Quc2VsZWN0IHsKCWJhY2tncm91bmQtY29sb3I6IzMyMzIzMjsgZGlzcGxheTpibG9jazsKfQpkaXYubGVmdCBkaXYubGlzdCB7CglwYWRkaW5nLWxlZnQ6MjBweDsKfQoKZGl2LnRhYnMubGVmdCBkaXYubmFtZSB7CglmbG9hdDpsZWZ0Owp9CmRpdi50YWJzLmxlZnQgZGl2Lm5hbWUgZGl2Lml0ZW0gewoJYm9yZGVyLWJvdHRvbTpub25lOyBmbG9hdDpub25lOwp9CmRpdi50YWJzLmxlZnQgZGl2Lm5hbWUgZGl2Lml0ZW0uc2VsZWN0IHsKCWJvcmRlci1yaWdodDpzb2xpZCByZWQgMnB4Owp9CmRpdi50YWJzLmxlZnQgZGl2LnBhZ2UgewoJd2lkdGg6LXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKIAljbGVhcjpub25lOyBmbG9hdDpsZWZ0Owp9CmRpdi50YWJzLmxlZnQgZGl2LnBhZ2U+ZGl2Lml0ZW0gewoJZGlzcGxheTpibG9jazsKfQoKZGl2LnRhYnMudm9pZCBkaXYubmFtZSB7CglkaXNwbGF5Om5vbmU7Cn0KZGl2LnRhYnMudm9pZCBkaXYucGFnZT5kaXYuaXRlbSB7CglkaXNwbGF5OmJsb2NrOwp9Cgo=",
        "usr/volcanos/panel/action.js": "",
        "usr/volcanos/panel/footer.css": "ZmllbGRzZXQuRm9vdGVyIHsgZm9udC1zaXplOjEuMXJlbTsgcGFkZGluZzowIDVweDsgY2xlYXI6Ym90aDsgfQpmaWVsZHNldC5Gb290ZXI+ZGl2Lm91dHB1dCB7IG92ZXJmbG93OmhpZGRlbjsgfQpmaWVsZHNldC5Gb290ZXI+ZGl2Lm91dHB1dCBkaXYgeyBwYWRkaW5nOjVweDsgaGVpZ2h0OjIxcHg7IGN1cnNvcjpwb2ludGVyOyB9CmZpZWxkc2V0LkZvb3Rlcj5kaXYub3V0cHV0IGRpdjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IzJlNTE1ZjsgfQpmaWVsZHNldC5Gb290ZXI+ZGl2Lm91dHB1dCBkaXYudGl0bGUgeyBmbG9hdDpsZWZ0OyB9CmZpZWxkc2V0LkZvb3Rlcj5kaXYub3V0cHV0IGRpdi5zdGF0ZSB7IGZvbnQtZmFtaWx5Om1vbm9zcGFjZTsgZmxvYXQ6cmlnaHQ7IH0KZmllbGRzZXQuRm9vdGVyPmRpdi5vdXRwdXQgZGl2LnRvYXN0IHsgYmFja2dyb3VuZC1jb2xvcjpkYXJrY3lhbjsgZmxvYXQ6cmlnaHQ7IH0KZmllbGRzZXQuRm9vdGVyPmRpdi5vdXRwdXQgZGl2LmNtZCB7IHBhZGRpbmc6MHB4OyBmbG9hdDpsZWZ0OyB9CmZpZWxkc2V0LkZvb3Rlcj5kaXYub3V0cHV0IGlucHV0W25hbWU9Y21kXSB7IHdpZHRoOjEyMHB4OyBib3JkZXItcmFkaXVzOjA7IH0KZmllbGRzZXQuRm9vdGVyPmRpdi5vdXRwdXQgaW5wdXRbbmFtZT1jbWRdOmZvY3VzIHsgd2lkdGg6MzIwcHg7IH0K",
        "usr/volcanos/panel/footer.js": "",
        "usr/volcanos/panel/header.css": "ZmllbGRzZXQuSGVhZGVyIHsgZm9udC1zaXplOjEuMXJlbTsgaGVpZ2h0OjMxcHg7IG92ZXJmbG93OmF1dG87IHBhZGRpbmc6MCA1cHg7IHotaW5kZXg6MTA7IH0KZmllbGRzZXQuSGVhZGVyPmRpdi5vdXRwdXQgeyBvdmVyZmxvdzpoaWRkZW47IH0KZmllbGRzZXQuSGVhZGVyPmRpdi5vdXRwdXQgZGl2IHsgcGFkZGluZzo1cHg7IGhlaWdodDoyMXB4OyBmbG9hdDpsZWZ0OyBjdXJzb3I6cG9pbnRlcjsgfQpmaWVsZHNldC5IZWFkZXI+ZGl2Lm91dHB1dCBkaXY6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiMyZTUxNWY7IH0KZmllbGRzZXQuSGVhZGVyPmRpdi5vdXRwdXQgZGl2LnRpdGxlIHsgZmxvYXQ6bGVmdDsgfQpmaWVsZHNldC5IZWFkZXI+ZGl2Lm91dHB1dCBkaXYuc3RhdGUgeyBmbG9hdDpyaWdodDsgfQpmaWVsZHNldC5IZWFkZXI+ZGl2Lm91dHB1dCBkaXYuc3RhdGUuYXZhdGFyIHsgcGFkZGluZzowOyBoZWlnaHQ6MzFweDsgfQpmaWVsZHNldC5IZWFkZXI+ZGl2Lm91dHB1dCBkaXYuc3RhdGUuYXZhdGFyPmltZyB7IGhlaWdodDozMXB4OyB9CmZpZWxkc2V0LkhlYWRlcj5kaXYub3V0cHV0IGRpdi5zZWFyY2ggeyBtYXJnaW4tbGVmdDoyMHB4OyBmbG9hdDpsZWZ0OyB9CmZpZWxkc2V0LkhlYWRlcj5kaXYub3V0cHV0IGRpdi5zZWFyY2g+aW5wdXQgeyBtYXJnaW4tdG9wOi01cHg7IGJvcmRlci1yYWRpdXM6MDsgfQoK",
        "usr/volcanos/panel/header.js": "",
        "usr/volcanos/panel/river.css": "ZmllbGRzZXQuUml2ZXIgeyBvdmVyZmxvdzphdXRvOyBmbG9hdDpsZWZ0OyB9CmZpZWxkc2V0LlJpdmVyPmRpdi5hY3Rpb24geyBkaXNwbGF5OmJsb2NrOyBwYWRkaW5nOjAgMTJweDsgfQpmaWVsZHNldC5SaXZlcj5kaXYub3V0cHV0IHsgd2lkdGg6MTgwcHg7IH0KZmllbGRzZXQuUml2ZXI+ZGl2Lm91dHB1dCBkaXYuaXRlbSB7IHBhZGRpbmc6M3B4IDE2cHg7IGJvcmRlci1sZWZ0OnNvbGlkIDNweCAjMDBmZmFlOyB9CmZpZWxkc2V0LlJpdmVyPmRpdi5vdXRwdXQgZGl2Lmxpc3QgZGl2Lml0ZW0geyBib3JkZXItbGVmdDpzb2xpZCAzcHggI2NjZGM0YzsgfQpmaWVsZHNldC5SaXZlcj5kaXYub3V0cHV0IGRpdi5saXN0IHsgcGFkZGluZy1sZWZ0OjVweDsgbWFyZ2luLWxlZnQ6OHB4OyB9Cg==",
        "usr/volcanos/panel/river.js": "",
        "usr/volcanos/panel/search.css": "ZmllbGRzZXQuU2VhcmNoIHsgYmFja2dyb3VuZDojMDQxYTI1YmQ7IHBhZGRpbmc6MTBweDsgcG9zaXRpb246Zml4ZWQ7IGxlZnQ6MHB4OyB0b3A6MzFweDsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LlNlYXJjaCBpbnB1dC53b3JkIHsgd2lkdGg6LXdlYmtpdC1maWxsLWF2YWlsYWJsZTsgfQpmaWVsZHNldC5wYW5lbC5TZWFyY2g+ZGl2LnN0YXR1cyB7IGJvcmRlci10b3A6MXB4IHNvbGlkIGRhcmtjeWFuOyB9Cg==",
        "usr/volcanos/panel/search.js": "",
        "usr/volcanos/plugin/input.js": "Vm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLmjqfku7bkuqTkupIiLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtZXRhLCBjYiwgdGFyZ2V0KSB7CgkJY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYigpOyBzd2l0Y2ggKG1ldGEudHlwZSkgewoJCQljYXNlIGh0bWwuU0VMRUNUOiBtZXRhLnZhbHVlICYmICh0YXJnZXQudmFsdWUgPSBtZXRhLnZhbHVlKTsgYnJlYWsKCQkJY2FzZSBodG1sLkJVVFRPTjogbWV0YS5hY3Rpb24gPT0gaWNlLkFVVE8gJiYgdGFyZ2V0LmNsaWNrKCk7IGJyZWFrCgkJfQoJfSwKCXJ1bjogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyBjYW4ucnVuKGNhbi5yZXF1ZXN0KGV2ZW50LCB7X3RvYXN0OiAi5omn6KGM5LitLi4uIn0pKSB9LAoJbGlzdDogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyBjYW4uc3VwLkNvbmYoIm1vZGUiKSAhPSAic2ltcGxlIiAmJiBjYW4ucnVuKGV2ZW50KSB9LAoJYmFjazogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyBjYW4uc3VwLm9uaW1wb3J0Ll9iYWNrKGNhbi5zdXApIH0sCglyZWZyZXNoOiBmdW5jdGlvbihldmVudCwgY2FuKSB7IGNhbi5ydW4oZXZlbnQpIH0sCgoJb25jbGljazogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyBjYW4uc3VwLnJlcXVlc3QoZXZlbnQsIHtfdG9hc3Q6ICLmiafooYzkuK0uLi4ifSkKCQljYW4uQ29uZihtZGIuVFlQRSkgPT0gaHRtbC5CVVRUT04gJiYgY2FuLnJ1bihldmVudCwgW2N0eC5BQ1RJT04sIGNhbi5Db25mKG1kYi5OQU1FKV0uY29uY2F0KGNhbi5zdXAuSW5wdXQoKSkpCgl9LAoJb25jaGFuZ2U6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsgY2FuLnN1cC5yZXF1ZXN0KGV2ZW50LCB7X3RvYXN0OiAi5omn6KGM5LitLi4uIn0pCgkJaWYgKGNhbi5Db25mKG1kYi5UWVBFKSA9PSBodG1sLlNFTEVDVCkgeyBjYW4ucnVuKGV2ZW50KSB9Cgl9LAoJb25rZXlkb3duOiBmdW5jdGlvbihldmVudCwgY2FuKSB7IGNhbi5vbmtleW1hcC5pbnB1dChldmVudCwgY2FuLCBldmVudC50YXJnZXQpCgkJaWYgKGNhbi5Db25mKG1kYi5UWVBFKSA9PSBodG1sLlRFWFRBUkVBKSB7IGlmICghZXZlbnQuY3RybEtleSkgeyByZXR1cm4gfSB9CgkJaWYgKGV2ZW50LmtleSA9PSBsYW5nLkVOVEVSKSB7CgkJCWNhbi5ydW4oZXZlbnQpLCBjYW4ub25tb3Rpb24uZm9jdXMoY2FuLCBldmVudC50YXJnZXQpCgkJCWNhbi5vbmtleW1hcC5wcmV2ZW50KGV2ZW50KQoJCX0gaWYgKCFldmVudC5jdHJsS2V5KSB7IHJldHVybiB9CgoJCXN3aXRjaCAoZXZlbnQua2V5KSB7CgkJCWNhc2UgImIiOiBjYW4uQ2xvbmVJbnB1dCgpOyBicmVhawoJCQljYXNlICJtIjogY2FuLkNsb25lRmllbGQoKTsgYnJlYWsKCQkJZGVmYXVsdDogcmV0dXJuCgkJfSBjYW4ub25rZXltYXAucHJldmVudChldmVudCkKCX0sCn0pCg==",
        "usr/volcanos/plugin/input/date.js": "Vm9sY2Fub3MoY2hhdC5PTkZJR1VSRSwge2hlbHA6ICLmjqfku7bor6bmg4UiLCBkYXRlOiB7b25jbGljazogZnVuY3Rpb24oZXZlbnQsIGNhbiwgbWV0YSwgY2IsIHRhcmdldCkgeyBjYihmdW5jdGlvbihjYW4sIGNicykgewoJZnVuY3Rpb24gc2V0KG5vdykgeyBjYnMoY2FuLCBjYW4udXNlci50aW1lKGNhbiwgbm93KSwgdGFyZ2V0LnZhbHVlKSB9CgoJLy8g5re75Yqg5o6n5Lu2Cgl2YXIgbm93ID0gdGFyZ2V0LnZhbHVlPyBuZXcgRGF0ZSh0YXJnZXQudmFsdWUpOiBuZXcgRGF0ZSgpCgljYW4uX3RyYW5zID0ga2l0LkRpY3QoInRvZGF5IiwgIuS7iuWkqSIsIG1kYi5ORVhULCAi5LiL5LiA5pyIIiwgbWRiLlBSRVYsICLkuIrkuIDmnIgiKQoJY2FuLm9ubW90aW9uLmNsZWFyKGNhbiwgY2FuLl9hY3Rpb24pLCBjYW4ub25hcHBlbmQuX2FjdGlvbihjYW4sIFtjbGkuQ0xPU0UsCgkJWyJob3VyIl0uY29uY2F0KGNhbi5jb3JlLkxpc3QoMjQpKSwgWyJtaW51dGUiXS5jb25jYXQoY2FuLmNvcmUuTGlzdCgwLCA2MCwgNSkpLCBbInNlY29uZCJdLmNvbmNhdChjYW4uY29yZS5MaXN0KDAsIDYwLCA1KSksCgkJInRvZGF5IiwgIiIsIG1kYi5QUkVWLCBbInllYXIiXS5jb25jYXQoY2FuLmNvcmUuTGlzdChub3cuZ2V0RnVsbFllYXIoKSAtIDEwLCBub3cuZ2V0RnVsbFllYXIoKSArIDEwKSksCgkJWyJtb250aCJdLmNvbmNhdChjYW4uY29yZS5MaXN0KDEsIDEzKSksIG1kYi5ORVhULAoJXSwgY2FuLl9hY3Rpb24sIHtjbG9zZTogZnVuY3Rpb24oZXZlbnQpIHsgY2FuLmNsb3NlKCkgfSwKCQkiaG91ciI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGtleSwgdmFsdWUpIHsgbm93LnNldEhvdXJzKHBhcnNlSW50KHZhbHVlKXx8MCksIHNob3cobm93KSB9LAoJCSJtaW51dGUiOiBmdW5jdGlvbihldmVudCwgY2FuLCBrZXksIHZhbHVlKSB7IG5vdy5zZXRNaW51dGVzKHBhcnNlSW50KHZhbHVlKXx8MCksIHNob3cobm93KSB9LAoJCSJzZWNvbmQiOiBmdW5jdGlvbihldmVudCwgY2FuLCBrZXksIHZhbHVlKSB7IG5vdy5zZXRTZWNvbmRzKHBhcnNlSW50KHZhbHVlKXx8MCksIHNob3cobm93KSB9LAoJCSJ0b2RheSI6IGZ1bmN0aW9uKGV2ZW50KSB7IG5vdyA9IG5ldyBEYXRlKCksIHNldChzaG93KG5vdykpIH0sCgoJCSJwcmV2IjogZnVuY3Rpb24oZXZlbnQpIHsgbm93LnNldE1vbnRoKG5vdy5nZXRNb250aCgpLTEpLCBzaG93KG5vdykgfSwKCQkieWVhciI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGtleSwgdmFsdWUpIHsgbm93LnNldEZ1bGxZZWFyKHBhcnNlSW50KHZhbHVlKSksIHNob3cobm93KSB9LAoJCSJtb250aCI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGtleSwgdmFsdWUpIHsgbm93LnNldE1vbnRoKHBhcnNlSW50KHZhbHVlKS0xKSwgc2hvdyhub3cpIH0sCgkJIm5leHQiOiBmdW5jdGlvbihldmVudCkgeyBub3cuc2V0TW9udGgobm93LmdldE1vbnRoKCkrMSksIHNob3cobm93KSB9LAoKCQki6ZqP5py6IjogZnVuY3Rpb24oZXZlbnQpIHsgbm93LnNldERhdGUoKE1hdGgucmFuZG9tKCkgKiAxMDAgLSA1MCkgKyBub3cuZ2V0RGF0ZSgpKSwgc2hvdyhub3cpIH0sCgkJIuWJjeS4gOW5tCI6IGZ1bmN0aW9uKGV2ZW50KSB7IG5vdy5zZXRGdWxsWWVhcihub3cuZ2V0RnVsbFllYXIoKS0xKSwgc2hvdyhub3cpIH0sCgkJIuWQjuS4gOW5tCI6IGZ1bmN0aW9uKGV2ZW50KSB7IG5vdy5zZXRGdWxsWWVhcihub3cuZ2V0RnVsbFllYXIoKSsxKSwgc2hvdyhub3cpIH0sCgl9KQoKCWNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi5fc3RhdHVzKQoJY2FuLl90YWJsZSA9IGNhbi5wYWdlLkFwcGVuZHMoY2FuLCBjYW4uX291dHB1dCwgW3t2aWV3OiBbY2hhdC5DT05URU5ULCBodG1sLlRBQkxFXX1dKS5maXJzdAoJdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsgZnVuY3Rpb24gc2hvdyhub3cpIHsKCQkvLyDorr7nva7mjqfku7YKCQljYW4uQWN0aW9uKCJ5ZWFyIiwgbm93LmdldEZ1bGxZZWFyKCkpCgkJY2FuLkFjdGlvbigibW9udGgiLCBub3cuZ2V0TW9udGgoKSsxKQoJCWNhbi5BY3Rpb24oImhvdXIiLCBub3cuZ2V0SG91cnMoKSkKCQljYW4uQWN0aW9uKCJtaW51dGUiLCBwYXJzZUludChub3cuZ2V0TWludXRlcygpLzUpKjUpCgkJY2FuLkFjdGlvbigic2Vjb25kIiwgcGFyc2VJbnQobm93LmdldFNlY29uZHMoKS81KSo1KQoKCQkvLyDorr7nva7nu4Tku7YKCQljYW4ucGFnZS5BcHBlbmRzKGNhbiwgY2FuLl90YWJsZSwgW3t0aDogWyLml6UiLCAi5LiAIiwgIuS6jCIsICLkuIkiLCAi5ZubIiwgIuS6lCIsICLlha0iXX1dKQoJCXZhciB0cjsgZnVuY3Rpb24gYWRkKGRheSwgdHlwZSkgeyBpZiAoZGF5LmdldERheSgpID09IDApIHsgdHIgPSBjYW4ucGFnZS5BcHBlbmQoY2FuLCBjYW4uX3RhYmxlLCBbe3R5cGU6IGh0bWwuVFJ9XSkubGFzdCB9CgkJCWNhbi5wYWdlLkFwcGVuZChjYW4sIHRyLCBbe3RleHQ6IFtkYXkuZ2V0RGF0ZSgpLCBodG1sLlRELCBjYW4uYmFzZS5UaW1lKHRvZGF5LCAiJXktJW0tJWQiKSA9PSBjYW4uYmFzZS5UaW1lKGRheSwgIiV5LSVtLSVkIik/IGh0bWwuU0VMRUNUOiB0eXBlXSwKCQkJCWRhdGFzZXQ6IHtkYXRlOiBkYXkuZ2V0VGltZSgpfSwgb25jbGljazogZnVuY3Rpb24oZXZlbnQpIHsKCQkJCQlzZXQobm93ID0gbmV3IERhdGUocGFyc2VJbnQoZXZlbnQudGFyZ2V0LmRhdGFzZXQuZGF0ZSkpKQoJCQkJfSwKCQkJfV0pCgkJfQoKCQkvLyDml7bpl7TljLrpl7QKCQl2YXIgb25lID0gbmV3IERhdGUobm93KTsgb25lLnNldERhdGUoMSkKCQl2YXIgZW5kID0gbmV3IERhdGUobm93KTsgZW5kLnNldE1vbnRoKG5vdy5nZXRNb250aCgpKzEpLCBlbmQuc2V0RGF0ZSgxKQoJCXZhciBoZWFkID0gbmV3IERhdGUob25lKTsgaGVhZC5zZXREYXRlKG9uZS5nZXREYXRlKCktb25lLmdldERheSgpKQoJCXZhciB0YWlsID0gbmV3IERhdGUoZW5kKTsgdGFpbC5zZXREYXRlKGVuZC5nZXREYXRlKCkrNy1lbmQuZ2V0RGF5KCkpCgoJCS8vIOaXtumXtOW6j+WIlwoJCWZvciAodmFyIGRheSA9IG5ldyBEYXRlKGhlYWQpOyBkYXkgPCBvbmU7IGRheS5zZXREYXRlKGRheS5nZXREYXRlKCkrMSkpIHsgYWRkKGRheSwgbWRiLlBSRVYpIH0KCQlmb3IgKHZhciBkYXkgPSBuZXcgRGF0ZShvbmUpOyBkYXkgPCBlbmQ7IGRheS5zZXREYXRlKGRheS5nZXREYXRlKCkrMSkpIHsgYWRkKGRheSwgbWRiLk1BSU4pIH0KCQlmb3IgKHZhciBkYXkgPSBuZXcgRGF0ZShlbmQpOyBlbmQuZ2V0RGF5KCkgIT0gMCAmJiBkYXkgPCB0YWlsOyBkYXkuc2V0RGF0ZShkYXkuZ2V0RGF0ZSgpKzEpKSB7IGFkZChkYXksIG1kYi5ORVhUKSB9CgoJCXJldHVybiBub3cKCX0gc2hvdyhub3cpLCBjYW4ub25sYXlvdXQuZmlndXJlKGV2ZW50LCBjYW4pCn0pfX0gfSkK",
        "usr/volcanos/plugin/input/key.js": "Vm9sY2Fub3MoY2hhdC5PTkZJR1VSRSwge2hlbHA6ICLmjqfku7bor6bmg4UiLCBrZXk6IHsKCV9pbml0OiBmdW5jdGlvbihldmVudCwgY2FuLCBjYnMsIHRhcmdldCwgbmFtZSwgdmFsdWUpIHsKCQljYW4ucnVuQWN0aW9uKGV2ZW50LCBtZGIuSU5QVVRTLCBbbmFtZSwgdmFsdWV8fHRhcmdldC52YWx1ZV0sIGZ1bmN0aW9uKG1zZykgewoJCQljYW4ub25maWd1cmUua2V5Ll9zaG93KGNhbiwgbXNnLCBjYnMsIHRhcmdldCwgbmFtZSkKCQl9KQoJfSwKCV9zaG93OiBmdW5jdGlvbihjYW4sIG1zZywgY2JzLCB0YXJnZXQsIG5hbWUpIHsKCQlpZiAoIWNhbi5vbm1vdGlvbi50b2dnbGUoY2FuLCBjYW4uX3RhcmdldCwgbXNnLkxlbmd0aCgpICE9IDApKSB7IHJldHVybiB9CgkJY2FuLm9ubW90aW9uLmNsZWFyKGNhbiksIGNhbi5vbmFwcGVuZC50YWJsZShjYW4sIG1zZywgZnVuY3Rpb24odmFsdWUpIHsKCQkJcmV0dXJuIHt0ZXh0OiBbdmFsdWUsIGh0bWwuVERdLCBzdHlsZTogbXNnLmFwcGVuZCAmJiBtc2cuYXBwZW5kLmxlbmd0aCA9PSAxPyB7Im1pbi13aWR0aCI6IHRhcmdldC5vZmZzZXRXaWR0aC0xNn06IHt9LCBvbmNsaWNrOiBmdW5jdGlvbihldmVudCkgeyBjYW4uYmFzZS5pc0Z1bmMoY2JzKSAmJiBjYnMoY2FuLCB2YWx1ZSwgdGFyZ2V0LnZhbHVlKQoJCQkJbXNnLk9wdGlvbihpY2UuTVNHX1BST0NFU1MpID09IGljZS5QUk9DRVNTX0FHQUlOICYmIGNhbi5vbm1vdGlvbi5kZWxheShjYW4sIGZ1bmN0aW9uKCkgewoJCQkJCWNhbi5vbmZpZ3VyZS5rZXkuX2luaXQoZXZlbnQsIGNhbiwgY2JzLCB0YXJnZXQsIG5hbWUsIHZhbHVlKQoJCQkJfSkKCQkJfX0KCQl9KSwgY2FuLm9uYXBwZW5kLl9zdGF0dXMoY2FuLCBbbWRiLlRPVEFMLCBtZGIuSU5ERVhdKSwgY2FuLlN0YXR1cyhtZGIuVE9UQUwsIG1zZy5MZW5ndGgoKSkKCQljYW4uZ2V0QWN0aW9uU2l6ZShmdW5jdGlvbihsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQpIHsKCQkJY2FuLnBhZ2Uuc3R5bGUoY2FuLCBjYW4uX3RhcmdldCwgaHRtbC5NQVhfSEVJR0hULCBjYW4uYmFzZS5NYXgodG9wK2hlaWdodC1jYW4uX3RhcmdldC5vZmZzZXRUb3AsIDQwMCkpCgkJfSkKCX0sCglfbWFrZTogZnVuY3Rpb24oZXZlbnQsIGNhbiwgbWV0YSwgY2IsIHRhcmdldCwgbGFzdCkgewoJCXZhciBzdWIgPSB0YXJnZXQuX2NhbjsgaWYgKHN1YiAmJiBzdWIuX2NicykgeyByZXR1cm4gfQoJCWNiKGZ1bmN0aW9uKHN1YiwgY2JzKSB7IHN1Yi5fY2JzID0gY2JzCgkJCWlmIChtZXRhLm1zZyAmJiBtZXRhLm1zZy5MZW5ndGgoKSA+IDApIHsKCQkJCWNhbi5vbmZpZ3VyZS5rZXkuX3Nob3coc3ViLCBtZXRhLm1zZywgY2JzLCB0YXJnZXQsIG1ldGEubmFtZSkKCQkJfSBlbHNlIHsKCQkJCWNhbi5vbmZpZ3VyZS5rZXkuX2luaXQoZXZlbnQsIHN1YiwgY2JzLCB0YXJnZXQsIG1ldGEubmFtZSkKCQkJfQoJCX0pCgl9LAoJb25jbGljazogZnVuY3Rpb24oZXZlbnQsIGNhbiwgbWV0YSwgY2IsIHRhcmdldCkgewoJCXRhcmdldC5fY2FuICYmIHRhcmdldC5fY2FuLmNsb3NlKCkKCQljYW4ub25maWd1cmUua2V5Ll9tYWtlKGV2ZW50LCBjYW4sIG1ldGEsIGNiLCB0YXJnZXQpCgkJY2FuLm9ubW90aW9uLmZvY3VzKGNhbiwgdGFyZ2V0KQoJfSwKCW9uZm9jdXM6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIG1ldGEsIGNiLCB0YXJnZXQsIGxhc3QpIHsKCQljYW4ub25maWd1cmUua2V5Ll9tYWtlKGV2ZW50LCBjYW4sIG1ldGEsIGNiLCB0YXJnZXQpCgl9LAoJb25rZXlkb3duOiBmdW5jdGlvbihldmVudCwgY2FuLCBtZXRhLCBjYiwgdGFyZ2V0LCBsYXN0KSB7CgkJc3dpdGNoIChldmVudC5rZXkpIHsKCQkJY2FzZSAiRXNjYXBlIjogdGFyZ2V0Ll9jYW4/IHRhcmdldC5fY2FuLmNsb3NlKCk6IHRhcmdldC5ibHVyKCk7IHJldHVybgoJCQljYXNlICJUYWIiOiB0YXJnZXQuX2NhbiAmJiB0YXJnZXQuX2Nhbi5jbG9zZSgpOyByZXR1cm4KCQkJY2FzZSAibiI6CgkJCWNhc2UgInAiOiBldmVudC5jdHJsS2V5ICYmIGNhbi5vbmtleW1hcC5wcmV2ZW50KGV2ZW50KTsgYnJlYWsKCQkJZGVmYXVsdDogY2FuLmJhc2UuaXNGdW5jKGxhc3QpICYmIGxhc3QoZXZlbnQsIGNhbikKCQl9CgkJY2FuLm9uZmlndXJlLmtleS5fbWFrZShldmVudCwgY2FuLCBtZXRhLCBjYiwgdGFyZ2V0KQoJfSwKCW9ua2V5dXA6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIG1ldGEsIGNiLCB0YXJnZXQsIGxhc3QpIHsgdmFyIHN1YiA9IHRhcmdldC5fY2FuOyBpZiAoIXN1YikgeyByZXR1cm4gfQoJCXN3aXRjaCAoZXZlbnQua2V5KSB7CgkJCWNhc2UgaWNlLlBTOiBjYW4ub25maWd1cmUua2V5Ll9pbml0KGV2ZW50LCBzdWIsIHN1Yi5fY2JzLCB0YXJnZXQsIG1ldGEubmFtZSwgZXZlbnQudGFyZ2V0LnZhbHVlKTsgYnJlYWsKCQl9CgkJY2FuLm9ubW90aW9uLnNlbGVjdElucHV0VGFibGUoZXZlbnQsIHN1YiwgZnVuY3Rpb24oKSB7IGNhbi5vbmZpZ3VyZS5rZXkuX2luaXQoZXZlbnQsIHN1Yiwgc3ViLl9jYnMsIHRhcmdldCwgbWV0YS5uYW1lKSB9LCB0YXJnZXQpCgl9LAp9fSkK",
        "usr/volcanos/plugin/input/province.js": "Vm9sY2Fub3MoY2hhdC5PTkZJR1VSRSwge2hlbHA6ICLmjqfku7bor6bmg4UiLCBwcm92aW5jZToge29uY2xpY2s6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIG1ldGEsIGNiLCB0YXJnZXQpIHsgY2IoZnVuY3Rpb24oY2FuLCBjYnMpIHsKCWNhbi5yZXF1aXJlKFsiL3JlcXVpcmUvc2h5bGludXguY29tL3gvZWNoYXJ0cy9lY2hhcnRzLmpzIiwgIi9yZXF1aXJlL3NoeWxpbnV4LmNvbS94L2VjaGFydHMvY2hpbmEuanMiXSwgZnVuY3Rpb24oKSB7CgkJdmFyIGNoaW5hX2NoYXJ0ID0gZWNoYXJ0cy5pbml0KGNhbi5wYWdlLkFwcGVuZChjYW4sIGNhbi5fb3V0cHV0LCBbe3R5cGU6IGh0bWwuRElWLCBzdHlsZToge3dpZHRoOiA2MDAsIGhlaWdodDogNDAwfX1dKS5maXJzdCkKCQljaGluYV9jaGFydC5zZXRPcHRpb24oe2dlbzoge21hcDogJ2NoaW5hJ319KSwgY2hpbmFfY2hhcnQub24oaHRtbC5DTElDSywgZnVuY3Rpb24gKHBhcmFtcykgewoJCQl0YXJnZXQudmFsdWUgPSBwYXJhbXMubmFtZSwgY2FuLmNsb3NlKCkKCQl9KSwgY2FuLlN0YXR1cyhtZGIuVE9UQUwsIDM0KSwgY2FuLm9ubGF5b3V0LmZpZ3VyZShldmVudCwgY2FuKSwgY2FuLmJhc2UuaXNGdW5jKGNicykgJiYgY2JzKGNhbikKCX0pCn0pIH19LCB9KQo=",
        "usr/volcanos/plugin/local/chat/div.css": "ZmllbGRzZXQubGF5b3V0IGxlZ2VuZCB7IGRpc3BsYXk6bm9uZTsgfQpmaWVsZHNldC5sYXlvdXQgZmllbGRzZXQucGx1Z2luIHsgcGFkZGluZzowOyBtYXJnaW46MDsgfQoKZmllbGRzZXQuZGl2IGRpdi5vdXRwdXQgdGQgeyB2ZXJ0aWNhbC1hbGlnbjp0b3A7IH0KZmllbGRzZXQuZGl2IGRpdi5vdXRwdXQgZmllbGRzZXQuc3Bhbj5kaXYub3V0cHV0PmZpZWxkc2V0IHsgb3ZlcmZsb3c6YXV0bzsgZmxvYXQ6bGVmdDsgfQoKZmllbGRzZXQucGFuZWwuY21kLm1haW4gZmllbGRzZXQuZGl2PmxlZ2VuZCB7IGRpc3BsYXk6bm9uZTsgfQpmaWVsZHNldC5wYW5lbC5jbWQubWFpbiBmaWVsZHNldC5kaXY+Zm9ybS5vcHRpb24geyBkaXNwbGF5Om5vbmU7IH0KZmllbGRzZXQucGFuZWwuY21kLm1haW4gZmllbGRzZXQuZGl2PmRpdi5hY3Rpb24geyBkaXNwbGF5Om5vbmU7IH0KZmllbGRzZXQucGFuZWwuY21kLm1haW4gZmllbGRzZXQuZGl2IGRpdi5wcm9qZWN0IHsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LnBhbmVsLmNtZC5tYWluIGZpZWxkc2V0LmRpdiBkaXYucHJvZmlsZSB7IGRpc3BsYXk6bm9uZTsgfQpmaWVsZHNldC5wYW5lbC5jbWQubWFpbiBmaWVsZHNldC5kaXY+ZGl2LnN0YXR1cyB7IGRpc3BsYXk6bm9uZTsgfQoK",
        "usr/volcanos/plugin/local/chat/div.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQl2YXIgbWV0YSA9IHt9OyBtc2cuVGFibGUoZnVuY3Rpb24odmFsdWUpIHsgbWV0YVt2YWx1ZS5rZXldID0gdmFsdWUudmFsdWUgfSkKCQljYW4uX2xpc3QgPSBjYW4uYmFzZS5PYmoobWV0YS50ZXh0LCB7bWV0YToge25hbWU6IG1ldGEubmFtZXx8aHRtbC5ESVZ9LCBsaXN0OiBbXX0pCgkJY2FuLnN1cC5fa2V5cyA9IGNhbi5zdXAuX2tleXN8fGNhbi5fbGlzdC5tZXRhLm5hbWUKCQljYW4ub25pbXBvcnQubGF5b3V0KGNhbiwgY2FuLl9vdXRwdXQpCgkJY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihtc2cpCgl9LAoJX2l0ZW06IGZ1bmN0aW9uKGNhbiwga2V5cywgaXRlbSwgdGFyZ2V0LCB3aWR0aCwgaGVpZ2h0KSB7IHdpZHRoID0gd2lkdGh8fGl0ZW0ubWV0YS53aWR0aCwgaGVpZ2h0ID0gaGVpZ2h0fHxpdGVtLm1ldGEuaGVpZ2h0CgkJdmFyIHVpID0gY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3ZpZXc6IFtodG1sLklURU0sIGh0bWwuRElWLCBpdGVtLm1ldGEubmFtZXx8aHRtbC5ESVZdLCBvbmNsaWNrOiBmdW5jdGlvbihldmVudCkgewoJCQljYW4ub25tb3Rpb24uc2VsZWN0KGNhbiwgY2FuLnVpLnByb2plY3QsIGh0bWwuRElWX0lURU0sIGV2ZW50LnRhcmdldCksIGNhbi5jdXJyZW50ID0gZXZlbnQudGFyZ2V0LCBjYW4ub25pbXBvcnQuX3Byb2ZpbGUoY2FuLCBrZXlzLCBpdGVtLm1ldGEpCgkJfSwgX2FkZDogZnVuY3Rpb24oZGF0YSkgeyBpdGVtLmxpc3QucHVzaChkYXRhKSwgY2FuLm9uaW1wb3J0Ll9saXN0KGNhbiwga2V5cywgaXRlbSwgdWkubGlzdCwgd2lkdGgsIGhlaWdodCkgfX0sIHt2aWV3OiBodG1sLkxJU1R9XSkKCgkJdmFyIGZpZWxkID0gY2FuLm9uYXBwZW5kLmZpZWxkKGNhbiwgaXRlbS5tZXRhLmluZGV4PyBjaGF0LlBMVUdJTjogY2hhdC5MQVlPVVQsIGl0ZW0ubWV0YSwgdGFyZ2V0Ll90YXJnZXQpCgkJY2FuLnBhZ2Uuc3R5bGUoY2FuLCB1aS5saXN0Ll90YXJnZXQgPSBmaWVsZC5vdXRwdXQsIHt3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0fSkKCQlpdGVtLm1ldGEuc3R5bGUgJiYgY2FuLnBhZ2UuQ2xhc3NMaXN0LmFkZChjYW4sIHVpLmxpc3QuX3RhcmdldCwgaXRlbS5tZXRhLnN0eWxlKQoKCQlpdGVtLm1ldGEuaW5kZXggJiYgY2FuLm9uYXBwZW5kLnBsdWdpbihjYW4sIGNhbi5iYXNlLkNvcHkoe30sIGl0ZW0ubWV0YSksIGZ1bmN0aW9uKHN1YikgewoJCQljYW4ucGFnZS5zdHlsZShjYW4sIHN1Yi5fb3V0cHV0LCB7d2lkdGg6IHdpZHRoLCBoZWlnaHQ6IGhlaWdodC0yKmh0bWwuQUNUSU9OX0hFSUdIVH0pCgkJfSwgdGFyZ2V0Ll90YXJnZXQsIGZpZWxkLmZpZWxkc2V0KQoKCQljYW4ub25pbXBvcnQuX2xpc3QoY2FuLCBrZXlzLCBpdGVtLCB1aS5saXN0LCB3aWR0aCwgaGVpZ2h0KQoJCWNhbi5zdXAuX2tleXMgPT0ga2V5cyAmJiB1aS5pdGVtLmNsaWNrKCkKCX0sCglfbGlzdDogZnVuY3Rpb24oY2FuLCBrZXlzLCBpdGVtLCB0YXJnZXQsIHdpZHRoLCBoZWlnaHQpIHsKCQlpZiAoaXRlbS5tZXRhLnN0eWxlID09IGh0bWwuU1BBTikgeyB3aWR0aCA9IHdpZHRoIC8gaXRlbS5saXN0Lmxlbmd0aCB9IGVsc2UgeyBoZWlnaHQgPSBoZWlnaHQgLyBpdGVtLmxpc3QubGVuZ3RoIH0KCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuLCB0YXJnZXQpLCBjYW4ub25tb3Rpb24uY2xlYXIoY2FuLCB0YXJnZXQuX3RhcmdldCkKCQljYW4uY29yZS5MaXN0KGl0ZW0ubGlzdCwgZnVuY3Rpb24oaXRlbSkgeyBjYW4ub25pbXBvcnQuX2l0ZW0oY2FuLCBjYW4uY29yZS5LZXlzKGtleXMsIGl0ZW0ubWV0YS5uYW1lKSwgaXRlbSwgdGFyZ2V0LCB3aWR0aCwgaGVpZ2h0KSB9KQoJfSwKCV9wcm9maWxlOiBmdW5jdGlvbihjYW4sIGtleXMsIG1ldGEpIHsgY2FuLm9ubW90aW9uLmNsZWFyKGNhbiwgY2FuLnVpLnByb2ZpbGUpCgkJdmFyIG1zZyA9IGNhbi5yZXF1ZXN0KHt9KTsgbXNnLlB1c2gobWRiLktFWSwgImtleXMiKSwgbXNnLlB1c2gobWRiLlZBTFVFLCBrZXlzKQoJCWNhbi5jb3JlLkxpc3QoY2FuLmNvcmUuU3BsaXQoIm5hbWUsaW5kZXgsYXJncyxzdHlsZSxkaXNwbGF5LGhlaWdodCx3aWR0aCIpLCBmdW5jdGlvbihrKSB7CgkJCW1zZy5QdXNoKG1kYi5LRVksIGspLCBtc2cuUHVzaChtZGIuVkFMVUUsIG1ldGFba10pCgkJfSksIGNhbi5zdXAuX2tleXMgPSBrZXlzCgkJY2FuLm9uYXBwZW5kLnRhYmxlKGNhbiwgbXNnLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBpbmRleCwgbGluZSwgYXJyYXkpIHsKCQkJcmV0dXJuIHt0ZXh0OiBbdmFsdWUsIGh0bWwuVERdLCBvbmRibGNsaWNrOiBmdW5jdGlvbihldmVudCkgeyB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0CgkJCQlrZXkgPT0gbWRiLlZBTFVFICYmIGNhbi5vbm1vdGlvbi5tb2RpZnkoY2FuLCBldmVudC50YXJnZXQsIGZ1bmN0aW9uKGV2ZW50LCB2YWx1ZSwgb2xkKSB7CgkJCQkJdGFyZ2V0LmlubmVyVGV4dCA9IG1ldGFbbGluZS5rZXldID0gdmFsdWUsIGNhbi5vbmltcG9ydC5sYXlvdXQoY2FuKQoJCQkJfSwge25hbWU6IGxpbmUua2V5fSkKCQkJfX0KCQl9LCBjYW4udWkucHJvZmlsZSkKCX0sCglsYXlvdXQ6IGZ1bmN0aW9uKGNhbiwgdGFyZ2V0KSB7IHRhcmdldCA9IHRhcmdldHx8Y2FuLl9vdXRwdXQKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuLCB0YXJnZXQpLCBjYW4ub25sYXlvdXQucHJvZmlsZShjYW4sIHRhcmdldCksIGNhbi51aS5wcm9qZWN0Ll90YXJnZXQgPSBjYW4udWkuY29udGVudAoJCXZhciB3aWR0aCA9IGNhbi5Db25mV2lkdGgoKS0zMjAsIGhlaWdodCA9IGNhbi5Db25mSGVpZ2h0KCkKCQlpZiAoY2FuLmlzQ21kTW9kZSgpKSB7CgkJCXdpZHRoID0gY2FuLl9yb290Ll93aWR0aCwgaGVpZ2h0ID0gY2FuLl9yb290Ll9oZWlnaHQsIGNhbi51c2VyLnRpdGxlKGNhbi5fbGlzdC5tZXRhLm5hbWUpCgkJfSBlbHNlIGlmIChjYW4uaXNGdWxsTW9kZSgpKSB7CgkJCXdpZHRoID0gY2FuLkNvbmZXaWR0aCgpLCBoZWlnaHQgPSBjYW4uQ29uZkhlaWdodCgpCgkJCWNhbi5vbm1vdGlvbi50b2dnbGUoY2FuLCBjYW4udWkucHJvamVjdCwgZmFsc2UpCgkJfSBlbHNlIHsKCQkJY2FuLm9ubW90aW9uLnRvZ2dsZShjYW4sIGNhbi51aS5wcm9maWxlLCB0cnVlKQoJCX0KCQljYW4ub25pbXBvcnQuX2l0ZW0oY2FuLCBjYW4uX2xpc3QubWV0YS5uYW1lLCBjYW4uX2xpc3QsIGNhbi51aS5wcm9qZWN0LCB3aWR0aCwgaGVpZ2h0KQoJfSwKfSwgWyIiXSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLmk43kvZzmlbDmja4iLAoJIua3u+WKoCI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsKCQljYW4udXNlci5pbnB1dChldmVudCwgY2FuLCBbbWRiLk5BTUUsIGN0eC5JTkRFWCwgY3R4LkFSR1MsIGN0eC5TVFlMRSwgaHRtbC5IRUlHSFQsIGh0bWwuV0lEVEhdLCBmdW5jdGlvbihkYXRhKSB7CgkJCWNhbi5jdXJyZW50Ll9hZGQoe21ldGE6IGRhdGEsIGxpc3Q6IFtdfSkKCQl9KQoJfSwKCSLkv53lrZgiOiBmdW5jdGlvbihldmVudCwgY2FuKSB7IHZhciBtc2cgPSBjYW4ucmVxdWVzdChldmVudCwgY2FuLk9wdGlvbigpKQoJCWNhbi5ydW5BY3Rpb24oZXZlbnQsIG1kYi5NT0RJRlksIFttZGIuVEVYVCwgSlNPTi5zdHJpbmdpZnkoY2FuLl9saXN0KV0pCgl9LAp9KQo=",
        "usr/volcanos/plugin/local/chat/location.js": "",
        "usr/volcanos/plugin/local/chat/media.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCAgX2luaXQ6IGZ1bmN0aW9uKGNhbiwgbXNnLCBjYiwgdGFyZ2V0KSB7CgkJY2FuLnVpID0gY2FuLm9ubGF5b3V0LmRpc3BsYXkoY2FuLCB0YXJnZXQpCgkJY2FuLnVpLmNhbnZhcyA9IGNhbi5wYWdlLkFwcGVuZChjYW4sIGNhbi51aS5kaXNwbGF5LCBbe3R5cGU6ICJjYW52YXMiLCB3aWR0aDogMzIwLCBoZWlnaHQ6IDI0MCwgc3R5bGU6IHtkaXNwbGF5OiAibm9uZSJ9fV0pLmZpcnN0CgoJCWNhbi5vbmFwcGVuZC50YWJsZShjYW4sIG1zZywgZnVuY3Rpb24odmFsdWUsIGtleSwgaW5kZXgsIGxpbmUsIGFycmF5KSB7CgkJCXJldHVybiB7dGV4dDogW3ZhbHVlLCAidGQiXSwgb25jbGljazogZnVuY3Rpb24oZXZlbnQpIHsKCQkJCWNhbi5zdXAub25hY3Rpb24uY2hhbmdlKGV2ZW50LCBjYW4uc3VwLCBrZXksIHZhbHVlLCBmdW5jdGlvbihtc2cpIHsKCQkJCQljYW4ucnVuKGV2ZW50KQoJCQkJfSkKCQkJfX0KCQl9LCBjYW4udWkuY29udGVudCkKCgkJY2FuLm9uYXBwZW5kLmJvYXJkKGNhbiwgbXNnLlJlc3VsdCgpLCBjYW4udWkuZGlzcGxheSkKCQljYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKG1zZykKCX0sCn0pClZvbGNhbm9zKGNoYXQuT05BQ1RJT04sIHtoZWxwOiAi5pON5L2c5pWw5o2uIiwgX2luaXQ6IGZ1bmN0aW9uKGNhbiwgbXNnLCBjYiwgdGFyZ2V0KSB7Cgl9LAoKCW9wZW46IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsKCQluYXZpZ2F0b3IuZ2V0VXNlck1lZGlhKHt2aWRlbzoge3dpZHRoOiAzMjAsIGhlaWdodDogMjQwfX0sIGZ1bmN0aW9uKHN0cmVhbSkgewoJCQl2YXIgdmlkZW8gPSBjYW4ucGFnZS5BcHBlbmQoY2FuLCBjYW4udWkuY29udGVudCwgInZpZGVvIikKCQkJdmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtLCB2aWRlby5wbGF5KCkKCQkJY2FuLnVpLnZpZGVvID0gdmlkZW8KCQl9LCBmdW5jdGlvbihlcnJvcikgewoJCQljYW4ubWlzYy5Mb2coIm9wZW4gY2FtZXJhIiwgZXJyb3IpCgkJfSkKCX0sCglzbmFwc2hvdDogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi51aS5jYW52YXMuZ2V0Q29udGV4dCgiMmQiKS5kcmF3SW1hZ2UoY2FuLnVpLnZpZGVvLCAwLCAwKQoJCWNhbi5wYWdlLkFwcGVuZChjYW4sIGNhbi51aS5kaXNwbGF5LCBbe3R5cGU6ICJpbWciLCBzcmM6IGNhbi51aS5jYW52YXMudG9EYXRhVVJMKCdpbWFnZS93ZWJwJyl9XSkKCX0sCn0pCg==",
        "usr/volcanos/plugin/local/chat/trans.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuKQoJCWNhbi5mcm9tID0gY2FuLm9uaW1wb3J0Ll9wbHVnaW4oY2FuLCBuZnMuRElSLCBodG1sLkxFRlQsICJmcm9tIiwgInRvIikKCQljYW4udG8gPSBjYW4ub25pbXBvcnQuX3BsdWdpbihjYW4sIG5mcy5ESVIsIGh0bWwuUklHSFQsICJ0byIsICJmcm9tIikKCQljYW4ub25pbXBvcnQuX3BsdWdpbihjYW4sIG5mcy5UUkFTSCwgaHRtbC5MRUZULCAiZnJvbSIpCgkJY2FuLm9uaW1wb3J0Ll9wbHVnaW4oY2FuLCBuZnMuVFJBU0gsIGh0bWwuUklHSFQsICJ0byIpCgl9LAoJX3BsdWdpbjogZnVuY3Rpb24oY2FuLCBpbmRleCwgcG9zLCBmcm9tLCB0bykgewoJCXJldHVybiBjYW4ub25hcHBlbmQucGx1Z2luKGNhbiwge3R5cGU6IGNoYXQuU1RPUlksIGluZGV4OiBpbmRleH0sIGZ1bmN0aW9uKHN1YikgewoJCQljYW4ucGFnZS5zdHlsZShjYW4sIHN1Yi5fdGFyZ2V0LCB7ZmxvYXQ6IHBvcywgY2xlYXI6IHBvc30pCgkJCXN1Yi5Db25mV2lkdGgoY2FuLkNvbmZXaWR0aCgpLzIpCgkJCXN1Yi5fbGVnZW5kLmlubmVySFRNTCA9IGNhbi5PcHRpb24oZnJvbSkraWNlLlNQK2luZGV4CgkJCWNhbi5wYWdlLnN0eWxlKGNhbiwgc3ViLl9vdXRwdXQsICJtYXgtd2lkdGgiLCBjYW4uQ29uZldpZHRoKCkvMikKCgkJCXN1Yi5ydW4gPSBmdW5jdGlvbihldmVudCwgY21kcywgY2IpIHsKCQkJCWlmIChjYW4ub25hY3Rpb25bY21kc1sxXV0pIHsgcmV0dXJuIGNhbi5vbmFjdGlvbltjbWRzWzFdXShjYW4sIGZyb20sIHRvLCBldmVudCwgY21kcywgY2IpIH0KCgkJCQl2YXIgbXNnID0gc3ViLnJlcXVlc3QoZXZlbnQsIHtfcG9kOiBjYW4uT3B0aW9uKGZyb20pfSkKCQkJCWNhbi5ydW5BY3Rpb25Db21tYW5kKGV2ZW50LCBpbmRleCwgY21kcywgY2IpCgkJCX0KCQl9KQoJfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCX0sCglzZW5kOiBmdW5jdGlvbihjYW4sIGZyb20sIHRvLCBldmVudCwgY21kcywgY2IpIHsgdmFyIF9mcm9tID0gY2FuW2Zyb21dLCBfdG8gPSBjYW5bdG9dCgkJdmFyIHBhdGggPSBjYW4ucmVxdWVzdChldmVudCkuT3B0aW9uKG5mcy5QQVRIKQoJCXZhciBtc2cgPSBjYW4ucmVxdWVzdChldmVudCwge19oYW5kbGU6IGljZS5UUlVFLAoJCQlmcm9tOiBjYW4uT3B0aW9uKGZyb20pLCBmcm9tX3BhdGg6IHBhdGgsCgkJCXRvOiBjYW4uT3B0aW9uKHRvKSwgdG9fcGF0aDogX3RvLk9wdGlvbihuZnMuUEFUSCkrcGF0aC5zcGxpdChpY2UuUFMpLnBvcCgpLAoJCX0pCgkJY2FuLnJ1bihldmVudCwgY21kcywgZnVuY3Rpb24oKSB7IF90by5VcGRhdGUoKSB9LCB0cnVlKQoJfSwKfSkK",
        "usr/volcanos/plugin/local/chat/wx.js": "Vm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge3NvdXJjZTogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCWNhbi5yZXF1aXJlKFsiaHR0cHM6Ly9yZXMud3gucXEuY29tL29wZW4vanMvandlaXhpbi0xLjYuMC5qcyJdLCBmdW5jdGlvbihjYW4pIHsKCQl3eC5jb25maWcoe2RlYnVnOiBtc2cuT3B0aW9uKCJkZWJ1ZyIpID09IGljZS5UUlVFLAoJCQlhcHBJZDogbXNnLk9wdGlvbigiYXBwaWQiKSwgc2lnbmF0dXJlOiBtc2cuT3B0aW9uKCJzaWduYXR1cmUiKSwKCQkJbm9uY2VTdHI6IG1zZy5PcHRpb24oIm5vbmNlc3RyIiksIHRpbWVzdGFtcDogbXNnLk9wdGlvbigidGltZXN0YW1wIiksCgoJCQlqc0FwaUxpc3Q6IGNhbi5jb3JlLkl0ZW0oewoJCQkJc2NhblFSQ29kZTogZnVuY3Rpb24oY2IpIHsgd3guc2NhblFSQ29kZSh7bmVlZFJlc3VsdDogY2I/IDE6IDAsIHNjYW5UeXBlOiBbInFyQ29kZSIsImJhckNvZGUiXSwgc3VjY2VzczogZnVuY3Rpb24gKHJlcykgewoJCQkJCWNhbi5iYXNlLmlzRnVuYyhjYikgJiYgY2IocmVzLnJlc3VsdFN0ciwgY2FuLmJhc2UuUGFyc2VKU09OKHJlcy5yZXN1bHRTdHIpKQoJCQkJfSB9KSB9LAoJCQkJZ2V0TG9jYXRpb246IGZ1bmN0aW9uKGNiKSB7IHd4LmdldExvY2F0aW9uKHt0eXBlOiAiZ2NqMDIiLCBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7CgkJCQkJY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYih7dHlwZTogImdjajAyIiwgbmFtZTogIuW9k+WJjeS9jee9riIsIHRleHQ6ICLlvZPliY3kvY3nva4iLCBsYXRpdHVkZTogcGFyc2VJbnQocmVzLmxhdGl0dWRlKjEwMDAwMCksIGxvbmdpdHVkZTogcGFyc2VJbnQocmVzLmxvbmdpdHVkZSoxMDAwMDApIH0pCgkJCQl9IH0pIH0sCgkJCQlvcGVuTG9jYXRpb246IGZ1bmN0aW9uKG1zZykgeyB3eC5vcGVuTG9jYXRpb24oewoJCQkJCWxhdGl0dWRlOiBwYXJzZUludChtc2cuT3B0aW9uKCJsYXRpdHVkZSIpKS8xMDAwMDAsCgkJCQkJbG9uZ2l0dWRlOiBwYXJzZUludChtc2cuT3B0aW9uKCJsb25naXR1ZGUiKSkvMTAwMDAwLAoJCQkJCW5hbWU6IG1zZy5PcHRpb24obWRiLk5BTUUpLCBhZGRyZXNzOiBtc2cuT3B0aW9uKG1kYi5URVhUKSwKCQkJCQlzY2FsZTogbXNnLk9wdGlvbigic2NhbGUiKXx8MTQsIGluZm9Vcmw6IG1zZy5PcHRpb24obWRiLkxJTkspLAoJCQkJfSkgfSwKCQkJCWNob29zZUltYWdlOiBmdW5jdGlvbihjYiwgY291bnQpIHsgd3guY2hvb3NlSW1hZ2Uoe2NvdW50OiBjb3VudHx8OSwgc2l6ZVR5cGU6IFsnb3JpZ2luYWwnLCAnY29tcHJlc3NlZCddLCBzb3VyY2VUeXBlOiBbJ2FsYnVtJywgJ2NhbWVyYSddLCBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7CgkJCQkJY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihyZXMubG9jYWxJZHMpCgkJCQl9IH0pIH0sCgkJCX0sIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgcmV0dXJuIGNhbi51c2VyLmFnZW50W2tleV0gPSB2YWx1ZSwga2V5IH0pLAoJCX0pCgkJd3guZXJyb3IoZnVuY3Rpb24oZXJyKSB7IGNhbi51c2VyLnRvYXN0KGVyciwgInd4IGxvYWQiKSB9KQoJCXd4LnJlYWR5KGZ1bmN0aW9uKCkgeyBjYW4ubWlzYy5Mb2coInJlYWR5IikgfSkKCX0pCn19KQo=",
        "usr/volcanos/plugin/local/code/inner.css": "ZmllbGRzZXQuaW5uZXI+Zm9ybS5vcHRpb24gaW5wdXRbbmFtZT1wYXRoXSB7IHdpZHRoOjgwcHg7IH0KZmllbGRzZXQuaW5uZXI+Zm9ybS5vcHRpb24gaW5wdXRbbmFtZT1maWxlXSB7IHdpZHRoOjE2MHB4OyB9CmZpZWxkc2V0LmlubmVyPmRpdi5hY3Rpb24+ZGl2LnRhYnMgeyBwYWRkaW5nOjVweDsgbWFyZ2luOjAgMXB4OyB9CmZpZWxkc2V0LmlubmVyPmRpdi5hY3Rpb24+ZGl2LnRhYnM6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOnN0ZWVsYmx1ZTsgfQpmaWVsZHNldC5pbm5lcj5kaXYuYWN0aW9uPmRpdi50YWJzLnNlbGVjdCB7IGJhY2tncm91bmQtY29sb3I6c3RlZWxibHVlOyB9CgpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IHRkLmNvbnRlbnQgeyBwb3NpdGlvbjpyZWxhdGl2ZTsgfQpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHsgY29sb3I6d2hpdGU7IGZvbnQtc2l6ZToxNnB4OyBmb250LWZhbWlseTptb25vc3BhY2U7IHBvc2l0aW9uOnJlbGF0aXZlOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LmNvbnRlbnQgdGQubGluZSB7IHBvc2l0aW9uOnN0aWNreTsgbGVmdDowOyB0ZXh0LWFsaWduOnJpZ2h0OyBwYWRkaW5nOjAgNnB4OyBib3JkZXItcmlnaHQ6c29saWQgMnB4IHJlZDsgfQpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRyOmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjojNDY4MmI0NmI7IH0KZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ci5zZWxlY3QgeyBiYWNrZ3JvdW5kLWNvbG9yOiM0NjgyYjQ2YjsgfQpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRyLnNlbGVjdCB0ZC5saW5lIHsgYmFja2dyb3VuZC1jb2xvcjojNjQ5NWVkNjM7IGJvcmRlcjpzb2xpZCAxcHggcmVkOyBib3JkZXItcmlnaHQ6c29saWQgMnB4IHJlZDsgfQpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRkLnRleHQgeyB3aGl0ZS1zcGFjZTpwcmU7IHBhZGRpbmctbGVmdDoxMHB4OyBjdXJzb3I6dGV4dDsgfQpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRkLnRleHQgc3Bhbi5jb21tZW50IHsgYmFja2dyb3VuZC1jb2xvcjpibHVlOyBjb2xvcjpjeWFuOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LmNvbnRlbnQgdGQudGV4dCBzcGFuLmtleXdvcmQgeyBjb2xvcjp5ZWxsb3c7IGZvbnQtd2VpZ2h0OmJvbGQ7IH0KZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ZC50ZXh0IHNwYW4uZGF0YXR5cGUgeyBjb2xvcjpncmVlbjsgZm9udC13ZWlnaHQ6Ym9sZDsgfQpmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRkLnRleHQgc3Bhbi5mdW5jdGlvbiB7IGNvbG9yOmN5YW47IGZvbnQtd2VpZ2h0OmJvbGQ7IH0KZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ZC50ZXh0IHNwYW4uY29uc3RhbnQgeyBjb2xvcjptYWdlbnRhOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LmNvbnRlbnQgdGQudGV4dCBzcGFuLnN0cmluZyB7IGNvbG9yOm1hZ2VudGE7IH0KZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCB0ZC5jb250ZW50IGlmcmFtZSB7IGJvcmRlcjowOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQucHJvZmlsZSBpZnJhbWUgeyBib3JkZXI6MDsgfQoKZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCB0ZC5jb250ZW50PmRpdi50YWJzIHsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQuY29udGVudD5kaXYucGF0aCB7IGRpc3BsYXk6bm9uZTsgfQpmaWVsZHNldC5pbm5lciBkaXYub3V0cHV0IGZpZWxkc2V0LnRvb2xraXQgeyBwb3NpdGlvbjphYnNvbHV0ZTsgYm90dG9tOjBweDsgcmlnaHQ6MHB4OyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZmllbGRzZXQudG9vbGtpdD5kaXYub3V0cHV0PmZpZWxkc2V0IHsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZmllbGRzZXQudG9vbGtpdD5kaXYub3V0cHV0PmZpZWxkc2V0LnNlbGVjdCB7IGJhY2tncm91bmQtY29sb3I6IzBlMzM2OWIzOyBjb2xvcjp3aGl0ZTsgZGlzcGxheTpibG9jazsgei1pbmRleDoxMDsgfQpmaWVsZHNldC5pbm5lcj5kaXYuc3RhdHVzIGxlZ2VuZCB7IGZsb2F0OnJpZ2h0OyB9CmZpZWxkc2V0LmlubmVyPmRpdi5zdGF0dXMgbGVnZW5kLnNlbGVjdCB7IGJhY2tncm91bmQtY29sb3I6Z3JlZW47IH0KZmllbGRzZXQuaW5uZXI+ZGl2LnN0YXR1cyBsZWdlbmQ6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOmdyZWVuOyB9CmZpZWxkc2V0LmlubmVyPmRpdi5zdGF0dXMgeyBoZWlnaHQ6MzFweDsgb3ZlcmZsb3c6YXV0bzsgfQoKYm9keS53aGl0ZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHsgY29sb3I6YmxhY2s7IH0KYm9keS53aGl0ZSBmaWVsZHNldC5pbm5lci5mbG9hdD5kaXYub3V0cHV0IGRpdi5jb250ZW50IHsgY29sb3I6d2hpdGU7IH0KYm9keS5ibGFjayBmaWVsZHNldC5pbm5lci5mbG9hdD5kaXYub3V0cHV0IGRpdi5jb250ZW50IHsgY29sb3I6d2hpdGU7IH0KCmJvZHkuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQuY29udGVudD5kaXYudGFicyB7IGJhY2tncm91bmQtY29sb3I6Z3JheTsgcGFkZGluZzowcHg7IGhlaWdodDozMXB4OyBvdmVyZmxvdzphdXRvOyBkaXNwbGF5OmJsb2NrOyB9CmJvZHkuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQuY29udGVudD5kaXYudGFicyBkaXYudGFicyB7IGJhY2tncm91bmQtY29sb3I6Z3JheTsgZm9udC1mYW1pbHk6bW9ub3NwYWNlOyBwYWRkaW5nOjdweCAyMHB4OyBoZWlnaHQ6MTdweDsgZmxvYXQ6bGVmdDsgfQpib2R5LnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IHRkLmNvbnRlbnQ+ZGl2LnRhYnMgZGl2LnRhYnMuc2VsZWN0IHsgYmFja2dyb3VuZC1jb2xvcjojMWQzMzQ5OyB9CmJvZHkuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQuY29udGVudD5kaXYudGFicyBkaXYudGFiczpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IzFkMzM0OTsgfQpib2R5LnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IHRkLmNvbnRlbnQ+ZGl2LnBhdGggeyBiYWNrZ3JvdW5kLWNvbG9yOiMxZDMzNDk7IHBhZGRpbmc6NHB4IDEwcHg7IG1hcmdpbi1ib3R0b206NHB4OyBkaXNwbGF5OmJsb2NrOyBjbGVhcjpib3RoOyB9CmJvZHkuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LmNvbnRlbnQgdGQubGluZSB7IHBhZGRpbmctdG9wOjRweDsgYm9yZGVyLXJpZ2h0Om5vbmU7IH0KYm9keS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ZC50ZXh0IHsgcGFkZGluZy10b3A6MnB4OyBib3JkZXI6c29saWQgMXB4IHRyYW5zcGFyZW50OyB9Cgpib2R5LndoaXRlLnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5wcm9qZWN0IHsgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZXNtb2tlOyB9CmJvZHkud2hpdGUuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LnByb2plY3QudG9nZ2xlIHsgYmFja2dyb3VuZC1jb2xvcjojNDY4MmI0NmI7IH0KYm9keS53aGl0ZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYucHJvamVjdCBkaXYuaXRlbSB7IGNvbG9yOmJsYWNrOyB9CmJvZHkud2hpdGUuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQuY29udGVudD5kaXYudGFicyB7IGJhY2tncm91bmQtY29sb3I6d2hpdGVzbW9rZTsgfQpib2R5LndoaXRlLnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IHRkLmNvbnRlbnQ+ZGl2LnRhYnMgZGl2LnRhYnMgeyBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Z3JheTsgY29sb3I6YmxhY2s7IH0KYm9keS53aGl0ZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCB0ZC5jb250ZW50PmRpdi50YWJzIGRpdi50YWJzLnNlbGVjdCB7IGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyBib3gtc2hhZG93OjBweCAwcHggNXB4IDFweCBncmV5OyB9CmJvZHkud2hpdGUuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgdGQuY29udGVudD5kaXYucGF0aCB7IGJhY2tncm91bmQtY29sb3I6d2hpdGU7IGNvbG9yOmJsYWNrOyB9CmJvZHkud2hpdGUuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LmNvbnRlbnQgeyBiYWNrZ3JvdW5kLWNvbG9yOndoaXRlOyBjb2xvcjpibGFjazsgfQpib2R5LndoaXRlLnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRyLnNlbGVjdCB7IGJhY2tncm91bmQtY29sb3I6d2hpdGU7IH0KYm9keS53aGl0ZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ci5zZWxlY3QgdGQubGluZSB7IGJhY2tncm91bmQtY29sb3I6c3RlZWxibHVlOyBjb2xvcjp3aGl0ZTsgYm9yZGVyOm5vbmU7IH0KYm9keS53aGl0ZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ci5zZWxlY3QgdGQudGV4dCB7IGJvcmRlcjpzb2xpZCAxcHggbGlnaHRncmF5OyB9CmJvZHkud2hpdGUuc2ltcGxlIGZpZWxkc2V0LmlubmVyPmRpdi5vdXRwdXQgZGl2LmNvbnRlbnQgdGQudGV4dCBzcGFuLnN0cmluZyB7IGNvbG9yOnJveWFsYmx1ZTsgfQpib2R5LndoaXRlLnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi5jb250ZW50IHRkLnRleHQgc3Bhbi5mdW5jdGlvbiB7IGNvbG9yOmRhcmtyZWQ7IH0KYm9keS53aGl0ZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYuY29udGVudCB0ZC50ZXh0IHNwYW4ua2V5d29yZCB7IGNvbG9yOmJsdWU7IH0KYm9keS53aGl0ZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2LnN0YXR1cyBsZWdlbmQgeyBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Z3JheTsgY29sb3I6YmxhY2s7IHBhZGRpbmc6MHB4IDEwcHg7IGJvcmRlci1sZWZ0OnNvbGlkIDJweCByZWQ7IGhlaWdodDozMHB4OyBmbG9hdDpyaWdodDsgYm9yZGVyLXJhZGl1czowOyBib3gtc2hhZG93Om5vbmU7IH0KCmJvZHkubW9iaWxlIGZpZWxkc2V0LmlubmVyPmZvcm0ub3B0aW9uIGlucHV0W25hbWU9ZmlsZV0geyB3aWR0aDo5MHB4OyB9CmJvZHkubW9iaWxlIGZpZWxkc2V0LnBsdWdpbi5pbm5lciBkaXYuYWN0aW9uIHsgZGlzcGxheTpub25lOyB9CmJvZHkubW9iaWxlLmxhbmRzY2FwZSBmaWVsZHNldC5wbHVnaW4uaW5uZXIgZGl2LmFjdGlvbiB7IGRpc3BsYXk6Y29udGVudHM7IH0KCmJvZHkubW9iaWxlLnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi50b2dnbGUgeyBkaXNwbGF5OmJsb2NrOyB9CmJvZHkubW9iaWxlLnNpbXBsZSBmaWVsZHNldC5pbm5lcj5kaXYub3V0cHV0IGRpdi50b2dnbGUgeyBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Ymx1ZTsgd2lkdGg6MzBweDsgfQpib2R5Lm1vYmlsZS5zaW1wbGUgZmllbGRzZXQuaW5uZXI+ZGl2Lm91dHB1dCBkaXYudG9nZ2xlLmRpc3BsYXkgeyBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Ymx1ZTsgbWFyZ2luLXRvcDotMzNweDsgaGVpZ2h0OjMwcHg7IHdpZHRoOjEwMHB4OyB9CgoudW5zZWxlY3RhYmxlIHsKCS13ZWJraXQtdG91Y2gtY2FsbG91dDpub25lOwoJLXdlYmtpdC11c2VyLXNlbGVjdDpub25lOwoJLWtodG1sLXVzZXItc2VsZWN0Om5vbmU7CgktbW96LXVzZXItc2VsZWN0Om5vbmU7CgktbXMtdXNlci1zZWxlY3Q6bm9uZTsKCS1vLXVzZXItc2VsZWN0Om5vbmU7Cgl1c2VyLXNlbGVjdDpub25lOwp9CmJvZHkud2hpdGUuc2ltcGxlIGZpZWxkc2V0LnBsdWdpbiBkaXYub3V0cHV0Lmpzb24gZGl2Lml0ZW0gc3Bhbi5ub25jZSB7IGNvbG9yOmxpZ2h0Z3JheTsgfQo=",
        "usr/volcanos/plugin/local/code/inner.js": "",
        "usr/volcanos/plugin/local/code/inner/favor.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBhcmdzLCBjYikgewoJY2FuLm9uaW1wb3J0LnRvb2xraXQoY2FuLCB7aW5kZXg6ICJ3ZWIuY29kZS5mYXZvciJ9LCBmdW5jdGlvbihzdWIpIHsKCQlzdWIucnVuID0gZnVuY3Rpb24oZXZlbnQsIGNtZHMsIGNiKSB7IHZhciBtc2cgPSBjYW4ucmVxdWVzdChldmVudCkKCQkJaWYgKGNhbi5taXNjLnJ1bkFjdGlvbihjYW4sIG1zZywgY21kcywgY2IsIGtpdC5EaWN0KAoJCQkJY29kZS5JTk5FUiwgZnVuY3Rpb24oY21kcykgewoJCQkJCWNhbi5vbmltcG9ydC50YWJ2aWV3KGNhbiwgbXNnLk9wdGlvbihuZnMuUEFUSCksIG1zZy5PcHRpb24obmZzLkZJTEUpLCBtc2cuT3B0aW9uKG5mcy5MSU5FKSkKCQkJCX0sCgkJCSkpKSB7IHJldHVybiB9CgoJCQljYW4ucnVuQWN0aW9uKGV2ZW50LCBjb2RlLkZBVk9SLCBjbWRzLCBmdW5jdGlvbihtc2cpIHsKCQkJCXN1Yi5vbm1vdGlvbi5jbGVhcihzdWIpLCBzdWIub25hcHBlbmQudGFibGUoc3ViLCBtc2csIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGluZGV4LCBsaW5lKSB7CgkJCQkJaWYgKG1zZy5hcHBlbmQubGVuZ3RoID09IDIgJiYgbXNnLmFwcGVuZFswXSA9PSBtZGIuS0VZICYmIG1zZy5hcHBlbmRbMV0gPT0gbWRiLlZBTFVFKSB7CgkJCQkJCWlmIChrZXkgPT0gbWRiLlZBTFVFKSB7IGtleSA9IGxpbmUua2V5IH0KCQkJCQl9CgkJCQkJaWYgKGtleSAhPSBjdHguQUNUSU9OKSB7IHZhbHVlID0gc3ViLnBhZ2UucmVwbGFjZShzdWIsIHZhbHVlLCBpY2UuUFdELCAiIikgfQoKCQkJCQlyZXR1cm4ge3RleHQ6IFsiIiwgaHRtbC5URF0sIGxpc3Q6IFt7dGV4dDogW3ZhbHVlLCBodG1sLkRJVl19XSwgb25jbGljazogZnVuY3Rpb24oZXZlbnQpIHsgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldAoJCQkJCQlpZiAoW21kYi5aT05FLCBtZGIuSURdLmluZGV4T2Yoa2V5KSA+IC0xKSB7IHJldHVybiBzdWIub25hY3Rpb24uY2hhbmdlKGV2ZW50LCBzdWIsIGtleSwgdmFsdWUpIH0KCgkJCQkJCWlmICh0YXJnZXQudGFnTmFtZSA9PSAiSU5QVVQiICYmIHRhcmdldC50eXBlID09IGh0bWwuQlVUVE9OKSB7IHZhciBtc2cgPSBzdWIucmVxdWVzdChldmVudCwgbGluZSwgc3ViLk9wdGlvbigpKQoJCQkJCQkJcmV0dXJuIHN1Yi5ydW5BY3Rpb24oZXZlbnQsIHRhcmdldC5uYW1lLCBbXSwgZnVuY3Rpb24obXNnKSB7IHN1Yi5ydW4oKSB9KQoJCQkJCQl9CgoJCQkJCQlsaW5lLmxpbmUgJiYgY2FuLm9uaW1wb3J0LnRhYnZpZXcoY2FuLCBsaW5lLnBhdGgsIGxpbmUuZmlsZS5yZXBsYWNlKGljZS5QV0QsICIiKSwgcGFyc2VJbnQobGluZS5saW5lKSkKCQkJCQl9fQoJCQkJfSwgc3ViLl9vdXRwdXQpLCBzdWIub25hcHBlbmQuX3N0YXR1cyhzdWIsIG1zZy5PcHRpb24oaWNlLk1TR19TVEFUVVMpKSwgY2FuLlN0YXR1cygi5qCH562+5pWwIiwgbXNnLkxlbmd0aCgpKQoJCQl9KQoJCX0sIGNhbi5iYXNlLmlzRnVuYyhjYikgJiYgY2Ioc3ViKQoJfSkKfX0pCg==",
        "usr/volcanos/plugin/local/code/inner/search.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBhcmdzLCBjYikgeyB2YXIgaGlzdG9yeSA9IFtdOyBjb25zdCBTRUFSQ0ggPSAiY2FuLmNvZGUuaW5uZXIuc2VhcmNoIgoJZnVuY3Rpb24gc2hvdyhtc2csIHdvcmQpIHsgaWYgKCFtc2cpIHsgcmV0dXJuIH0gaGlzdG9yeS5wdXNoKG1zZyk7IHZhciBzdWIgPSBtc2cuX2Nhbjsgc3ViLk9wdGlvbigid29yZCIsIHdvcmR8fG1zZy5fd29yZCkKCQkhc3ViLnBhZ2UuQ2xhc3NMaXN0LmhhcyhzdWIsIHN1Yi5fbGVnZW5kLCAic2VsZWN0IikgJiYgY2FuLnVpLnNlYXJjaC5zZWxlY3QoKQoJCXN1Yi5vbm1vdGlvbi5jbGVhcihzdWIpLCBzdWIub25hcHBlbmQudGFibGUoc3ViLCBtc2csIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGluZGV4LCBsaW5lKSB7CgkJCXJldHVybiB7dGV4dDogWyIiLCBodG1sLlREXSwgbGlzdDogW3t0ZXh0OiBbY2FuLnBhZ2UucmVwbGFjZShjYW4sIHZhbHVlLCBpY2UuUFdELCAiIiksIGh0bWwuRElWXX1dLCBvbmNsaWNrOiBmdW5jdGlvbihldmVudCkgewoJCQkJbGluZS5saW5lICYmIGNhbi5vbmltcG9ydC50YWJ2aWV3KGNhbiwgY2FuLk9wdGlvbihuZnMuUEFUSCksIGxpbmUuZmlsZS5yZXBsYWNlKGljZS5QV0QsICIiKSwgcGFyc2VJbnQobGluZS5saW5lKSkKCQkJfX0KCQl9LCBzdWIuX291dHB1dCksIHN1Yi5vbmFwcGVuZC5ib2FyZChzdWIsIG1zZy5SZXN1bHQoKSksIHN1Yi5vbmFwcGVuZC5fc3RhdHVzKHN1YiwgbXNnLk9wdGlvbihpY2UuTVNHX1NUQVRVUykpLCBjYW4uU3RhdHVzKCLmoIfnrb7mlbAiLCBtc2cuTGVuZ3RoKCkpCgl9CgljYW4ub25lbmdpbmUucGx1Z2luKGNhbiwgU0VBUkNILCBzaHkoIuaQnOe0oiIsIHt9LCBbCgkJe3R5cGU6IGh0bWwuVEVYVCwgbmFtZTogIndvcmQiLCB2YWx1ZTogY2xpLk1BSU4sIG9ua2V5ZG93bjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCQljYW4ub25tb3Rpb24uc2VsZWN0VGFibGUoZXZlbnQsIGNhbi5zdXAsIGV2ZW50LnRhcmdldCwgZnVuY3Rpb24odHIpIHsKCQkJCWNhbi5wYWdlLlNlbGVjdChjYW4sIHRyLCBodG1sLlRELCBmdW5jdGlvbih0ZCwgaW5kZXgpIHsgaW5kZXggPT0gMCAmJiB0ZC5jbGljaygpIH0pCgkJCQl0ci5zY3JvbGxJbnRvVmlldygpLCBjYW4uX291dHB1dC5zY3JvbGxUb3AgLT0gNjAKCQkJfSkKCQkJaWYgKGV2ZW50LmtleSA9PSBsYW5nLkVOVEVSKSB7IGNhbi5zdXAuVXBkYXRlKGV2ZW50LCBbY3R4LkFDVElPTiwgZXZlbnQuY3RybEtleT8gbmZzLkdSRVA6IG5mcy5UQUdTLCBjYW4uc3VwLk9wdGlvbigid29yZCIpXSkgfQoJCQlpZiAoZXZlbnQua2V5ID09IGxhbmcuRVNDQVBFKSB7IGV2ZW50LnRhcmdldC5ibHVyKCkgfQoJCX19LAoJCXt0eXBlOiBodG1sLlRFWFQsIG5hbWU6ICJmaWx0ZXIiLCB2YWx1ZTogIiIsIG9ua2V5ZG93bjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCQljYW4ub25tb3Rpb24uc2VsZWN0SW5wdXRUYWJsZShldmVudCwgY2FuLnN1cCwgbnVsbCwgZXZlbnQudGFyZ2V0KQoJCQlpZiAoZXZlbnQua2V5ID09IGxhbmcuRU5URVIpIHsgY2FuLnN1cC5VcGRhdGUoZXZlbnQsIFtjdHguQUNUSU9OLCBldmVudC5jdHJsS2V5PyBuZnMuR1JFUDogbmZzLlRBR1MsIGNhbi5zdXAuT3B0aW9uKCJ3b3JkIildKSB9CgkJCWlmIChldmVudC5rZXkgPT0gbGFuZy5FU0NBUEUpIHsgZXZlbnQudGFyZ2V0LmJsdXIoKSB9CgkJfX0sCgkJe3R5cGU6IGh0bWwuQlVUVE9OLCBuYW1lOiBuZnMuVEFHU30sCgkJe3R5cGU6IGh0bWwuQlVUVE9OLCBuYW1lOiBuZnMuR1JFUH0sCgkJe3R5cGU6IGh0bWwuQlVUVE9OLCBuYW1lOiBjbGkuTUFLRX0sCgkJe3R5cGU6IGh0bWwuQlVUVE9OLCBuYW1lOiAiaGlzdG9yeSJ9LAoJCXt0eXBlOiBodG1sLkJVVFRPTiwgbmFtZTogImxhc3QiLCBfdHJhbnM6ICLov5Tlm54ifSwKCV0sIGZ1bmN0aW9uKG1zZywgY21kcywgY2IpIHsgaWYgKGNhbi5taXNjLnJ1bkFjdGlvbihjYW4sIG1zZywgY21kcywgY2IsIGtpdC5EaWN0KAoJCSJoaXN0b3J5IiwgZnVuY3Rpb24oY21kcykgewoJCQljYW4uY29yZS5MaXN0KGNhbi5oaXN0b3J5LCBmdW5jdGlvbihpdGVtKSB7CgkJCQltc2cuUHVzaChuZnMuRklMRSwgaXRlbS5maWxlKQoJCQkJbXNnLlB1c2gobmZzLkxJTkUsIGl0ZW0ubGluZSkKCQkJCW1zZy5QdXNoKG1kYi5URVhULCBpdGVtLnRleHQpCgkJCX0pCgkJCXNob3cobXNnKQoJCX0sCgkJbmZzLlRBR1MsIGZ1bmN0aW9uKGNtZHMpIHsgbXNnLk9wdGlvbihraXQuRGljdChpY2UuTVNHX0hBTkRMRSwgaWNlLlRSVUUsIGljZS5NU0dfRklFTERTLCAiZmlsZSxsaW5lLHRleHQiKSkKCQkJY2FuLnJ1bkFjdGlvbihtc2csIG1kYi5TRUFSQ0gsIFtjYW4ucGFyc2UsIGNtZHNbMF0sIGNhbi5PcHRpb24obmZzLlBBVEgpXSwgZnVuY3Rpb24obXNnKSB7IHZhciBzdWIgPSBtc2cuX2NhbgoJCQkJY2FuLnBhZ2Uuc3R5bGUoY2FuLCBzdWIuX291dHB1dCwgaHRtbC5NQVhfSEVJR0hULCBjYW4uQ29uZkhlaWdodCgpLzQpLCBzaG93KG1zZywgbXNnLl93b3JkID0gY21kc1swXSkKCQkJCWNhbi5wYWdlLkNsYXNzTGlzdC5oYXMoc3ViLCBzdWIuX3RhcmdldCwgaHRtbC5TRUxFQ1QpIHx8IHN1Yi5fbGVnZW5kLmNsaWNrKCkKCQkJCWNhbi5vbm1vdGlvbi5mb2N1cyhjYW4sIG1zZy5fY2FuLl9pbnB1dHNbIndvcmQiXS5fdGFyZ2V0KQoJCQl9KQoJCX0sCgkJbmZzLkdSRVAsIGZ1bmN0aW9uKGNtZHMpIHsgbXNnLk9wdGlvbihraXQuRGljdChpY2UuTVNHX0hBTkRMRSwgaWNlLlRSVUUsIGljZS5NU0dfRklFTERTLCAiZmlsZSxsaW5lLHRleHQiLCBuZnMuUEFUSCwgY2FuLk9wdGlvbihuZnMuUEFUSCkpKQoJCQljYW4ucnVuQWN0aW9uKG1zZywgbmZzLkdSRVAsIFtjbWRzWzBdXSwgZnVuY3Rpb24obXNnKSB7IHZhciBzdWIgPSBtc2cuX2NhbgoJCQkJY2FuLnBhZ2Uuc3R5bGUoY2FuLCBzdWIuX291dHB1dCwgaHRtbC5NQVhfSEVJR0hULCBjYW4uQ29uZkhlaWdodCgpLzQpLCBzaG93KG1zZywgbXNnLl93b3JkID0gY21kc1swXSkKCQkJCWNhbi5wYWdlLkNsYXNzTGlzdC5oYXMoc3ViLCBzdWIuX3RhcmdldCwgaHRtbC5TRUxFQ1QpIHx8IHN1Yi5fbGVnZW5kLmNsaWNrKCkKCQkJCWNhbi5vbm1vdGlvbi5mb2N1cyhjYW4sIG1zZy5fY2FuLl9pbnB1dHNbIndvcmQiXS5fdGFyZ2V0KQoJCQl9KQoJCX0sCgkJImxhc3QiLCBmdW5jdGlvbihjbWRzKSB7IGhpc3RvcnkucG9wKCksIHNob3coaGlzdG9yeS5wb3AoKSkgfSwKCSkpKSB7IHJldHVybiB9IGNhbi5ydW4obXNnLCBjbWRzLCBmdW5jdGlvbihtc2cpIHsgc2hvdyhtc2cpIH0sIHRydWUpIH0pKQoJY2FuLm9uaW1wb3J0LnRvb2xraXQoY2FuLCB7aW5kZXg6IFNFQVJDSH0sIGZ1bmN0aW9uKHN1YikgewoJCWNhbi51aS5zZWFyY2ggPSBzdWIsIGNhbi5iYXNlLmlzRnVuYyhjYikgJiYgY2Ioc3ViKQoJCWNhbi51aS5zZWFyY2guX3Nob3cgPSBzaG93Cgl9KQp9fSkK",
        "usr/volcanos/plugin/local/code/inner/sess.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBhcmdzLCBjYikgeyB2YXIgU0VTUyA9ICJ3ZWIuY29kZS5zZXNzIgoJY2FuLm9uaW1wb3J0LnRvb2xraXQoY2FuLCB7aW5kZXg6IFNFU1N9LCBmdW5jdGlvbihzdWIpIHsKCQlzdWIucnVuID0gZnVuY3Rpb24oZXZlbnQsIGNtZHMsIGNiKSB7IHZhciBtc2cgPSBjYW4ucmVxdWVzdChldmVudCkKCQkJaWYgKGNhbi5taXNjLnJ1bkFjdGlvbihjYW4sIG1zZywgY21kcywgY2IsIGtpdC5EaWN0KAoJCQkJbmZzLlNBVkUsIGZ1bmN0aW9uKGNtZHMpIHsKCQkJCQljYW4ucnVuQWN0aW9uQ29tbWFuZChldmVudCwgU0VTUywgW2N0eC5BQ1RJT04sIG1kYi5DUkVBVEUsCgkJCQkJCSJ0b29sIiwgSlNPTi5zdHJpbmdpZnkoY2FuLm9uZXhwb3J0LnRvb2woY2FuKSksCgkJCQkJCSJ0YWJzIiwgSlNPTi5zdHJpbmdpZnkoY2FuLm9uZXhwb3J0LnRhYnMoY2FuKSksCgkJCQkJXSwgY2IpCgkJCQl9LAoJCQkJbmZzLkxPQUQsIGZ1bmN0aW9uKGNtZHMpIHsKCQkJCQljYW4ub25pbXBvcnQuc2VzcyhjYW4sIHsKCQkJCQkJdG9vbDogSlNPTi5wYXJzZShtc2cuT3B0aW9uKCJ0b29sIikpLAoJCQkJCQl0YWJzOiBKU09OLnBhcnNlKG1zZy5PcHRpb24oInRhYnMiKSksCgkJCQkJfSkKCQkJCX0sCgkJCSkpKSB7IHJldHVybiB9CgkJCWNhbi5ydW5BY3Rpb25Db21tYW5kKGV2ZW50LCBTRVNTLCBjbWRzLCBjYikKCQl9LCBjYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKHN1YikKCX0pCn19KQo=",
        "usr/volcanos/plugin/local/code/inner/template.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBhcmdzLCBjYikgewoJY2FuLm9uaW1wb3J0LnRvb2xraXQoY2FuLCB7aW5kZXg6ICJ3ZWIuY29kZS50ZW1wbGF0ZSJ9LCBmdW5jdGlvbihzdWIpIHsKCQlzdWIucnVuID0gZnVuY3Rpb24oZXZlbnQsIGNtZHMsIGNiKSB7IHZhciBtc2cgPSBzdWIucmVxdWVzdChldmVudCwgY2FuLk9wdGlvbigpKQoJCQlpZiAoY2FuLm1pc2MucnVuQWN0aW9uKGNhbiwgbXNnLCBjbWRzLCBjYiwga2l0LkRpY3QoCgkJCQluZnMuREVGUywgZnVuY3Rpb24oY21kcykgewoJCQkJCWNhbi51c2VyLmlucHV0KGV2ZW50LCBjYW4sIGNhbi5iYXNlLk9iaihtc2cuT3B0aW9uKCJhcmdzIil8fCJbXSIpLCBmdW5jdGlvbihkYXRhKSB7CgkJCQkJCXZhciBtc2cgPSBjYW4ucmVxdWVzdChldmVudCk7IGNhbi5jb3JlLkl0ZW0oZGF0YSwgZnVuY3Rpb24oa2V5LCB2YWx1ZSkgeyBtc2cuT3B0aW9uKGtleSwgdmFsdWUpIH0pCgkJCQkJCWNhbi5ydW5BY3Rpb25Db21tYW5kKGV2ZW50LCAid2ViLmNvZGUudGVtcGxhdGUiLCBbbmZzLkRFRlNdLmNvbmNhdChjbWRzKSwgZnVuY3Rpb24obXNnKSB7CgkJCQkJCQljYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKG1zZykKCQkJCQkJCWNhbi5vbmltcG9ydC5wcm9qZWN0KGNhbiwgY2FuLk9wdGlvbihuZnMuUEFUSCkpCgkJCQkJCQljYW4ub25pbXBvcnQudGFidmlldyhjYW4sIGNhbi5PcHRpb24obmZzLlBBVEgpLCBtc2cuT3B0aW9uKCJtYWluIiksICIiLCBmdW5jdGlvbigpIHsKCQkJCQkJCQljYW4ub25pbXBvcnQudGFidmlldyhjYW4sIGNhbi5PcHRpb24obmZzLlBBVEgpLCBjbWRzWzFdLCAxLCBmdW5jdGlvbigpIHt9KQoJCQkJCQkJfSwgdHJ1ZSkKCQkJCQkJfSkKCQkJCQl9KQoJCQkJfQoJCQkpKSkgeyByZXR1cm4gfQoJCQljYW4ucnVuQWN0aW9uQ29tbWFuZChldmVudCwgIndlYi5jb2RlLnRlbXBsYXRlIiwgY21kcywgY2IpCgkJfSwgY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihzdWIpCgl9KQp9fSkK",
        "usr/volcanos/plugin/local/code/snippet.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuKQoJCWlmIChtc2cuT3B0aW9uKCJjb250ZW50IikpIHsKCQkJY2FuLm9uYXBwZW5kLnBsdWdpbihjYW4sIHtpbmRleDogIndlYi5jb2RlLnZpbWVyIiwgc3R5bGU6ICJmdWxsIn0sIGZ1bmN0aW9uKHN1YikgewoJCQkJc3ViLnJ1biA9IGZ1bmN0aW9uKGV2ZW50LCBjbWRzLCBjYikgeyB2YXIgcmVzID0gY2FuLnJlcXVlc3QoZXZlbnQpCgkJCQkJaWYgKGNtZHNbMV0gPT0gInBsdWdpbiIpIHsKCQkJCQkJY2FuLnJ1bkFjdGlvbihldmVudCwgInZpbWVyIiwgY21kcywgY2IpCgkJCQkJCXJldHVybgoJCQkJCX0KCQkJCQlpZiAoY21kc1sxXSA9PSAibWFpbi5nbyIpIHsgcmVzLkVjaG8obXNnLk9wdGlvbigiY29udGVudCIpKQoJCQkJCQljYW4ub25tb3Rpb24uZGVsYXkoY2FuLCBmdW5jdGlvbigpIHsgY2FuLnN1YiAmJiBjYW4uc3ViLm9uYWN0aW9uWyLpobnnm64iXSh7fSwgY2FuLnN1YikgfSkKCQkJCQl9CgkJCQkJY2IocmVzKSwgY2FuLnN1YiA9IGNhbi5jb3JlLlZhbHVlKHN1YiwgIl9vdXRwdXRzLi0xIikKCQkJCX0KCQkJfSwgY2FuLl9vdXRwdXQpCgkJCXJldHVybgoJCX0KCQljYW4ub25hcHBlbmQudGFibGUoY2FuLCBtc2cpCgkJY2FuLm9uYXBwZW5kLmJvYXJkKGNhbiwgbXNnKQoJfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLmk43kvZzmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCX0sCglydW46IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIG1zZykgewoJCWNhbi5ydW5BY3Rpb24oZXZlbnQsIGljZS5SVU4sIFsiZ28iLCAiaGkuZ28iLCBjYW4uc3ViLm9uZXhwb3J0LmNvbnRlbnQoY2FuLnN1YildLCBmdW5jdGlvbihtc2cpIHsKCQkJY2FuLm9uYXBwZW5kLmJvYXJkKGNhbiwgbXNnKQoJCX0pCgl9LAp9KQo=",
        "usr/volcanos/plugin/local/code/vimer.css": "ZmllbGRzZXQudmltZXI+ZGl2Lm91dHB1dCBpbnB1dC5jdXJyZW50IHsKCWJhY2tncm91bmQtY29sb3I6IzAwMDAwMDAwOyBjb2xvcjojMDAwMDAwMDA7IGZvbnQtc2l6ZToxZW07IGZvbnQtZmFtaWx5Om1vbm9zcGFjZTsKCXBhZGRpbmc6MDsgcGFkZGluZy1sZWZ0OjEycHg7IGJvcmRlcjpub25lOyBvdXRsaW5lOm5vbmU7IG1hcmdpbjowOyBtYXJnaW4tdG9wOi0zcHg7CiAJaGVpZ2h0OjIycHg7IHBvc2l0aW9uOmFic29sdXRlOwp9CmZpZWxkc2V0LnZpbWVyPmRpdi5vdXRwdXQgaW5wdXQuY3VycmVudC5ub3JtYWwgeyBjYXJldC1jb2xvcjpncmF5OyB9CmZpZWxkc2V0LnZpbWVyPmRpdi5vdXRwdXQgaW5wdXQuY3VycmVudC5pbnNlcnQgeyBjYXJldC1jb2xvcjp5ZWxsb3c7IH0KCmZpZWxkc2V0LnZpbWVyPmRpdi5vdXRwdXQgZGl2LmNvbXBsZXRlIHsKCWhlaWdodDoyMHB4OyBwb3NpdGlvbjphYnNvbHV0ZTsgbGVmdDozMnB4OyBtYXJnaW4tdG9wOjIwcHg7CglkaXNwbGF5Om5vbmU7Cn0KZmllbGRzZXQudmltZXI+ZGl2Lm91dHB1dCBkaXYuY29tcGxldGUuaW5zZXJ0IHsKCWRpc3BsYXk6YmxvY2s7Cn0KZmllbGRzZXQudmltZXI+ZGl2Lm91dHB1dCBkaXYuY29tcGxldGUgZGl2LnByZSB7Cglmb250LXNpemU6MS4xcmVtOyBjb2xvcjojZjBmOGZmMDA7IG1hcmdpbi1sZWZ0OjVweDsgZmxvYXQ6bGVmdDsKfQpmaWVsZHNldC52aW1lcj5kaXYub3V0cHV0IGRpdi5jb21wbGV0ZSB0YWJsZSB7CgliYWNrZ3JvdW5kOmxpZ2h0Ymx1ZTsgbWF4LWhlaWdodDo0MDBweDsgbWF4LXdpZHRoOjgwMHB4OyBvdmVyZmxvdzphdXRvOyBkaXNwbGF5OmJsb2NrOyBmbG9hdDpsZWZ0Owp9CmZpZWxkc2V0LnZpbWVyPmRpdi5vdXRwdXQgZGl2LmNvbXBsZXRlIHRhYmxlLmNvbnRlbnQgdGggewoJZGlzcGxheTpub25lOwp9CmZpZWxkc2V0LnZpbWVyPmRpdi5vdXRwdXQgZGl2LmNvbXBsZXRlIHRhYmxlLmNvbnRlbnQgdGQgewoJZm9udC1zaXplOjEuMXJlbTsKfQoKYm9keS5zaW1wbGUgZmllbGRzZXQudmltZXI+ZGl2Lm91dHB1dCBkaXYuY29tcGxldGUgZGl2LnByZSB7Cglmb250LXNpemU6MXJlbTsKfQpib2R5LnNpbXBsZSBmaWVsZHNldC52aW1lcj5kaXYub3V0cHV0IGRpdi5jb21wbGV0ZSB0YWJsZS5jb250ZW50IHRkIHsKCWZvbnQtc2l6ZToxcmVtOwp9Cgpib2R5LnNpbXBsZSBmaWVsZHNldC52aW1lcj5kaXYub3V0cHV0IGlucHV0LmN1cnJlbnQgewogCW1hcmdpbi10b3A6MXB4Owp9CmJvZHkud2hpdGUgZmllbGRzZXQudmltZXI+ZGl2Lm91dHB1dCBpbnB1dC5jdXJyZW50Lmluc2VydCB7IGNhcmV0LWNvbG9yOmJsYWNrOyB9CmJvZHkud2hpdGUgZmllbGRzZXQudmltZXI+ZGl2Lm91dHB1dCBpbnB1dC5jdXJyZW50Lm5vcm1hbCB7IGNhcmV0LWNvbG9yOmxpZ2h0Z3JheTsgfQoKZGl2LnByb2plY3QgZGl2LnpvbmUuY3JlYXRlPmRpdi5saXN0IGRpdi5pdGVtIHsgcGFkZGluZzo1cHg7IGZsb2F0OmxlZnQ7IGNsZWFyOm5vbmU7IH0KZGl2LnByb2plY3QgZGl2LnpvbmUuY3JlYXRlPmRpdi5hY3Rpb24geyBkaXNwbGF5Om5vbmU7IH0K",
        "usr/volcanos/plugin/local/code/vimer.js": "",
        "usr/volcanos/plugin/local/code/xterm.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuKSwgY2FuLm9ubGF5b3V0LnByb2ZpbGVfYXV0byhjYW4pLCBjYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKG1zZykKCQljYW4ub25pbXBvcnQubGF5b3V0KGNhbiksIGNhbi5vbmFwcGVuZC5fc3RhdHVzKGNhbiksIGNhbi50ZXJtID0ge30KCgkJY2FuLnJlcXVpcmVNb2R1bGVzKFsieHRlcm0vY3NzL3h0ZXJtLmNzcyIsICJ4dGVybSIsICJ4dGVybS1hZGRvbi1maXQiLCAieHRlcm0tYWRkb24td2ViLWxpbmtzIl0sIGZ1bmN0aW9uKCkgeyBjYW4ub25tb3Rpb24uZGVsYXkoY2FuLCBmdW5jdGlvbigpIHsgCgkJCWlmIChjYW4uT3B0aW9uKG1kYi5IQVNIKSAhPSAiIikgewoJCQkJdmFyIGl0ZW0gPSB7aGFzaDogY2FuLk9wdGlvbihtZGIuSEFTSCl9OyBtc2cuVGFibGUoZnVuY3Rpb24odmFsdWUpIHsgY2FuLmNvcmUuVmFsdWUoaXRlbSwgdmFsdWUua2V5LCB2YWx1ZS52YWx1ZSkgfSkKCQkJCXJldHVybiBjYW4ub25pbXBvcnQuX2Nvbm5lY3QoY2FuLCBpdGVtKQoJCQl9CgoJCQl2YXIgaGFzaCA9IGNhbi5zdXAuX2hhc2h8fGNhbi5taXNjLlNlYXJjaEhhc2goY2FuKXx8dHJ1ZSwgbGlzdCA9IG1zZy5UYWJsZShmdW5jdGlvbih2YWx1ZSkgewoJCQkJdmFyIGl0ZW0gPSBjYW4ub25pbXBvcnQuX2l0ZW0oY2FuLCB2YWx1ZSk7IHZhbHVlLmhhc2ggPT0gaGFzaCAmJiAoaXRlbS5jbGljaygpLCBoYXNoID0gZmFsc2UpCgkJCX0pOyBoYXNoICYmIGNhbi5vbmltcG9ydC5fY3JlYXRlKGNhbiwgW21kYi5UWVBFLCAiIiwgbWRiLk5BTUUsICJ0ZXJtIl0pCgkJfSwgNTAwKSB9KQoJfSwKCWxheW91dDogZnVuY3Rpb24oY2FuKSB7CgkJY2FuLnBhZ2Uuc3R5bGUoY2FuLCBjYW4udWkuY29udGVudCwgaHRtbC5IRUlHSFQsIGNhbi5Db25mSGVpZ2h0KCksIGh0bWwuV0lEVEgsIGNhbi5Db25mV2lkdGgoKSkKCQl2YXIgdGVybSA9IGNhbi51aS5jb250ZW50Ll90ZXJtOyBpZiAoIXRlcm0pIHsgcmV0dXJuIH0KCQl0ZXJtLl9maXQuZml0KCksIGNhbi5vbmV4cG9ydC50ZXJtKGNhbiwgdGVybSkKCX0sCglfaXRlbTogZnVuY3Rpb24oY2FuLCBpdGVtKSB7CgkJaXRlbS5fbWVudSA9IHNoeShjYW4ub25kZXRhaWwsIGNhbi5vbmRldGFpbC5saXN0LCBmdW5jdGlvbihldmVudCwgYnV0dG9uLCBtZXRhKSB7CgkJCWNhbi5yZXF1ZXN0KGV2ZW50LCBpdGVtLCBpdGVtLmV4dHJhKSwgbWV0YVtidXR0b25dKGV2ZW50LCBjYW4sIGJ1dHRvbiwgaXRlbSkKCQl9KQoJCXJldHVybiBpdGVtLl9pdGVtID0gY2FuLm9uaW1wb3J0Lml0ZW0oY2FuLCBpdGVtLCBmdW5jdGlvbihldmVudCkgeyAKCQkJaXRlbS5fdGFicz8gaXRlbS5fdGFicy5jbGljaygpOiBpdGVtLl90YWJzID0gY2FuLm9uaW1wb3J0LnRhYnMoY2FuLCBbaXRlbV0sIGZ1bmN0aW9uKGV2ZW50KSB7CgkJCQljYW4ub25pbXBvcnQuX2Nvbm5lY3QoY2FuLCBpdGVtKQoJCQl9KSwgaXRlbS5fcGx1Z2luICYmIGNhbi5vbm1vdGlvbi50b2dnbGUoY2FuLCBpdGVtLl9wbHVnaW4uX3RhcmdldCwgdHJ1ZSkKCQl9LCBmdW5jdGlvbihldmVudCkgeyBjYW4udXNlci5jYXJ0ZVJpZ2h0KGV2ZW50LCBjYW4sIGNhbi5vbmRldGFpbCwgY2FuLm9uZGV0YWlsLmxpc3QsIGl0ZW0uX21lbnUpIH0pCgl9LAoJX2NyZWF0ZTogZnVuY3Rpb24oY2FuLCBhcmdzLCBkYXRhKSB7CgkJY2FuLnJ1bkFjdGlvbih7fSwgbWRiLkNSRUFURSwgYXJncywgZnVuY3Rpb24obXNnKSB7CgkJCXZhciBjdXJyZW50ID0gY2FuLm9uaW1wb3J0Ll9pdGVtKGNhbiwge2hhc2g6IG1zZy5SZXN1bHQoKSwgbmFtZTogbXNnLk9wdGlvbihtZGIuTkFNRSksIGV4dHJhOiBkYXRhfSkKCQkJY2FuLnBhZ2UuaW5zZXJ0QmVmb3JlKGNhbiwgY3VycmVudCwgY2FuLnVpLnByb2plY3QuZmlyc3RDaGlsZCkuY2xpY2soKQoJCX0pCgl9LAoJX2Nvbm5lY3Q6IGZ1bmN0aW9uKGNhbiwgaXRlbSwgdGFyZ2V0KSB7IHRhcmdldCA9IHRhcmdldHx8Y2FuLnVpLmNvbnRlbnQKCQljYW4uc3VwLl9oYXNoID0gaXRlbS5oYXNoLCBjYW4uaXNDbWRNb2RlKCkgJiYgKGxvY2F0aW9uLmhhc2ggPSBpdGVtLmhhc2gpCgkJaWYgKGNhbi5vbm1vdGlvbi5jYWNoZShjYW4sIGZ1bmN0aW9uKCkgeyByZXR1cm4gaXRlbS5oYXNoIH0sIHRhcmdldCwgY2FuLnVpLnByb2ZpbGUpKSB7CgkJCWNhbi5ydW5BY3Rpb24oY2FuLnJlcXVlc3QoZXZlbnQsIGl0ZW0pLCAic2VsZWN0IiksIGl0ZW0uX3Rlcm0uZm9jdXMoKQoJCQlyZXR1cm4gY2FuLm9uZXhwb3J0LnRlcm0oY2FuLCBpdGVtLl90ZXJtKQoJCX0KCgkJaXRlbS5leHRyYSA9IGNhbi5iYXNlLk9iaihpdGVtLmV4dHJhLCB7fSkKCQl2YXIgdGVybSA9IG5ldyBUZXJtaW5hbCh7dGhlbWU6IGl0ZW0uZXh0cmEsIGN1cnNvckJsaW5rOiB0cnVlLCB0YWJTdG9wV2lkdGg6IDR9KQoJCXZhciBmaXRBZGRvbiA9IG5ldyBGaXRBZGRvbi5GaXRBZGRvbigpOyB0ZXJtLmxvYWRBZGRvbihmaXRBZGRvbiksIHRlcm0uX2ZpdCA9IGZpdEFkZG9uCgkJdGVybS5sb2FkQWRkb24obmV3IFdlYkxpbmtzQWRkb24uV2ViTGlua3NBZGRvbigpKQoKCQl0ZXJtLm9wZW4odGFyZ2V0fHxjYW4udWkuY29udGVudCkKCQl0ZXJtLm9uUmVzaXplKGZ1bmN0aW9uKHNpemUpIHsgY2FuLm9uaW1wb3J0Ll9zaXplKGNhbiwgaXRlbSwgc2l6ZSkgfSkKCQlmaXRBZGRvbi5maXQoKQoKCQl2YXIgc3VibW9kZSA9IGZhbHNlLCBrZXlza2lwID0gZmFsc2UKCQl0ZXJtLm9uS2V5KGZ1bmN0aW9uKGUpIHsgdmFyIGV2ZW50ID0gZS5kb21FdmVudAoJCQlpZiAoc3VibW9kZSkgeyBrZXlza2lwID0gdHJ1ZTsgc3dpdGNoIChldmVudC5rZXkpIHsKCQkJCWNhc2UgImwiOiB0YXJnZXQubmV4dFNpYmxpbmcgJiYgdGFyZ2V0Lm5leHRTaWJsaW5nLl90ZXJtPyB0YXJnZXQubmV4dFNpYmxpbmcuX3Rlcm0uZm9jdXMoKToKCQkJCQkJaXRlbS5fdGFicyAmJiBpdGVtLl90YWJzLm5leHRTaWJsaW5nICYmIGl0ZW0uX3RhYnMubmV4dFNpYmxpbmcuY2xpY2soKTsKCQkJCQlicmVhawoJCQkJY2FzZSAiaCI6IHRhcmdldC5wcmV2aW91c1NpYmxpbmcgJiYgdGFyZ2V0LnByZXZpb3VzU2libGluZy5fdGVybT8gdGFyZ2V0LnByZXZpb3VzU2libGluZy5fdGVybS5mb2N1cygpOgoJCQkJCQlpdGVtLl90YWJzICYmIGl0ZW0uX3RhYnMucHJldmlvdXNTaWJsaW5nICYmIGl0ZW0uX3RhYnMucHJldmlvdXNTaWJsaW5nLmNsaWNrKCk7CgkJCQkJYnJlYWsKCQkJCWNhc2UgIm4iOiBjYW4ub25hY3Rpb24uY3JlYXRlKGV2ZW50LCBjYW4pOyBicmVhawoJCQkJCWJyZWFrCgkJCQlkZWZhdWx0OiBrZXlza2lwID0gZmFsc2UKCQkJfSB9CgkJCXN1Ym1vZGUgPSBldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleSA9PSAiZyIKCQkJY2FuLm9uZXhwb3J0LnRlcm0oY2FuLCB0ZXJtKQoJCX0pCgkJdGVybS5vbkRhdGEoZnVuY3Rpb24odmFsKSB7CgkJCWlmIChzdWJtb2RlIHx8IGtleXNraXApIHsga2V5c2tpcCA9IGZhbHNlOyByZXR1cm4gfQoJCQljYW4ub25pbXBvcnQuX2lucHV0KGNhbiwgaXRlbSwgdmFsKQoJCX0pCgkJdGVybS5vblRpdGxlQ2hhbmdlKGZ1bmN0aW9uKHRpdGxlKSB7IGNhbi5pc0NtZE1vZGUoKSAmJiBjYW4udXNlci50aXRsZSh0aXRsZSkgfSkKCQl0ZXJtLm9uQ3Vyc29yTW92ZShmdW5jdGlvbihlKSB7IGNhbi5vbmV4cG9ydC50ZXJtKGNhbiwgdGVybSkgfSkKCgkJY2FuLnRlcm1baXRlbS5oYXNoXSA9IGl0ZW0uX3Rlcm0gPSB0YXJnZXQuX3Rlcm0gPSB0ZXJtLCB0ZXJtLl90YXJnZXQgPSB0YXJnZXQsIHRlcm0uX2l0ZW0gPSBpdGVtCgkJY2FuLnJ1bkFjdGlvbihjYW4ucmVxdWVzdChldmVudCwgaXRlbSksICJzZWxlY3QiKSwgaXRlbS5fdGVybS5mb2N1cygpCgkJcmV0dXJuIGNhbi5vbmltcG9ydC5fcGx1ZyhjYW4sIGl0ZW0pLCBjYW4ub25leHBvcnQudGVybShjYW4sIHRlcm0pCgl9LAoJX2lucHV0OiBmdW5jdGlvbihjYW4sIGl0ZW0sIHZhbCkgewoJCWNhbi5ydW5BY3Rpb24oY2FuLnJlcXVlc3Qoe30sIGl0ZW0pLCAiaW5wdXQiLCBbYnRvYSh2YWwpXSwgZnVuY3Rpb24oKSB7fSkKCX0sCglfc2l6ZTogZnVuY3Rpb24oY2FuLCBpdGVtLCBzaXplKSB7CgkJY2FuLnJ1bkFjdGlvbihjYW4ucmVxdWVzdCh7fSwgc2l6ZSwgaXRlbSksICJyZXNpemUiLCBbXSkKCX0sCglfcGx1ZzogZnVuY3Rpb24oY2FuLCBpdGVtKSB7IGNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi51aS5wcm9maWxlKQoJCWNhbi5vbmltcG9ydC5wbHVnKGNhbiwgaXRlbS5leHRyYSwgY2FuLnVpLnByb2ZpbGUsIGZ1bmN0aW9uKHN1YikgeyBpdGVtLl9wbHVnaW4gPSBzdWIKCQkJY2FuLnBhZ2Uuc3R5bGUoY2FuLCBzdWIuX291dHB1dCwgaHRtbC5NQVhfV0lEVEgsIGNhbi5Db25mV2lkdGgoKSozLzQpCgkJfSkKCX0sCglncm93OiBmdW5jdGlvbihjYW4sIG1zZywgdHlwZSkgeyB2YXIgdGVybSA9IGNhbi50ZXJtW21zZy5PcHRpb24obWRiLkhBU0gpXTsgaWYgKCF0ZXJtKSB7IHJldHVybiB9CgkJc3dpdGNoICh0eXBlKSB7CgkJCWNhc2UgImRhdGEiOiB0ZXJtLndyaXRlKGF0b2IobXNnLk9wdGlvbihtZGIuVEVYVCkpKTsgYnJlYWsKCQkJY2FzZSAiZXhpdCI6IGNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIHRlcm0uX3RhcmdldCk7IGJyZWFrCgkJfQoJfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLmk43kvZzmlbDmja4iLCBsaXN0OiBbbWRiLkNSRUFURSwgbGV4LlNQTElULCBtZGIuUFJVTkVTXSwKCV90cmFuczoge3NwbGl0OiAi5YiG5bGPIiwgdGhlbWU6ICLkuLvpopgifSwKCWNyZWF0ZTogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi51c2VyLmlucHV0KGV2ZW50LCBjYW4sIFttZGIuVFlQRSwgbWRiLk5BTUUsICJiYWNrZ3JvdW5kIiwgY3R4LklOREVYLCBjdHguQVJHU10sIGZ1bmN0aW9uKGFyZ3MsIGRhdGEpIHsKCQkJY2FuLm9uaW1wb3J0Ll9jcmVhdGUoY2FuLCBhcmdzLCBkYXRhKQoJCX0pCgl9LAoJc3BsaXQ6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsgY2FuLnJlcXVlc3QoZXZlbnQsIHtuYW1lOiAidGVybSIsIG5yb3c6IDIsIG5jb2w6IDJ9KQoJCWNhbi51c2VyLmlucHV0KGV2ZW50LCBjYW4sIFttZGIuVFlQRSwgbWRiLk5BTUUsICJucm93IiwgIm5jb2wiXSwgZnVuY3Rpb24oZGF0YSkgewoJCQljYW4ub25pbXBvcnQudGFicyhjYW4sIFtkYXRhXSwgZnVuY3Rpb24oZXZlbnQpIHsgaWYgKGNhbi5vbm1vdGlvbi5jYWNoZShjYW4sIGZ1bmN0aW9uKCkgeyByZXR1cm4gZGF0YS5uYW1lIH0sIGNhbi51aS5jb250ZW50KSkgeyByZXR1cm4gfQoJCQkJY2FuLmNvcmUuTGlzdChwYXJzZUludChkYXRhLm5yb3cpLCBmdW5jdGlvbihucm93KSB7IHZhciByb3cgPSBjYW4ucGFnZS5BcHBlbmQoY2FuLCBjYW4udWkuY29udGVudCwgW3t2aWV3OiAicm93Iiwgc3R5bGU6IHtoZWlnaHQ6IGNhbi5Db25mSGVpZ2h0KCkvZGF0YS5ucm93fX1dKS5maXJzdAoJCQkJCWNhbi5jb3JlLkxpc3QocGFyc2VJbnQoZGF0YS5uY29sKSwgZnVuY3Rpb24obmNvbCkgeyB2YXIgY29sID0gY2FuLnBhZ2UuQXBwZW5kKGNhbiwgcm93LCBbe3ZpZXc6ICJjb2wiLCBzdHlsZToge2hlaWdodDogY2FuLkNvbmZIZWlnaHQoKS9kYXRhLm5yb3csIHdpZHRoOiBjYW4uQ29uZldpZHRoKCkvZGF0YS5uY29sLTJ9fV0pLmZpcnN0CgkJCQkJCWNhbi5ydW5BY3Rpb24oe30sIG1kYi5DUkVBVEUsIFttZGIuVFlQRSwgZGF0YS50eXBlLCBtZGIuTkFNRSwgY2FuLmNvcmUuS2V5cyhkYXRhLm5hbWUsIG5yb3csIG5jb2wpXSwgZnVuY3Rpb24obXNnKSB7IGNhbi5vbmltcG9ydC5fY29ubmVjdChjYW4sIHtoYXNoOiBtc2cuUmVzdWx0KCl9LCBjb2wpIH0pCgkJCQkJfSkKCQkJCX0pCgkJCX0pCgkJfSkKCX0sCn0pClZvbGNhbm9zKGNoYXQuT05ERVRBSUwsIHtoZWxwOiAi5pON5L2c5pWw5o2uIiwgbGlzdDogWyJzaGFyZSIsICJwbHVnaW4iLCAidGhlbWUiLCAicmVuYW1lIiwgInJlbW92ZSJdLAoJc2hhcmU6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbiwgaXRlbSkgeyB2YXIgbXNnID0gY2FuLnJlcXVlc3QoZXZlbnQpOyBtc2cuT3B0aW9uKCJhcmdzIiwgIiIpCgkJY2FuLm9ubW90aW9uLnNoYXJlKGV2ZW50LCBjYW4sIFt7bmFtZTogY2hhdC5USVRMRSwgdmFsdWU6IGl0ZW0ubmFtZX0sIHtuYW1lOiBjaGF0LlRPUElDLCB2YWx1ZXM6IFtjbGkuV0hJVEUsIGNsaS5CTEFDS119XSwgWwoJCQltZGIuTkFNRSwgY2FuLl9pbmRleCwgbWRiLlRFWFQsIEpTT04uc3RyaW5naWZ5KFtjYW4uc3VwLl9oYXNoXSksCgkJXSkKCX0sCglwbHVnaW46IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbiwgaXRlbSkgewoJCWNhbi51c2VyLmlucHV0KGV2ZW50LCBjYW4sIFtjdHguSU5ERVgsIGN0eC5BUkdTXSwgZnVuY3Rpb24oYXJncywgZGF0YSkgewoJCQljYW4ucnVuQWN0aW9uKGV2ZW50LCBtZGIuTU9ESUZZLCBhcmdzKSwgY2FuLmJhc2UuQ29weShpdGVtLmV4dHJhLCBkYXRhKSwgY2FuLm9uaW1wb3J0Ll9wbHVnKGNhbiwgaXRlbSkKCQl9KQoJfSwKCXRoZW1lOiBmdW5jdGlvbihldmVudCwgY2FuLCBidXR0b24sIGl0ZW0pIHsKCQljYW4udXNlci5pbnB1dChldmVudCwgY2FuLCBbImJhY2tncm91bmQiLCAic2VsZWN0aW9uIiwgImN1cnNvciIsICJmb3JlZ3JvdW5kIl0sIGZ1bmN0aW9uKGFyZ3MsIGRhdGEpIHsKCQkJY2FuLnJ1bkFjdGlvbihldmVudCwgbWRiLk1PRElGWSwgYXJncyksIGNhbi5iYXNlLkNvcHkoaXRlbS5leHRyYSwgZGF0YSksIGl0ZW0uX3Rlcm0uc2V0T3B0aW9uKCJ0aGVtZSIsIGRhdGEpCgkJfSkKCX0sCglyZW5hbWU6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbiwgaXRlbSkgewoJCWNhbi51c2VyLmlucHV0KGV2ZW50LCBjYW4sIFttZGIuTkFNRV0sIGZ1bmN0aW9uKGFyZ3MpIHsKCQkJY2FuLnJ1bkFjdGlvbihldmVudCwgYnV0dG9uLCBhcmdzKSwgaXRlbS5uYW1lID0gaXRlbS5faXRlbS5pbm5lclRleHQgPSBpdGVtLl90YWJzLmlubmVyVGV4dCA9IGFyZ3NbMV0KCQl9KQoJfSwKCXJlbW92ZTogZnVuY3Rpb24oZXZlbnQsIGNhbiwgYnV0dG9uLCBpdGVtKSB7CgkJY2FuLnJ1bkFjdGlvbihldmVudCwgYnV0dG9uKQoJfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkVYUE9SVCwge2hlbHA6ICLlr7zlh7rmlbDmja4iLCBsaXN0OiBbbWRiLlRPVEFMLCBtZGIuVFlQRSwgImJhY2tncm91bmQiLCAicm93cyIsICJjb2xzIiwgImN1cnNvclkiLCAiY3Vyc29yWCIsIGN0eC5JTkRFWF0sCgl0ZXJtOiBmdW5jdGlvbihjYW4sIHRlcm0pIHsgaXRlbSA9IHRlcm0uX2l0ZW0KCQljYW4uY29yZS5MaXN0KGNhbi5vbmV4cG9ydC5saXN0LCBmdW5jdGlvbihrZXkpIHsKCQkJY2FuLlN0YXR1cyhrZXksIGNhbi5iYXNlLmdldFZhbGlkKGl0ZW1ba2V5XSwgaXRlbS5leHRyYVtrZXldLCB0ZXJtW2tleV0sIHRlcm0uYnVmZmVyLmFjdGl2ZVtrZXldLCAiIikpCgkJfSkKCQljYW4uU3RhdHVzKG1kYi5UT1RBTCwgY2FuLnBhZ2UuU2VsZWN0KGNhbiwgY2FuLnVpLnByb2plY3QsIGh0bWwuRElWX0lURU0pLmxlbmd0aCkKCQljYW4uU3RhdHVzKG1kYi5UWVBFLCBpdGVtW21kYi5UWVBFXXx8IiIpCgkJcmV0dXJuIHRlcm0KCX0sCn0pCg==",
        "usr/volcanos/plugin/local/team/plan.css": "ZmllbGRzZXQucGxhbj5kaXYub3V0cHV0IHRkIHsgdmVydGljYWwtYWxpZ246dG9wOyB9CmZpZWxkc2V0LnBsYW4+ZGl2Lm91dHB1dCB0ZC5vdmVyIHsgYm9yZGVyOnNvbGlkIDJweCByZWQ7IH0KZmllbGRzZXQucGxhbj5kaXYub3V0cHV0IHRkIGRpdi5kYXRlIHsgY29sb3I6Z3JheTsgfQpmaWVsZHNldC5wbGFuPmRpdi5vdXRwdXQgZGl2LnByZXBhcmUgeyBiYWNrZ3JvdW5kLWNvbG9yOmJsdWU7IGNvbG9yOndoaXRlOyB9CmZpZWxkc2V0LnBsYW4+ZGl2Lm91dHB1dCBkaXYucHJvY2VzcyB7IGJhY2tncm91bmQtY29sb3I6Z3JlZW47IGNvbG9yOndoaXRlOyB9CmZpZWxkc2V0LnBsYW4+ZGl2Lm91dHB1dCBkaXYuY2FuY2VsIHsgYmFja2dyb3VuZC1jb2xvcjpyZWQ7IGNvbG9yOndoaXRlOyB9CmZpZWxkc2V0LnBsYW4+ZGl2Lm91dHB1dCBkaXYuZmluaXNoIHsgYmFja2dyb3VuZC1jb2xvcjpncmF5OyBjb2xvcjp3aGl0ZTsgfQo=",
        "usr/volcanos/plugin/local/team/plan.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuLCB0YXJnZXQpLCBjYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKG1zZykKCQljYW4udWkgPSBjYW4ub25sYXlvdXQucHJvZmlsZShjYW4pLCBjYW4ub25pbXBvcnRbY2FuLk9wdGlvbigic2NhbGUiKXx8IndlZWsiXShjYW4sIG1zZykKCQljYW4ucGFnZS5zdHlsZShjYW4sIGNhbi51aS5wcm9qZWN0LCBodG1sLk1BWF9IRUlHSFQsIGNhbi51aS5jb250ZW50Lm9mZnNldEhlaWdodCkKCQljYW4ucGFnZS5zdHlsZShjYW4sIGNhbi51aS5wcm9maWxlLCBodG1sLk1BWF9IRUlHSFQsIGNhbi51aS5jb250ZW50Lm9mZnNldEhlaWdodCkKCQljYW4udXNlci5pc01vYmlsZSAmJiAhY2FuLnVzZXIuaXNMYW5kc2NhcGUoKSAmJiBjYW4ub25tb3Rpb24uaGlkZGVuKGNhbiwgY2FuLnVpLnByb2plY3QpCgkJIWNhbi51c2VyLmlzTW9iaWxlICYmIGNhbi5vbm1vdGlvbi50b2dnbGUoY2FuLCBjYW4udWkucHJvZmlsZSwgdHJ1ZSkKCQkhY2FuLnVzZXIuaXNNb2JpbGUgJiYgY2FuLm9ubW90aW9uLnRvZ2dsZShjYW4sIGNhbi51aS5kaXNwbGF5LCB0cnVlKQoJfSwKCV9jb250ZW50OiBmdW5jdGlvbihjYW4sIG1zZywgaGVhZCwgbGlzdCwga2V5LCBnZXQsIHNldCkgewoJCXZhciBoYXNoID0ge307IG1zZy5UYWJsZShmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsgdmFyIGsgPSBrZXkoY2FuLmJhc2UuRGF0ZSh2YWx1ZS5iZWdpbl90aW1lKSk7IGhhc2hba10gPSAoaGFzaFtrXXx8W10pLmNvbmNhdChbdmFsdWVdKSB9KQoKCQljYW4uc3VwLnRhc2sgJiYgKGNhbi5zdXAudGFzay5fdGFyZ2V0ID0gbnVsbCkKCQl2YXIgYmVnaW5fdGltZSA9IGNhbi5iYXNlLkRhdGUoY2FuLk9wdGlvbigiYmVnaW5fdGltZSIpKQoJCWNhbi5wYWdlLkFwcGVuZChjYW4sIGNhbi51aS5jb250ZW50LCBbe3ZpZXc6IFtjaGF0LkNPTlRFTlQsIGh0bWwuVEFCTEVdLCBsaXN0OiBjYW4uY29yZS5MaXN0KGxpc3QsIGZ1bmN0aW9uKGhvdXIsIHJvdykgewoJCQlyZXR1cm4ge3R5cGU6IGh0bWwuVFIsIGxpc3Q6IGNhbi5jb3JlLkxpc3QoaGVhZCwgZnVuY3Rpb24od2VlaywgY29sKSB7CgkJCQlpZiAocm93ID09IDApIHsgcmV0dXJuIHt0ZXh0OiBbY2FuLnVzZXIudHJhbnMoY2FuLCB3ZWVrKSwgaHRtbC5USF19IH0KCQkJCWlmIChjb2wgPT0gMCkgeyByZXR1cm4ge3RleHQ6IFtob3VyLCBodG1sLlREXX0gfQoJCQkJcmV0dXJuIGNhbi5vbmltcG9ydC5fdGFzayhjYW4sIG1zZywgZ2V0KGJlZ2luX3RpbWUsIGNvbCwgcm93LCBoYXNoKSwgc2V0KGJlZ2luX3RpbWUsIGNvbCwgcm93KSkKCQkJfSl9CgkJfSkgfV0pLCBjYW4uU3RhdHVzKG1kYi5DT1VOVCwgbXNnLkxlbmd0aCgpKQoKCQltc2cuTGVuZ3RoKCkgPiAwICYmIGNhbi5zdXAudGFzayAmJiBjYW4ub25tb3Rpb24uZGVsYXkoY2FuLCBmdW5jdGlvbigpIHsKCQkJdmFyIHRhcmdldCA9IGNhbi5zdXAudGFzay5fdGFyZ2V0fHxjYW4udGFzay5fdGFyZ2V0OyBjYW4uc3VwLnRhc2sgPSBudWxsLCB0YXJnZXQgJiYgdGFyZ2V0LmNsaWNrKCkKCQl9KQoJfSwKCV90YXNrOiBmdW5jdGlvbihjYW4sIG1zZywgbGlzdCwgdGltZSkgeyByZXR1cm4ge3RleHQ6IFsiIiwgaHRtbC5URF0sCgkJb25kYmxjbGljazogZnVuY3Rpb24oZXZlbnQpIHsKCQkJY2FuLm9uYWN0aW9uLmluc2VydFRhc2soZXZlbnQsIGNhbiwgdGltZStjYW4uYmFzZS5UaW1lKG51bGwsICIleS0lbS0lZCAlSDolTTolUyIpLnNsaWNlKHRpbWUubGVuZ3RoKSkKCQl9LAoJCW9uZHJvcDogZnVuY3Rpb24oZXZlbnQpIHsgY2FuLm9ua2V5bWFwLnByZXZlbnQoZXZlbnQpCgkJCWNhbi5kcm9wKGV2ZW50LCBldmVudC50YXJnZXQsIHRpbWUpCgkJfSwKCQlvbmRyYWdvdmVyOiBmdW5jdGlvbihldmVudCkgeyBjYW4ub25rZXltYXAucHJldmVudChldmVudCkKCQkJY2FuLnBhZ2UuU2VsZWN0KGNhbiwgY2FuLnVpLmNvbnRlbnQsIGh0bWwuVEQsIGZ1bmN0aW9uKGl0ZW0pIHsKCQkJCWNhbi5wYWdlLkNsYXNzTGlzdC5zZXQoY2FuLCBpdGVtLCAib3ZlciIsIGV2ZW50LnRhcmdldCA9PSBpdGVtKQoJCQl9KQoJCX0sCgkJbGlzdDogY2FuLmNvcmUuTGlzdChsaXN0LCBmdW5jdGlvbih0YXNrKSB7CgkJCXJldHVybiBjYW4uYmFzZS5pc1N0cmluZyh0YXNrKT8ge3RleHQ6IFt0YXNrLCBodG1sLkRJViwgImRhdGUiXX06IHt0ZXh0OiBbY2FuLm9uZXhwb3J0W2Nhbi5BY3Rpb24oInZpZXciKXx8InRleHQiXShjYW4sIHRhc2spLCBodG1sLkRJViwgY2FuLm9uZXhwb3J0LnN0eWxlKGNhbiwgdGFzayldLAoJCQkJb25kcmFnc3RhcnQ6IGZ1bmN0aW9uKGV2ZW50KSB7IHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7IGNhbi5kcm9wID0gZnVuY3Rpb24oZXZlbnQsIHRkLCB0aW1lKSB7IHRkLmFwcGVuZCh0YXJnZXQpCgkJCQkJY2FuLm9uYWN0aW9uLm1vZGlmeVRhc2soZXZlbnQsIGNhbiwgdGFzaywgImJlZ2luX3RpbWUiLCB0aW1lK3Rhc2suYmVnaW5fdGltZS5zbGljZSh0aW1lLmxlbmd0aCksIHRhc2suYmVnaW5fdGltZSkKCQkJCX0gfSwgZHJhZ2dhYmxlOiB0aW1lICE9IHVuZGVmaW5lZCwgdGl0bGU6IGNhbi5vbmV4cG9ydC50aXRsZShjYW4sIHRhc2spLCBfaW5pdDogZnVuY3Rpb24odGFyZ2V0KSB7CgkJCQkJdmFyIGl0ZW0gPSBjYW4ub25pbXBvcnQuaXRlbShjYW4sIHtuaWNrOiB0YXNrLm5hbWUrIjoiK3Rhc2sudGV4dH0sIGZ1bmN0aW9uKCkgeyBjYW4ub25tb3Rpb24uZGVsYXkoY2FuLCBmdW5jdGlvbigpIHsKCQkJCQkJY2FuLm9ubW90aW9uLnNlbGVjdChjYW4sIGNhbi51aS5jb250ZW50LCBodG1sLlRELCB0YXJnZXQucGFyZW50Tm9kZSksIGNhbi5vbmltcG9ydC5fcHJvZmlsZShjYW4sIHRhc2spCgkJCQkJfSkgfSwgbnVsbCwgY2FuLnVpLnByb2plY3QpOyB0YXNrLl90YXJnZXQgPSB0YXJnZXQsIHRhcmdldC5vbmNsaWNrID0gZnVuY3Rpb24oZXZlbnQpIHsgaXRlbS5jbGljaygpIH0KCQkJCQljYW4udGFzayA9IGNhbi50YXNrfHx0YXNrLCBjYW4uc3VwLnRhc2sgPSBjYW4uc3VwLnRhc2t8fHRhc2ssIGNhbi5zdXAudGFzay56b25lID09IHRhc2suem9uZSAmJiBjYW4uc3VwLnRhc2suaWQgPT0gdGFzay5pZCAmJiAoY2FuLnN1cC50YXNrLl90YXJnZXQgPSB0YXJnZXQpCgkJCQl9LAoJCQl9CgkJfSksCgl9IH0sCglfcHJvZmlsZTogZnVuY3Rpb24oY2FuLCB0YXNrKSB7CgkJaWYgKGNhbi5vbm1vdGlvbi5jYWNoZShjYW4sIGZ1bmN0aW9uKCkgeyByZXR1cm4gY2FuLnN1cC50YXNrID0gdGFzaywgY2FuLlN0YXR1cyh0YXNrKSwgW3Rhc2sucG9kLCB0YXNrLnpvbmUsIHRhc2suaWRdLmpvaW4oaWNlLlBUKSB9LCBjYW4udWkucHJvZmlsZSwgY2FuLnVpLmRpc3BsYXkpKSB7IHJldHVybiB9CgoJCXRhc2suZXh0cmEgJiYgY2FuLmNvcmUuSXRlbShjYW4uYmFzZS5PYmoodGFzay5leHRyYSksIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgdGFza1siZXh0cmEuIitrZXldID0gdmFsdWUgfSksIGRlbGV0ZSh0YXNrLmV4dHJhKQoJCXZhciB0YWJsZSA9IGNhbi5wYWdlLkFwcGVuZHMoY2FuLCBjYW4udWkucHJvZmlsZSwgW3t2aWV3OiBbY2hhdC5DT05URU5ULCBodG1sLlRBQkxFXSwgbGlzdDogW3t0aDogW21kYi5LRVksIG1kYi5WQUxVRV19XX1dKS5maXJzdAoJCWNhbi5jb3JlLkl0ZW0odGFzaywgZnVuY3Rpb24oa2V5LCB2YWx1ZSkgeyBrZXkgIT0gIl90YXJnZXQiICYmIGNhbi5wYWdlLkFwcGVuZChjYW4sIHRhYmxlLCBbewoJCQl0ZDogW2tleSwga2V5ID09IGljZS5QT0QgJiYgdmFsdWUgIT0gIiI/IGNhbi5wYWdlLkZvcm1hdChodG1sLkEsIGNhbi5taXNjLk1lcmdlVVJMKGNhbiwge3BvZDogdmFsdWV9KSwgdmFsdWUpOiB2YWx1ZV0sCgkJCW9uY2xpY2s6IGZ1bmN0aW9uKGV2ZW50KSB7IGlmIChjYW4ucGFnZS50YWdpcyhodG1sLklOUFVULCBldmVudC50YXJnZXQpICYmIGV2ZW50LnRhcmdldC50eXBlID09IGh0bWwuQlVUVE9OKSB7CgkJCQljYW4ucnVuKGNhbi5yZXF1ZXN0KGV2ZW50LCB0YXNrKSwgW2N0eC5BQ1RJT04sIGV2ZW50LnRhcmdldC5uYW1lXSwgZnVuY3Rpb24obXNnKSB7IGNhbi5VcGRhdGUoKSB9KQoJCQl9IH0sCgkJCW9uZGJsY2xpY2s6IGZ1bmN0aW9uKGV2ZW50KSB7IHZhciBtc2cgPSBjYW4ucmVxdWVzdCgpCgkJCQlzd2l0Y2ggKGtleSkgewoJCQkJCWNhc2UgInpvbmUiOgoJCQkJCWNhc2UgImlkIjoKCQkJCQkJcmV0dXJuCgkJCQkJY2FzZSAibGV2ZWwiOgoJCQkJCWNhc2UgInNjb3JlIjoKCQkJCQkJbXNnLlB1c2goa2V5LCAiMSIpCgkJCQkJCW1zZy5QdXNoKGtleSwgIjIiKQoJCQkJCQltc2cuUHVzaChrZXksICIzIikKCQkJCQkJbXNnLlB1c2goa2V5LCAiNCIpCgkJCQkJCW1zZy5QdXNoKGtleSwgIjUiKQoJCQkJCQlicmVhawoJCQkJCWNhc2UgInN0YXR1cyI6CgkJCQkJCW1zZy5QdXNoKGtleSwgInByZXBhcmUiKQoJCQkJCQltc2cuUHVzaChrZXksICJwcm9jZXNzIikKCQkJCQkJbXNnLlB1c2goa2V5LCAiZmluaXNoIikKCQkJCQkJbXNnLlB1c2goa2V5LCAiY2FuY2VsIikKCQkJCQkJYnJlYWsKCQkJCX0KCQkJCWNhbi5vbm1vdGlvbi5tb2RpZnkoY2FuLCBldmVudC50YXJnZXQsIGZ1bmN0aW9uKHN1YiwgdmFsdWUpIHsKCQkJCQljYW4ub25hY3Rpb24ubW9kaWZ5VGFzayhldmVudCwgY2FuLCB0YXNrLCBrZXksIHZhbHVlKQoJCQkJfSwge25hbWU6IGtleSwgYWN0aW9uOiBrZXkuaW5kZXhPZihtZGIuVElNRSkgPiAwPyAiZGF0ZSI6ICJrZXkiLCBtc2c6IG1zZywgbW9kZTogInNpbXBsZSJ9KQoJCQl9LAoJCX1dKSB9KSwgY2FuLm9uaW1wb3J0Ll9kaXNwbGF5KGNhbiwgdGFzaykKCX0sCglfZGlzcGxheTogZnVuY3Rpb24oY2FuLCB0YXNrKSB7IGlmICghdGFza1siZXh0cmEuY21kIl0pIHsgcmV0dXJuIH0KCQljYW4ub25hcHBlbmQucGx1Z2luKGNhbiwge3R5cGU6ICJwbHVnIiwgY3R4OiB0YXNrWyJleHRyYS5jdHgiXSwgY21kOiB0YXNrWyJleHRyYS5jbWQiXSwgYXJnOiB0YXNrWyJleHRyYS5hcmciXX0sIGZ1bmN0aW9uKHN1YiwgbWV0YSkgewoJCQlzdWIucnVuID0gZnVuY3Rpb24oZXZlbnQsIGNtZHMsIGNiKSB7IHZhciBtc2cgPSBjYW4ucmVxdWVzdChldmVudCwga2l0LkRpY3QoInRhc2sucG9kIiwgdGFza1sicG9kIl0sICJ0YXNrLnpvbmUiLCB0YXNrLnpvbmUsICJ0YXNrLmlkIiwgdGFzay5pZCkpCgkJCQljYW4ucnVuQWN0aW9uKGV2ZW50LCBpY2UuUlVOLCBbdGFza1ttZGIuWk9ORV0sIHRhc2tbbWRiLklEXV0uY29uY2F0KGNtZHMpLCBjYikKCQkJfQoJCX0sIGNhbi51aS5kaXNwbGF5KQoJfSwKCglkYXk6IGZ1bmN0aW9uKGNhbiwgbXNnKSB7CgkJdmFyIGhlYWQgPSBbImhvdXIiLCAidGFzayJdCgkJdmFyIGxpc3QgPSBbMF07IGZvciAodmFyIGkgPSA3OyBpIDwgMjQ7IGkrKykgeyBsaXN0LnB1c2goY2FuLmJhc2UuTnVtYmVyKGksIDIpKSB9CgoJCWZ1bmN0aW9uIGtleSh0aW1lKSB7IHJldHVybiBjYW4uYmFzZS5OdW1iZXIodGltZS5nZXRIb3VycygpLCAyKSB9CgkJZnVuY3Rpb24gZ2V0KGJlZ2luX3RpbWUsIGNvbCwgcm93LCBoYXNoKSB7IHJldHVybiBoYXNoW2xpc3Rbcm93XV0gfQoJCWZ1bmN0aW9uIHNldChiZWdpbl90aW1lLCBjb2wsIHJvdykgeyByZXR1cm4gY2FuLmJhc2UuVGltZShiZWdpbl90aW1lLCAiJXktJW0tJWQgIikrbGlzdFtyb3ddIH0KCgkJY2FuLm9uaW1wb3J0Ll9jb250ZW50KGNhbiwgbXNnLCBoZWFkLCBsaXN0LCBrZXksIGdldCwgc2V0KQoJfSwKCXdlZWs6IGZ1bmN0aW9uKGNhbiwgbXNnKSB7CgkJdmFyIGhlYWQgPSBjYW4ub25leHBvcnQuaGVhZChjYW4sICJob3VyIikKCQl2YXIgbGlzdCA9IFswXTsgZm9yICh2YXIgaSA9IDc7IGkgPCAyNDsgaSsrKSB7IGxpc3QucHVzaChjYW4uYmFzZS5OdW1iZXIoaSwgMikpIH0KCgkJZnVuY3Rpb24ga2V5KHRpbWUpIHsgcmV0dXJuIHRpbWUuZ2V0RGF5KCkrIiAiK2Nhbi5iYXNlLk51bWJlcih0aW1lLmdldEhvdXJzKCksIDIpIH0KCQlmdW5jdGlvbiBnZXQoYmVnaW5fdGltZSwgY29sLCByb3csIGhhc2gpIHsgcmV0dXJuIGhhc2hbY29sLTErIiAiK2xpc3Rbcm93XV0gfQoJCWZ1bmN0aW9uIHNldChiZWdpbl90aW1lLCBjb2wsIHJvdykgeyByZXR1cm4gY2FuLmJhc2UuVGltZShjYW4uYmFzZS5UaW1lQWRkKGJlZ2luX3RpbWUsIC1iZWdpbl90aW1lLmdldERheSgpK2NvbC0xKSwgIiV5LSVtLSVkICIpK2xpc3Rbcm93XSB9CgoJCWNhbi5vbmltcG9ydC5fY29udGVudChjYW4sIG1zZywgaGVhZCwgbGlzdCwga2V5LCBnZXQsIHNldCkKCX0sCgltb250aDogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCQl2YXIgaGVhZCA9IGNhbi5vbmV4cG9ydC5oZWFkKGNhbiwgIm9yZGVyIikKCQl2YXIgbGlzdCA9IFswXTsgZm9yICh2YXIgaSA9IDE7IGkgPCA2OyBpKyspIHsgbGlzdC5wdXNoKGkpIH0KCgkJZnVuY3Rpb24ga2V5KHRpbWUpIHsgcmV0dXJuIGNhbi5iYXNlLlRpbWUodGltZSwgIiV5LSVtLSVkIikgfQoJCWZ1bmN0aW9uIGdldChiZWdpbl90aW1lLCBjb2wsIHJvdywgaGFzaCkgewoJCQl2YXIgYmVnaW4gPSBjYW4uYmFzZS5UaW1lQWRkKGJlZ2luX3RpbWUsIC0oYmVnaW5fdGltZS5nZXREYXRlKCktMSkpCgkJCXZhciBsYXN0ID0gY2FuLmJhc2UuVGltZUFkZChiZWdpbl90aW1lLCAtKGJlZ2luX3RpbWUuZ2V0RGF0ZSgpLTEpLWJlZ2luLmdldERheSgpKQoJCQl2YXIgZGF5ID0gY2FuLmJhc2UuVGltZUFkZChsYXN0LCAocm93LTEpKjcrY29sKQoJCQlyZXR1cm4gW2RheS5nZXREYXRlKCkrIiJdLmNvbmNhdChoYXNoW2tleShkYXkpXXx8W10pCgkJfQoJCWZ1bmN0aW9uIHNldChiZWdpbl90aW1lLCBjb2wsIHJvdykgewoJCQl2YXIgYmVnaW4gPSBjYW4uYmFzZS5UaW1lQWRkKGJlZ2luX3RpbWUsIC0oYmVnaW5fdGltZS5nZXREYXRlKCktMSkpCgkJCXZhciBsYXN0ID0gY2FuLmJhc2UuVGltZUFkZChiZWdpbl90aW1lLCAtKGJlZ2luX3RpbWUuZ2V0RGF0ZSgpLTEpLWJlZ2luLmdldERheSgpKQoJCQl2YXIgZGF5ID0gY2FuLmJhc2UuVGltZUFkZChsYXN0LCAocm93LTEpKjcrY29sKQoJCQlyZXR1cm4ga2V5KGRheSkKCQl9CgoJCWNhbi5vbmltcG9ydC5fY29udGVudChjYW4sIG1zZywgaGVhZCwgbGlzdCwga2V5LCBnZXQsIHNldCkKCX0sCgl5ZWFyOiBmdW5jdGlvbihjYW4sIG1zZykgewoJCXZhciBoZWFkID0gY2FuLm9uZXhwb3J0LmhlYWQoY2FuLCAibW9udGgiKQoJCXZhciBsaXN0ID0gWzBdOyBmb3IgKHZhciBpID0gMTsgaSA8IDEzOyBpKyspIHsgbGlzdC5wdXNoKGkpIH0KCgkJZnVuY3Rpb24ga2V5KHRpbWUpIHsgcmV0dXJuIGNhbi5iYXNlLlRpbWUodGltZSwgIiV5LSVtICIpK3RpbWUuZ2V0RGF5KCkgfQoJCWZ1bmN0aW9uIGdldChiZWdpbl90aW1lLCBjb2wsIHJvdywgaGFzaCkgeyByZXR1cm4gaGFzaFtiZWdpbl90aW1lLmdldEZ1bGxZZWFyKCkrIi0iK2Nhbi5iYXNlLk51bWJlcihyb3csIDIpKyIgIisoY29sLTEpXSB9CgkJZnVuY3Rpb24gc2V0KGJlZ2luX3RpbWUsIGNvbCwgcm93KSB7IHJldHVybiBiZWdpbl90aW1lLmdldEZ1bGxZZWFyKCkrIi0iK2Nhbi5iYXNlLk51bWJlcihsaXN0W3Jvd10sIDIpIH0KCgkJY2FuLm9uaW1wb3J0Ll9jb250ZW50KGNhbiwgbXNnLCBoZWFkLCBsaXN0LCBrZXksIGdldCwgc2V0KQoJfSwKCWxvbmc6IGZ1bmN0aW9uKGNhbiwgbXNnKSB7CgkJdmFyIGJlZ2luX3RpbWUgPSBjYW4uYmFzZS5EYXRlKGNhbi5iYXNlLlRpbWUoY2FuLk9wdGlvbigiYmVnaW5fdGltZSIpLCAiJXktJW0tJWQgJUg6JU06JVMiKSkKCQl2YXIgYmVnaW4gPSBiZWdpbl90aW1lLmdldEZ1bGxZZWFyKCkgLSA1CgoJCXZhciBoZWFkID0gWyJtb250aCJdOyBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHsgaGVhZC5wdXNoKGJlZ2luK2kpIH0KCQl2YXIgbGlzdCA9IFswXTsgZm9yICh2YXIgaSA9IDE7IGkgPCAxMzsgaSsrKSB7IGxpc3QucHVzaChpKSB9CgoJCWZ1bmN0aW9uIGtleSh0aW1lKSB7IHJldHVybiBjYW4uYmFzZS5UaW1lKHRpbWUsICIleS0lbSIpIH0KCQlmdW5jdGlvbiBnZXQoYmVnaW5fdGltZSwgY29sLCByb3csIGhhc2gpIHsgcmV0dXJuIGhhc2hbYmVnaW4rY29sLTErIi0iK2Nhbi5iYXNlLk51bWJlcihyb3csIDIpXSB9CgkJZnVuY3Rpb24gc2V0KGJlZ2luX3RpbWUsIGNvbCwgcm93KSB7IHJldHVybiBiZWdpbitjb2wtMSsiLSIrY2FuLmJhc2UuTnVtYmVyKHJvdywgMikgfQoKCQljYW4ub25pbXBvcnQuX2NvbnRlbnQoY2FuLCBtc2csIGhlYWQsIGxpc3QsIGtleSwgZ2V0LCBzZXQpCgl9LAp9LCBbIiJdKQpWb2xjYW5vcyhjaGF0Lk9OQUNUSU9OLCB7aGVscDogIue7hOS7tuS6pOS6kiIsIGxpc3Q6IFsKCQkiaW5zZXJ0IiwgImV4cG9ydCIsICJpbXBvcnQiLAoJCVsibGV2ZWwiLCAiYWxsIiwgImwxIiwgImwyIiwgImwzIiwgImw0IiwgImw1Il0sCgkJWyJzdGF0dXMiLCAiYWxsIiwgInByZXBhcmUiLCAicHJvY2VzcyIsICJjYW5jZWwiLCAiZmluaXNoIl0sCgkJWyJzY29yZSIsICJhbGwiLCAiczEiLCAiczIiLCAiczMiLCAiczQiLCAiczUiXSwKCQlbInZpZXciLCAiIiwgIm5hbWUiLCAidGV4dCIsICJsZXZlbCIsICJzY29yZSJdLAoJXSwKCV90cmFuczogeyJ0YXNrIjogIuS7u+WKoSIsICJob3VyIjogIuaXtumXtCIsICJtb250aCI6ICLmnIjku70ifSwKCWluc2VydFRhc2s6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIHRpbWUpIHsgdmFyIG1zZyA9IGNhbi5zdXAucmVxdWVzdChldmVudCwge2JlZ2luX3RpbWU6IHRpbWV9KQoJCWNhbi51c2VyLmlucHV0KGV2ZW50LCBjYW4sIGNhbi5Db25mKFtjdHguRkVBVFVSRSwgbWRiLklOU0VSVF0pLCBmdW5jdGlvbihhcmdzKSB7CgkJCWNhbi5ydW5BY3Rpb24oZXZlbnQsIG1kYi5JTlNFUlQsIFsiem9uZSIsIGFyZ3NbMV0sICJiZWdpbl90aW1lIiwgdGltZV0uY29uY2F0KGFyZ3MpKQoJCX0pCgl9LAoJbW9kaWZ5VGFzazogZnVuY3Rpb24oZXZlbnQsIGNhbiwgdGFzaywga2V5LCB2YWx1ZSkgewoJCWNhbi5ydW5BY3Rpb24oY2FuLnJlcXVlc3QoZXZlbnQsIHRhc2spLCBtZGIuTU9ESUZZLCBba2V5LCB2YWx1ZSwgdGFza1trZXldXSkKCX0sCgoJX2ZpbHRlcjogZnVuY3Rpb24oZXZlbnQsIGNhbiwga2V5LCB2YWx1ZSkgeyB2YXIgY291bnQgPSAwCgkJaWYgKHZhbHVlID09ICJhbGwiKSB7CgkJCWNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi51aS5jb250ZW50LCBodG1sLkRJVl9JVEVNLCBmdW5jdGlvbihpdGVtKSB7CgkJCQljYW4ucGFnZS5DbGFzc0xpc3QuZGVsKGNhbiwgaXRlbSwgaHRtbC5ISURFKSwgY291bnQrKwoJCQl9KQoJCX0gZWxzZSB7CgkJCWNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi51aS5jb250ZW50LCBodG1sLkRJVl9JVEVNLCBmdW5jdGlvbihpdGVtKSB7CgkJCQljYW4ucGFnZS5DbGFzc0xpc3QuYWRkKGNhbiwgaXRlbSwgaHRtbC5ISURFKQoJCQl9KQoJCQljYW4ucGFnZS5TZWxlY3QoY2FuLCBjYW4udWkuY29udGVudCwgY2FuLmNvcmUuS2V5cyhodG1sLkRJViwgdmFsdWUpLCBmdW5jdGlvbihpdGVtKSB7CgkJCQljYW4ucGFnZS5DbGFzc0xpc3QuZGVsKGNhbiwgaXRlbSwgaHRtbC5ISURFKSwgY291bnQrKwoJCQl9KQoJCX0KCQljYW4uQWN0aW9uKGtleSwgdmFsdWUpLCBjYW4uU3RhdHVzKG1kYi5DT1VOVCwgY291bnQpCgl9LAoJbGV2ZWw6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGtleSwgdmFsdWUpIHsgY2FuLm9uYWN0aW9uLl9maWx0ZXIoZXZlbnQsIGNhbiwga2V5LCB2YWx1ZSkgfSwKCXN0YXR1czogZnVuY3Rpb24oZXZlbnQsIGNhbiwga2V5LCB2YWx1ZSkgeyBjYW4ub25hY3Rpb24uX2ZpbHRlcihldmVudCwgY2FuLCBrZXksIHZhbHVlKSB9LAoJc2NvcmU6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGtleSwgdmFsdWUpIHsgY2FuLm9uYWN0aW9uLl9maWx0ZXIoZXZlbnQsIGNhbiwga2V5LCB2YWx1ZSkgfSwKCXZpZXc6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGtleSwgdmFsdWUpIHsgY2FuLkFjdGlvbihrZXksIHZhbHVlKQoJCWNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi51aS5wcm9qZWN0KSwgY2FuLm9ubW90aW9uLmNsZWFyKGNhbiwgY2FuLnVpLmNvbnRlbnQpCgkJY2FuLm9uaW1wb3J0W2Nhbi5PcHRpb24oInNjYWxlIildKGNhbiwgY2FuLl9tc2cpCgl9LAp9KQpWb2xjYW5vcyhjaGF0Lk9ORVhQT1JULCB7aGVscDogIuWvvOWHuuaVsOaNriIsIGxpc3Q6IFttZGIuQ09VTlQsICJiZWdpbl90aW1lIiwgbWRiLlpPTkUsIG1kYi5JRCwgbWRiLlRZUEUsIG1kYi5OQU1FLCBtZGIuVEVYVF0sCgluYW1lOiBmdW5jdGlvbihjYW4sIHRhc2spIHsgcmV0dXJuIHRhc2submFtZSB9LAoJdGV4dDogZnVuY3Rpb24oY2FuLCB0YXNrKSB7IHJldHVybiB0YXNrLm5hbWUrIjogIisodGFzay50ZXh0fHwiIikgfSwKCWxldmVsOiBmdW5jdGlvbihjYW4sIHRhc2spIHsgcmV0dXJuICJsLSIrKHRhc2subGV2ZWx8fDMpKyI6ICIrKHRhc2submFtZXx8IiIpIH0sCglzY29yZTogZnVuY3Rpb24oY2FuLCB0YXNrKSB7IHJldHVybiAicy0iKyh0YXNrLmxldmVsfHwzKSsiOiAiKyh0YXNrLm5hbWV8fCIiKSB9LAoJdGl0bGU6IGZ1bmN0aW9uKGNhbiwgdGFzaykgeyByZXR1cm4gdGFzay56b25lKyI6ICIrKHRhc2sudHlwZXx8IiIpIH0sCglzdHlsZTogZnVuY3Rpb24oY2FuLCB0YXNrKSB7IHJldHVybiBbaHRtbC5JVEVNLCB0YXNrLnN0YXR1cywgbWRiLklEK3Rhc2suaWQsICJsIisodGFzay5sZXZlbHx8IiIpLCAicyIrKHRhc2suc2NvcmV8fCIiKV0uam9pbihpY2UuU1ApIH0sCgloZWFkOiBmdW5jdGlvbihjYW4sIHNjYWxlKSB7CgkJc3dpdGNoIChzY2FsZSkgewoJCQljYXNlICJ5ZWFyIjoKCQkJY2FzZSAibG9uZyI6CgkJCQlyZXR1cm4KCQl9CgkJcmV0dXJuIFtzY2FsZV0uY29uY2F0KGNhbi51c2VyLmluZm8ubGFuZ3VhZ2UgPT0gImVuIj8gWyJNb24iLCAiVHVlIiwgIldlZCIsICJUaHUiLCAiRnJpIiwgIlNhdCIsICJTdW4iXTogWyLlkajml6UiLCAi5ZGo5LiAIiwgIuWRqOS6jCIsICLlkajkuIkiLCAi5ZGo5ZubIiwgIuWRqOS6lCIsICLlkajlha0iXSk7Cgl9LAp9KQo=",
        "usr/volcanos/plugin/local/wiki/data.css": "ZmllbGRzZXQuZGF0YSBkaXYub3V0cHV0IHRhYmxlLmNvbnRlbnQgdHIuc2VsZWN0IHsKCWJhY2tncm91bmQtY29sb3I6Z3JheTsKfQpmaWVsZHNldC5kYXRhIGRpdi5vdXRwdXQgdGFibGUuY29udGVudCB0ci5vdmVyIHsKCWJhY2tncm91bmQtY29sb3I6Z3JheTsKfQo=",
        "usr/volcanos/plugin/local/wiki/data.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiKSB7CgkJY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihtc2cpCgoJCWNhbi51aSA9IGNhbi5vbmxheW91dC5kaXNwbGF5KGNhbikKCQljYW4udGFibGUgPSBjYW4ub25hcHBlbmQudGFibGUoY2FuLCBtc2csIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGluZGV4LCBsaW5lKSB7CgkJCXJldHVybiB7dGV4dDogW3ZhbHVlLCBodG1sLlREXSwgb25jb250ZXh0bWVudTogZnVuY3Rpb24oZXZlbnQpIHsKCQkJCWNhbi51c2VyLmNhcnRlKGV2ZW50LCBjYW4sIGNhbi5vbmRldGFpbCwgY2FuLm9uZGV0YWlsLmxpc3QsIGZ1bmN0aW9uKGV2LCBjbWQsIG1ldGEpIHsKCQkJCQl2YXIgY2IgPSBtZXRhW2NtZF07IGNiICYmIGNiKGV2ZW50LCBjYW4sIGNtZCwgdmFsdWUsIGtleSwgaW5kZXgsIGxpbmUpCgkJCQl9KQoJCQl9LCBvbmNsaWNrOiBmdW5jdGlvbihldmVudCkgewoJCQkJa2V5ID09IG5mcy5QQVRIICYmIGNhbi5ydW4oZXZlbnQsIFtjYW4uT3B0aW9uKG5mcy5QQVRILCB2YWx1ZSldKQoJCQl9LCBvbmRibGNsaWNrOiBmdW5jdGlvbihldmVudCkgewoJCQkJY2FuLnBhZ2UuZWRpdGFibGUoY2FuLCBldmVudC50YXJnZXQsIHRydWUpCgkJCX19CgkJfSwgY2FuLnVpLmNvbnRlbnQpCgoJCWNhbi5vbmFwcGVuZC5fc3RhdHVzKGNhbiwgbXNnLmFwcGVuZCkKCQljYW4ub25hY3Rpb24uX2NvbXB1dGUoZXZlbnQsIGNhbikKCX0sCn0sIFsiIl0pClZvbGNhbm9zKGNoYXQuT05GSUdVUkUsIHtoZWxwOiAi57uE5Lu26I+c5Y2VIiwKCSLmsYLlkowiOiBmdW5jdGlvbihldmVudCwgY2FuLCByZXMsIHRkLCBpbmRleCkgewoJCXJlc1tpbmRleF0gPSBwYXJzZUludCh0ZC5pbm5lclRleHQpICsgKHJlc1tpbmRleF18fDApOwoJfSwKCSLmnIDlpKciOiBmdW5jdGlvbihldmVudCwgY2FuLCByZXMsIHRkLCBpbmRleCkgewoJCQkocmVzW2luZGV4XSA9PT0gdW5kZWZpbmVkIHx8IHBhcnNlSW50KHRkLmlubmVyVGV4dCkgPiBwYXJzZUludChyZXNbaW5kZXhdKSkgJiYgKHJlc1tpbmRleF0gPSBwYXJzZUludCh0ZC5pbm5lclRleHQpKQoJfSwKCSLmnIDlsI8iOiBmdW5jdGlvbihldmVudCwgY2FuLCByZXMsIHRkLCBpbmRleCkgewoJCShyZXNbaW5kZXhdID09PSB1bmRlZmluZWQgfHwgcGFyc2VJbnQodGQuaW5uZXJUZXh0KSA8IHBhcnNlSW50KHJlc1tpbmRleF0pKSAmJiAocmVzW2luZGV4XSA9IHBhcnNlSW50KHRkLmlubmVyVGV4dCkpCgl9LAoJIuW5s+WdhyI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIHJlcywgdGQsIG5jb2wsIGNvbHMsIHJvd3MsIG5yb3cpIHsKCQlyZXNbbmNvbF0gPSBwYXJzZUludCh0ZC5pbm5lclRleHQpICsgKHJlc1tuY29sXXx8MCk7CgkJaWYgKG5yb3cgPT0gcm93cy5sZW5ndGggLSAxKSB7CgkJCXJlc1tuY29sXSA9IHJlc1tuY29sXSAvIG5yb3cKCQl9Cgl9LAp9KQpWb2xjYW5vcyhjaGF0Lk9OQUNUSU9OLCB7aGVscDogIue7hOS7tuiPnOWNlSIsIGxpc3Q6IFtpY2UuU0FWRSwgW2ljZS5NT0RFLCAi5YWo6YCJIiwgIuWdl+mAiSIsICLlj43pgIkiLCAi5aSa6YCJIiwgIuaLluWKqCIsICLnvJbovpEiXSwgW2ljZS5FWEVDLCAi5rGC5ZKMIiwgIuacgOWkpyIsICLmnIDlsI8iLCAi5bmz5Z2HIl1dLAoJX2NvbXB1dGU6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsKCQl2YXIgbXVsID0gaHRtbC5UUiArIChjYW4uQWN0aW9uKGljZS5NT0RFKSA9PSAi5YWo6YCJIj8gIiI6ICIuc2VsZWN0IikKCQl2YXIgbWV0aG9kID0gY2FuLm9uZmlndXJlW2Nhbi5BY3Rpb24oaWNlLkVYRUMpXSwgcmVzID0ge30KCgkJY2FuLnBhZ2UuU2VsZWN0KGNhbiwgY2FuLnVpLmNvbnRlbnQsIG11bCwgZnVuY3Rpb24odHIsIG5yb3csIHJvd3MpIHsKCQkJKG11bCAhPSBodG1sLlRSIHx8IG5yb3cgPiAwKSAmJiBjYW4ucGFnZS5TZWxlY3QoY2FuLCB0ciwgaHRtbC5URCwgZnVuY3Rpb24odGQsIG5jb2wsIGNvbHMpIHsKCQkJCW1ldGhvZCAmJiBtZXRob2QoZXZlbnQsIGNhbiwgcmVzLCB0ZCwgbmNvbCwgY29scywgcm93cywgbnJvdykKCQkJfSkKCQl9KQoJCWNhbi5jb3JlLkl0ZW0ocmVzLCBmdW5jdGlvbihrZXksIHZhbHVlKSB7IGNhbi5TdGF0dXMoY2FuLl9tc2cuYXBwZW5kW2tleV0sIHZhbHVlfHwiIikgfSkKCX0sCgoJc2F2ZTogZnVuY3Rpb24oZXZlbnQsIGNhbiwgYnV0dG9uKSB7IGNhbi5ydW5BY3Rpb24oZXZlbnQsIGJ1dHRvbiwgW2Nhbi5PcHRpb24obmZzLlBBVEgpLCBjYW4ub25leHBvcnQuZmlsZShjYW4pXSkgfSwKCWV4ZWM6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbikgeyBjYW4ub25hY3Rpb24uX2NvbXB1dGUoZXZlbnQsIGNhbikgfSwKCglfZm9yZWFjaDogZnVuY3Rpb24oY2FuLCBidXR0b24sIGNiKSB7CgkJYnV0dG9uICYmIGNhbi5BY3Rpb24oaWNlLk1PREUsIGJ1dHRvbikKCQljYW4ucGFnZS5TZWxlY3QoY2FuLCBjYW4udWkuY29udGVudCwgaHRtbC5UUiwgZnVuY3Rpb24oaXRlbSkgewoJCQljYihpdGVtKQoJCX0pCgl9LAoKCSLlhajpgIkiOiBmdW5jdGlvbihldmVudCwgY2FuLCBidXR0b24pIHsKCQljYW4ub25hY3Rpb24uX2ZvcmVhY2goY2FuLCBidXR0b24sIGZ1bmN0aW9uKGl0ZW0pIHsKCQkJY2FuLnBhZ2UuZWRpdGFibGUoY2FuLCBpdGVtLCBmYWxzZSkKCQkJY2FuLnBhZ2UuZHJhZ2dhYmxlKGNhbiwgaXRlbSwgZmFsc2UpCgkJCWl0ZW0ub25tb3VzZWVudGVyID0gbnVsbCwgaXRlbS5vbmNsaWNrID0gbnVsbAoJCQljYW4ucGFnZS5DbGFzc0xpc3QuZGVsKGNhbiwgaXRlbSwgaHRtbC5TRUxFQ1QpCgkJCWNhbi5wYWdlLkNsYXNzTGlzdC5kZWwoY2FuLCBpdGVtLCAib3ZlciIpCgkJfSkKCQljYW4ub25hY3Rpb24uX2NvbXB1dGUoZXZlbnQsIGNhbikKCX0sCgki5Z2X6YCJIjogZnVuY3Rpb24oZXZlbnQsIGNhbiwgYnV0dG9uKSB7CgkJY2FuLm9uYWN0aW9uLl9mb3JlYWNoKGNhbiwgYnV0dG9uLCBmdW5jdGlvbihpdGVtKSB7CgkJCWl0ZW0ub25tb3VzZWVudGVyID0gZnVuY3Rpb24oKSB7CgkJCQljYW4ucGFnZS5DbGFzc0xpc3QuYWRkKGNhbiwgaXRlbSwgaHRtbC5TRUxFQ1QpCgkJCQljYW4ub25hY3Rpb24uX2NvbXB1dGUoZXZlbnQsIGNhbikKCQkJfQoJCX0pCgl9LAoJIuWPjemAiSI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbikgewoJCWNhbi5vbmFjdGlvbi5fZm9yZWFjaChjYW4sIGJ1dHRvbiwgZnVuY3Rpb24oaXRlbSkgewoJCQlpdGVtLm9ubW91c2VlbnRlciA9IGZ1bmN0aW9uKCkgewoJCQkJY2FuLnBhZ2UuQ2xhc3NMaXN0LmRlbChjYW4sIGl0ZW0sIGh0bWwuU0VMRUNUKQoJCQkJY2FuLm9uYWN0aW9uLl9jb21wdXRlKGV2ZW50LCBjYW4pCgkJCX0KCQl9KQoJfSwKCSLlpJrpgIkiOiBmdW5jdGlvbihldmVudCwgY2FuLCBidXR0b24pIHsKCQljYW4ub25hY3Rpb24uX2ZvcmVhY2goY2FuLCBidXR0b24sIGZ1bmN0aW9uKGl0ZW0pIHsKCQkJaXRlbS5vbm1vdXNlZW50ZXIgPSBmdW5jdGlvbigpIHt9CgkJCWl0ZW0ub25jbGljayA9IGZ1bmN0aW9uKCkgewoJCQkJY2FuLnBhZ2UuQ2xhc3NMaXN0Lm5lZyhjYW4sIGl0ZW0sIGh0bWwuU0VMRUNUKQoJCQkJY2FuLm9uYWN0aW9uLl9jb21wdXRlKGV2ZW50LCBjYW4pCgkJCX0KCQl9KQoJfSwKCSLmi5bliqgiOiBmdW5jdGlvbihldmVudCwgY2FuLCBidXR0b24pIHsKCQljYW4ub25hY3Rpb25bIuWFqOmAiSJdKGV2ZW50LCBjYW4sIGJ1dHRvbikKCQljYW4ub25hY3Rpb24uX2ZvcmVhY2goY2FuLCAiIiwgZnVuY3Rpb24oaXRlbSkgewoJCQljYW4ucGFnZS5kcmFnZ2FibGUoY2FuLCBpdGVtLCB0cnVlKQoJCQlpdGVtLm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpIHsgY2FuLmRyYWcgPSBpdGVtIH0KCQkJaXRlbS5vbmRyYWdvdmVyID0gZnVuY3Rpb24oZXZlbnQpIHsgZXZlbnQucHJldmVudERlZmF1bHQoKSwgY2FuLnBhZ2UuQ2xhc3NMaXN0LmFkZChjYW4sIGl0ZW0sICJvdmVyIil9CgkJCWl0ZW0ub25kcmFnbGVhdmUgPSBmdW5jdGlvbihldmVudCkgeyBjYW4ucGFnZS5DbGFzc0xpc3QuZGVsKGNhbiwgaXRlbSwgIm92ZXIiKSB9CgkJCWl0ZW0ub25kcm9wID0gZnVuY3Rpb24oZXZlbnQpIHsgZXZlbnQucHJldmVudERlZmF1bHQoKQoJCQkJY2FuLnBhZ2UuU2VsZWN0KGNhbiwgY2FuLnVpLmNvbnRlbnQsIGh0bWwuVEFCTEUsIGZ1bmN0aW9uKHRhYmxlKSB7CgkJCQkJdGFibGUuaW5zZXJ0QmVmb3JlKGNhbi5kcmFnLCBpdGVtKQoJCQkJfSkKCQkJfQoJCX0pCgl9LAoJIue8lui+kSI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbikgewoJCWNhbi5vbmFjdGlvbi5fZm9yZWFjaChjYW4sIGJ1dHRvbiwgZnVuY3Rpb24oaXRlbSkgewoJCQljYW4ucGFnZS5lZGl0YWJsZShjYW4sIGl0ZW0sIHRydWUpCgkJfSkKCX0sCn0pClZvbGNhbm9zKGNoYXQuT05ERVRBSUwsIHtoZWxwOiAi57uE5Lu26K+m5oOFIiwgbGlzdDogWyLlpI3liLYiLCAi5Yig6ZmkIl0sCgki5aSN5Yi2IjogZnVuY3Rpb24oZXZlbnQsIGNhbiwgYnV0dG9uLCB2YWx1ZSwga2V5LCBpbmRleCwgbGluZSkgewoJCXZhciBlbmQgPSBjYW4ucGFnZS5BcHBlbmQoY2FuLCBjYW4udGFibGUsIFt7dHlwZTogaHRtbC5UUiwgbGlzdDogY2FuLmNvcmUuTGlzdChjYW4uX21zZy5hcHBlbmQsIGZ1bmN0aW9uKGtleSkgewoJCQlyZXR1cm4ge3RleHQ6IFtsaW5lW2tleV0sIGh0bWwuVERdfQoJCX0pfV0pLnRyOyBjYW4udGFibGUuaW5zZXJ0QmVmb3JlKGVuZCwgZXZlbnQudGFyZ2V0LnBhcmVudE5vZGUpCgl9LAoJIuWIoOmZpCI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbikgewoJCWNhbi5wYWdlLlJlbW92ZShjYW4sIGV2ZW50LnRhcmdldC5wYXJlbnROb2RlKQoJfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkVYUE9SVCwge2hlbHA6ICLlr7zlh7rmlbDmja4iLAoJZmlsZTogZnVuY3Rpb24oY2FuKSB7CgkJcmV0dXJuIGNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi51aS5jb250ZW50LCBodG1sLlRSLCBmdW5jdGlvbih0cikgewoJCQlyZXR1cm4gY2FuLnBhZ2UuU2VsZWN0KGNhbiwgdHIsIGNhbi5wYWdlLktleXMoaHRtbC5USCwgaHRtbC5URCksIGZ1bmN0aW9uKHRkKSB7cmV0dXJuIHRkLmlubmVySFRNTH0pLmpvaW4oaWNlLkZTKQoJCX0pLmpvaW4oaWNlLk5MKQoJfSwKfSkK",
        "usr/volcanos/plugin/local/wiki/draw.css": "ZmllbGRzZXQuZHJhdyBkaXYub3V0cHV0IHsgYmFja2dyb3VuZC1jb2xvcjojMWI1YjczOGM7IGZvbnQtc2l6ZToyMHB4OyB9CmZpZWxkc2V0LmRyYXcgZGl2Lm91dHB1dCBkaXYuY29udGVudCBzdmcgeyBiYWNrZ3JvdW5kLWNvbG9yOiMxYjViNzM4YzsgfQo=",
        "usr/volcanos/plugin/local/wiki/draw.js": "",
        "usr/volcanos/plugin/local/wiki/draw/heart.js": "Vm9sY2Fub3MoImhlYXJ0Iiwge2hlbHA6ICLlv4PlvaIiLAogICAgZGF0YToge25hbWU6ICJwYXRoIiwgc2l6ZToge30sCiAgICAgICAgY29weTogWyJkIiwgIm5hbWUiLCAibWV0YSIsICJ0dCIsICJ4eCIsICJ5eSJdLAogICAgICAgIHg6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIHZhbHVlLCBjbWQsIHRhcmdldCkgewogICAgICAgICAgICB2YXIgdHQgPSBKU09OLnBhcnNlKHRhcmdldC5WYWx1ZSgidHQiKXx8J3sidHgiOjAsICJ0eSI6MH0nKQogICAgICAgICAgICBpZiAodmFsdWUgIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICB0dC50eCA9IHZhbHVlLXRhcmdldC5WYWwoInh4IikKICAgICAgICAgICAgICAgIHRhcmdldC5WYWx1ZSgidHQiLCBKU09OLnN0cmluZ2lmeSh0dCkpCiAgICAgICAgICAgICAgICB0YXJnZXQuVmFsdWUoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoIit0dC50eCsiLCIrdHQudHkrIikiKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuVmFsKCJ4eCIpK3R0LnR4CiAgICAgICAgfSwKICAgICAgICB5OiBmdW5jdGlvbihldmVudCwgY2FuLCB2YWx1ZSwgY21kLCB0YXJnZXQpIHsKICAgICAgICAgICAgdmFyIHR0ID0gSlNPTi5wYXJzZSh0YXJnZXQuVmFsdWUoInR0Iil8fCd7InR4IjowLCAidHkiOjB9JykKICAgICAgICAgICAgaWYgKHZhbHVlICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgdHQudHkgPSB2YWx1ZS10YXJnZXQuVmFsKCJ5eSIpCiAgICAgICAgICAgICAgICB0YXJnZXQuVmFsdWUoInR0IiwgSlNPTi5zdHJpbmdpZnkodHQpKQogICAgICAgICAgICAgICAgdGFyZ2V0LlZhbHVlKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIrdHQudHgrIiwiK3R0LnR5KyIpIikKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdGFyZ2V0LlZhbCgieXkiKSt0dC50eQogICAgICAgIH0sCiAgICB9LCAvLyA8aGVhcnQgY3g9IjI1IiBjeT0iNzUiIHI9IjIwIi8+CiAgICBkcmF3OiBmdW5jdGlvbihldmVudCwgY2FuLCBwb2ludCkgeyBpZiAocG9pbnQubGVuZ3RoIDwgMikge3JldHVybn0KCiAgICAgICAgdmFyIHAwID0gcG9pbnRbMF0sIHAxID0gcG9pbnRbMV0sIHAyID0gcG9pbnRbMl07CiAgICAgICAgcGwgPSB7eDogMipwMC54IC0gcDEueCwgeToyKnAwLnktcDEueX0KICAgICAgICB2YXIgcjAgPSBNYXRoLnNxcnQoTWF0aC5wb3cocDAueCAtIHAxLngsIDIpLCBNYXRoLnBvdyhwMC55IC0gcDEueSwgMikpIC8gMgogICAgICAgIHZhciBkID0gWwogICAgICAgICAgICAgICAgIk0iLCBwbC54LCBwbC55LAogICAgICAgICAgICAgICAgIkEiLCByMCwgcjAsIDAsIDAsIDAsIHAwLngsIHAwLnksCiAgICAgICAgICAgICAgICAiQSIsIHIwLCByMCwgMCwgMCwgMCwgcDEueCwgcDEueSwKICAgICAgICAgICAgXQoKICAgICAgICBpZiAocG9pbnQubGVuZ3RoID09IDMpIHsKICAgICAgICAgICAgdmFyIHIxID0gTWF0aC5zcXJ0KE1hdGgucG93KHAyLnggLSBwMS54LCAyKSwgTWF0aC5wb3cocDIueSAtIHAxLnksIDIpKQogICAgICAgICAgICBkID0gZC5jb25jYXQoWwogICAgICAgICAgICAgICAgIkEiLCByMSwgcjEsIDE4MCwgMCwgMCwgcDIueCwgcDIueSwKICAgICAgICAgICAgICAgICJBIiwgcjEsIHIxLCAxODAsIDAsIDAsIHBsLngsIHBsLnksCiAgICAgICAgICAgIF0pCiAgICAgICAgfQoKICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgICAgbmFtZTogImhlYXJ0IiwgZDogZC5qb2luKCIgIiksCiAgICAgICAgICAgIG1ldGE6IEpTT04uc3RyaW5naWZ5KHBvaW50KSwKICAgICAgICAgICAgdHQ6IEpTT04uc3RyaW5naWZ5KHt0eDogMCwgdHk6IDB9KSwKICAgICAgICAgICAgeHg6IHAwLngsIHl5OnAxLnksCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZXZlbnQudHlwZSA9PSAiY2xpY2siICYmIHBvaW50Lmxlbmd0aCA9PSAzICYmIChjYW4ucG9pbnQgPSBbXSksIGRhdGEKICAgIH0sCiAgICB0ZXh0OiBmdW5jdGlvbihjYW4sIGRhdGEsIHRhcmdldCkgewogICAgICAgIGRhdGEueCA9IHRhcmdldC5WYWwoImN4IikKICAgICAgICBkYXRhLnkgPSB0YXJnZXQuVmFsKCJjeSIpCiAgICAgICAgcmV0dXJuIGRhdGEKICAgIH0sCiAgICBzaG93OiBmdW5jdGlvbihjYW4sIHRhcmdldCkgewogICAgICAgIHJldHVybiAiaGVhcnQgIiArIHRhcmdldC5WYWx1ZSgidHQiKQogICAgfSwKfSkK",
        "usr/volcanos/plugin/local/wiki/draw/path.js": "",
        "usr/volcanos/plugin/local/wiki/draw/walk_trash.js": "",
        "usr/volcanos/plugin/local/wiki/feel.css": "ZmllbGRzZXQuZmVlbCBkaXYub3V0cHV0IGltZyB7IGRpc3BsYXk6YmxvY2s7IGZsb2F0OmxlZnQ7IH0KZmllbGRzZXQuZmVlbCBkaXYub3V0cHV0IHZpZGVvIHsgZGlzcGxheTpibG9jazsgZmxvYXQ6bGVmdDsgfQpmaWVsZHNldC5mZWVsLmZsb2F0IGRpdi5vdXRwdXQgaW1nIHsgZGlzcGxheTpibG9jazsgZmxvYXQ6bm9uZTsgbWFyZ2luOmF1dG87IH0KZmllbGRzZXQuZmVlbC5mbG9hdCBkaXYub3V0cHV0IHZpZGVvIHsgZGlzcGxheTpibG9jazsgZmxvYXQ6bm9uZTsgbWFyZ2luOmF1dG87IH0K",
        "usr/volcanos/plugin/local/wiki/feel.js": "",
        "usr/volcanos/plugin/local/wiki/word.css": "ZmllbGRzZXQud29yZCBmb3JtLm9wdGlvbiBpbnB1dFtuYW1lPXBhdGhdIHsgd2lkdGg6MTI3cHg7IH0KCmZpZWxkc2V0LndvcmQ+ZGl2Lm5hdm1lbnUgeyBiYWNrZ3JvdW5kLWNvbG9yOmluaGVyaXQ7IG92ZXJmbG93OmF1dG87IG1pbi13aWR0aDoxMjBweDsgY2xlYXI6Ym90aDsgZmxvYXQ6bGVmdDsgfQpmaWVsZHNldC53b3JkPmRpdi5uYXZtZW51IGRpdi5saXN0IHsgbWFyZ2luLWxlZnQ6MjBweDsgfQpmaWVsZHNldC53b3JkPmRpdi5uYXZtZW51IGRpdi5pdGVtIHsgZm9udC1zaXplOjEuNGVtOyBmb250LXdlaWdodDpib2xkOyBmb250LWZhbWlseTpjdXJzaXZlOyBwYWRkaW5nOjRweCAyMHB4OyB9CmZpZWxkc2V0LndvcmQ+ZGl2Lm5hdm1lbnU+ZGl2Lml0ZW0geyBmb250LXNpemU6MS42ZW07IH0KCmZpZWxkc2V0LndvcmQgYSB7IHdvcmQtYnJlYWs6YnJlYWstYWxsOyB9CmZpZWxkc2V0LndvcmQgYnIuc3RvcnkgeyBjbGVhcjpib3RoOyB9CmZpZWxkc2V0LndvcmQgdWwuc3RvcnkgeyBmb250LWZhbWlseTptb25vc3BhY2U7IH0KZmllbGRzZXQud29yZCB1bC5zdG9yeSBsaS5IMiB7IGZvbnQtc2l6ZToxLjRlbTsgZm9udC13ZWlnaHQ6Ym9sZDsgfQpmaWVsZHNldC53b3JkIHVsLnN0b3J5IGxpLkgzIHsgZm9udC1zaXplOjEuMmVtOyB9CmZpZWxkc2V0LndvcmQgdWwuc3RvcnlbZGF0YS10eXBlPXByZW1lbnVdIHsgY3Vyc29yOnBvaW50ZXI7IH0KZmllbGRzZXQud29yZCB1bC5zdG9yeVtkYXRhLXR5cGU9cHJlbWVudV0gbGk6aG92ZXIgeyBiYWNrZ3JvdW5kOmN5YW47IGNvbG9yOmJsdWU7IH0KZmllbGRzZXQud29yZCB1bC5zdG9yeVtkYXRhLXR5cGU9ZW5kbWVudV0geyBjbGVhcjpib3RoOyB9CmZpZWxkc2V0LndvcmQgcC5zdG9yeVtkYXRhLW5hbWU9aW5uZXJdIHsgYmFja2dyb3VuZC1jb2xvcjojNGI2YzhhN2E7IHBhZGRpbmc6NHB4IDEwcHg7IGJvcmRlci1sZWZ0OnNvbGlkIDRweCBibHVlOyBtYXJnaW46MTBweCAwcHg7IH0KZmllbGRzZXQud29yZCBwLnN0b3J5W2RhdGEtbmFtZT1pbm5lcl06aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiNjMTBjOGE7IGN1cnNvcjpjb3B5OyB9CmZpZWxkc2V0LndvcmQgZmllbGRzZXQuc3RvcnkgeyBtYXJnaW46MTBweDsgfQpmaWVsZHNldC53b3JkIGZpZWxkc2V0LnN0b3J5LmZ1bGwgeyBtYXJnaW46MHB4OyB9CgpmaWVsZHNldC53b3JkLmZsb2F0IHsgcGFkZGluZzowOyBtYXJnaW46MDsgd2lkdGg6LXdlYmtpdC1maWxsLWF2YWlsYWJsZTsgcG9zaXRpb246Zml4ZWQ7IGxlZnQ6MDsgdG9wOjA7IHotaW5kZXg6MTA7IH0KZmllbGRzZXQud29yZC5mbG9hdD5kaXYuYWN0aW9uIHsgZGlzcGxheTpjb250ZW50czsgfQpmaWVsZHNldC53b3JkLmZsb2F0PmRpdi5zdGF0dXMgeyBjbGVhcjpub25lOyB9CmZpZWxkc2V0LndvcmQuZmxvYXQ+ZGl2Lm91dHB1dCB7IGJhY2tncm91bmQtY29sb3I6I2YwZjhmZjgwOyBwYWRkaW5nOjIwcHg7IG92ZXJmbG93OmF1dG87IH0KZmllbGRzZXQud29yZC5mbG9hdD5kaXYub3V0cHV0PmRpdi5wcm9qZWN0IHsgYmFja2dyb3VuZDojNDY4MmI0NmI7IHBhZGRpbmc6MTBweDsgcG9zaXRpb246Zml4ZWQ7IHJpZ2h0OjA7IHRvcDozMXB4OyB6LWluZGV4OjEwOyB9CmZpZWxkc2V0LndvcmQuZmxvYXQgZGl2LmNvbnRlbnQgZGl2LnBhZ2UgeyBtYXJnaW4tdG9wOjMxcHg7IGRpc3BsYXk6bm9uZTsgfQpmaWVsZHNldC53b3JkLmZsb2F0IGRpdi5jb250ZW50IGRpdi5wYWdlLnNob3cgeyBkaXNwbGF5OmJsb2NrOyB9CmZpZWxkc2V0LndvcmQuZmxvYXQgZGl2LmNvbnRlbnQuZ3JpZCBkaXYucGFnZSB7IGJhY2tncm91bmQtY29sb3I6I2E0Y2JlY2I1OyBtYXJnaW46MTBweDsgaGVpZ2h0OjIwMHB4OyB3aWR0aDoyMDBweDsgb3ZlcmZsb3c6YXV0bzsgZGlzcGxheTpibG9jazsgZmxvYXQ6bGVmdDsgfQpmaWVsZHNldC53b3JkLmZsb2F0IGgxIHsgdGV4dC1hbGlnbjpjZW50ZXI7IH0KZmllbGRzZXQud29yZC5mbG9hdCBoMiB7IHRleHQtYWxpZ246Y2VudGVyOyB9CmZpZWxkc2V0LndvcmQuZmxvYXQgaDMgeyB0ZXh0LWFsaWduOmNlbnRlcjsgfQoKZmllbGRzZXQud29yZC5jbWQ+bGVnZW5kIHsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LndvcmQuY21kPmZvcm0ub3B0aW9uIHsgZGlzcGxheTpub25lOyB9CmZpZWxkc2V0LndvcmQuY21kPmRpdi5hY3Rpb24geyBkaXNwbGF5Om5vbmU7IH0KZmllbGRzZXQud29yZC5jbWQ+ZGl2LnN0YXR1cyB7IGRpc3BsYXk6bm9uZTsgfQoKZGl2LnN0b3J5W2RhdGEtdHlwZT1zcGFya11bZGF0YS1uYW1lPWZpZWxkXT5kaXYubWVudSB7IGZsb2F0OmxlZnQ7IG92ZXJmbG93OmF1dG87IH0KZGl2LnN0b3J5W2RhdGEtdHlwZT1zcGFya11bZGF0YS1uYW1lPWZpZWxkXT5kaXYubGlzdCB7IGZsb2F0OmxlZnQ7IG92ZXJmbG93OmF1dG87IH0KZGl2LnN0b3J5W2RhdGEtdHlwZT1zcGFya11bZGF0YS1uYW1lPWZpZWxkXT5kaXYubWVudSBkaXYubGlzdCBkaXYuaXRlbSB7IHBhZGRpbmc6MCAyMHB4OyB9CgpkaXYuc3RvcnlbZGF0YS10eXBlPXNwYXJrXVtkYXRhLW5hbWU9c2hlbGxdIGxhYmVsIHsKCS1tb3otdXNlci1zZWxlY3Q6bm9uZTsgLyrngavni5AqLwoJLXdlYmtpdC11c2VyLXNlbGVjdDpub25lOyAvKndlYmtpdOa1j+iniOWZqCovCgktbXMtdXNlci1zZWxlY3Q6bm9uZTsgLypJRTEwKi8KCS1raHRtbC11c2VyLXNlbGVjdDpub25lOyAvKuaXqeacn+a1j+iniOWZqCovCgl1c2VyLXNlbGVjdDpub25lOwp9Cgo=",
        "usr/volcanos/plugin/local/wiki/word.js": "",
        "usr/volcanos/plugin/state.js": "",
        "usr/volcanos/plugin/story/form.css": "ZGl2Lm91dHB1dC5mb3JtIGRpdi5pdGVtIHsKCXBhZGRpbmc6NDBweDsKfQo=",
        "usr/volcanos/plugin/story/form.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ucGFnZS5DbGFzc0xpc3QuYWRkKGNhbiwgdGFyZ2V0LCAiZm9ybSIpCgkJbXNnLlB1c2goInR5cGUiLCAidGV4dCIpCgkJbXNnLlB1c2goIm5hbWUiLCAibmFtZSIpCgkJbXNnLlB1c2goInZhbHVlIiwgImhhcnZleXNoYW8iKQoJCW1zZy5QdXNoKCJhY3Rpb24iLCAia2V5IikKCgkJbXNnLlB1c2goInR5cGUiLCAidGV4dCIpCgkJbXNnLlB1c2goIm5hbWUiLCAiYWdlIikKCQltc2cuUHVzaCgidmFsdWUiLCAiMTgiKQoJCW1zZy5QdXNoKCJhY3Rpb24iLCAiIikKCgkJbXNnLlB1c2goInR5cGUiLCAic2VsZWN0IikKCQltc2cuUHVzaCgibmFtZSIsICJtYWxlIikKCQltc2cuUHVzaCgidmFsdWUiLCAibWFsZSxmZW1hbGUiKQoJCW1zZy5QdXNoKCJhY3Rpb24iLCAiIikKCgkJbXNnLlB1c2goInR5cGUiLCAidGV4dGFyZWEiKQoJCW1zZy5QdXNoKCJuYW1lIiwgImludHJvIikKCQltc2cuUHVzaCgidmFsdWUiLCAicHJvZ3JhbSIpCgkJbXNnLlB1c2goImFjdGlvbiIsICIiKQoKCQltc2cuUHVzaCgidHlwZSIsICJidXR0b24iKQoJCW1zZy5QdXNoKCJuYW1lIiwgInN1Ym1pdCIpCgkJbXNnLlB1c2goInZhbHVlIiwgIuaPkOS6pCIpCgkJbXNnLlB1c2goImFjdGlvbiIsICIiKQoKCQl2YXIgYWN0aW9uID0gIiI7IG1zZy5UYWJsZShmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGFycmF5KSB7CgkJCXN3aXRjaCAodmFsdWUudHlwZSkgewoJCQkJY2FzZSBodG1sLkJVVFRPTjogYWN0aW9uID0gYWN0aW9ufHx2YWx1ZS5uYW1lCgkJCQkJY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3ZpZXc6ICJpdGVtIiwgbGlzdDogWwoJCQkJCQl7dmlldzogWyJpbnB1dCJdLCBsaXN0OiBbe3R5cGU6IGh0bWwuSU5QVVQsIHN0eWxlOiB7d2lkdGg6IChjYW4uQ29uZldpZHRoKCktOTApLzJ9LCBkYXRhOiB7dHlwZTogdmFsdWUudHlwZSwgdmFsdWU6IHZhbHVlLnZhbHVlfSwgb25jbGljazogZnVuY3Rpb24oZXZlbnQpIHsKCQkJCQkJCXZhciBhcmdzID0gW2N0eC5BQ1RJT04sIGFjdGlvbl0KCQkJCQkJCWNhbi5wYWdlLlNlbGVjdChjYW4sIHRhcmdldCwgIi5hcmdzIiwgZnVuY3Rpb24oaXRlbSkgeyBhcmdzLnB1c2goaXRlbS5uYW1lLCBpdGVtLnZhbHVlKX0pCgkJCQkJCQljYW4ucnVuKGV2ZW50LCBhcmdzKQoJCQkJCQl9fV19LAoJCQkJCV19XSkKCQkJCQlicmVhawoJCQkJY2FzZSBodG1sLlNFTEVDVDoKCQkJCQljYW4ucGFnZS5BcHBlbmQoY2FuLCB0YXJnZXQsIFt7dmlldzogIml0ZW0iLCBsaXN0OiBbCgkJCQkJCXt2aWV3OiBbImxhYmVsIl0sIGxpc3Q6IFt7dGV4dDogdmFsdWUubmFtZX1dfSwKCQkJCQkJe3ZpZXc6IFsiaW5wdXQiXSwgbGlzdDogW3t0eXBlOiBodG1sLlNFTEVDVCwgY2xhc3NOYW1lOiAiYXJncyIsIHN0eWxlOiB7d2lkdGg6IGNhbi5Db25mV2lkdGgoKS0xMDB9LAoJCQkJCQkJZGF0YTogdmFsdWUsIGxpc3Q6IGNhbi5jb3JlLkxpc3QoY2FuLmNvcmUuU3BsaXQodmFsdWUudmFsdWUpLCBmdW5jdGlvbih2KSB7IHJldHVybiB7dHlwZTogaHRtbC5PUFRJT04sIG5hbWU6IHYsIHZhbHVlOiB2LCBpbm5lcjogdn0gfSkgfV19LAoJCQkJCV19XSkKCQkJCQlicmVhawoJCQkJY2FzZSBodG1sLlRFWFRBUkVBOgoJCQkJCWNhbi5wYWdlLkFwcGVuZChjYW4sIHRhcmdldCwgW3t2aWV3OiAiaXRlbSIsIGxpc3Q6IFsKCQkJCQkJe3ZpZXc6IFsibGFiZWwiXSwgbGlzdDogW3t0ZXh0OiB2YWx1ZS5uYW1lfV19LAoJCQkJCQl7dmlldzogWyJpbnB1dCJdLCBsaXN0OiBbe3R5cGU6IGh0bWwuVEVYVEFSRUEsIGNsYXNzTmFtZTogImFyZ3MiLCBzdHlsZToge3dpZHRoOiBjYW4uQ29uZldpZHRoKCktMTAwfSwgZGF0YTogdmFsdWV9XX0sCgkJCQkJXX1dKQoJCQkJCWJyZWFrCgkJCQlkZWZhdWx0OgoJCQkJCWNhbi5wYWdlLkFwcGVuZChjYW4sIHRhcmdldCwgW3t2aWV3OiAiaXRlbSIsIGxpc3Q6IFsKCQkJCQkJe3ZpZXc6IFsibGFiZWwiXSwgbGlzdDogW3t0ZXh0OiB2YWx1ZS5uYW1lfV19LAoJCQkJCQl7dmlldzogWyJpbnB1dCJdLCBsaXN0OiBbe3R5cGU6ICJpbnB1dCIsIGNsYXNzTmFtZTogImFyZ3MiLCBzdHlsZToge3dpZHRoOiBjYW4uQ29uZldpZHRoKCktMTAwfSwgZGF0YTogdmFsdWV9XX0sCgkJCQkJXX1dKQoJCQl9CgkJfSkKCX0sCn0sIFsiIl0pCg==",
        "usr/volcanos/plugin/story/json.css": "ZGl2Lm91dHB1dC5qc29uIGRpdi5pdGVtOmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjojMDAwMDsgfQpkaXYub3V0cHV0Lmpzb24gZGl2Lml0ZW0gZGl2Lml0ZW0geyBwYWRkaW5nLWxlZnQ6MTVweDsgYm9yZGVyOnNvbGlkIDFweCAjMDAwMDAwMGQ7IGJvcmRlci1sZWZ0OmRhc2hlZCAxcHggbGlnaHRibHVlOyBtYXJnaW4tbGVmdDo1cHg7IH0KZGl2Lm91dHB1dC5qc29uIGRpdi5pdGVtIGRpdi5pdGVtOmhvdmVyIHsgYm9yZGVyOnNvbGlkIDFweCByZWQ7IH0KZGl2Lm91dHB1dC5qc29uIGRpdi5pdGVtIHNwYW4ubm9uY2UgeyBjb2xvcjojOWNiZWNhNGY7IGN1cnNvcjpwb2ludGVyOyB9CmRpdi5vdXRwdXQuanNvbiBkaXYuaXRlbSBzcGFuLmtleSB7IGNvbG9yOnllbGxvdzsgfQpkaXYub3V0cHV0Lmpzb24gZGl2Lml0ZW0gc3Bhbi5zdHJpbmcgeyBjb2xvcjptYWdlbnRhOyB9CmRpdi5vdXRwdXQuanNvbiBkaXYuaXRlbSBzcGFuLmNvbnN0IHsgY29sb3I6Y3lhbjsgfQoK",
        "usr/volcanos/plugin/story/json.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ucGFnZS5DbGFzc0xpc3QuYWRkKGNhbiwgdGFyZ2V0LCAianNvbiIpCgkJY2FuLm9ubW90aW9uLmNsZWFyKGNhbiwgdGFyZ2V0KSwgY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihtc2cpCgkJY2FuLm9uYXBwZW5kLnRhYmxlKGNhbiwgbXNnKSwgY2FuLm9uaW1wb3J0LnNob3coY2FuLCBjYW4uYmFzZS5PYmoobXNnLlJlc3VsdCgpLCB7fSksIHRhcmdldCkKCX0sCglzaG93OiBmdW5jdGlvbihjYW4sIGRhdGEsIHRhcmdldCkgewoJCWZ1bmN0aW9uIHNob3coZGF0YSwgdGFyZ2V0LCBpbmRleCwgdG90YWwpIHsgdmFyIGxpc3QKCQkJc3dpdGNoICh0eXBlb2YgZGF0YSkgewoJCQkJY2FzZSBsYW5nLk9CSkVDVDoKCQkJCQlpZiAoZGF0YSA9PSBudWxsKSB7CgkJCQkJCWxpc3QgPSBjYW4ucGFnZS5BcHBlbmQoY2FuLCB0YXJnZXQsIFt7dGV4dDogIm51bGwifV0pLml0ZW0KCQkJCQkJYnJlYWsKCQkJCQl9CgkJCQkJZnVuY3Rpb24gd3JhcChiZWdpbiwgZW5kLCBhZGQsIGNiKSB7CgkJCQkJCWNhbi5wYWdlLkFwcGVuZChjYW4sIHRhcmdldCwgW3t0ZXh0OiBiZWdpbn1dKQoJCQkJCQlhZGQgJiYgY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3RleHQ6IFsiLi4uIiwgaHRtbC5TUEFOLCAibm9uY2UiXX1dKSwgY2IoKQoJCQkJCQljYW4ucGFnZS5BcHBlbmQoY2FuLCB0YXJnZXQsIFt7dGV4dDogZW5kfV0pCgkJCQkJfQoJCQkJCWZ1bmN0aW9uIHRvZ2dsZShsaXN0KSB7IGxpc3QgJiYgY2FuLm9ubW90aW9uLnRvZ2dsZShjYW4sIGxpc3QpIH0KCQkJCQlmdW5jdGlvbiBfaXRlbSgpIHsKCQkJCQkJbGlzdCA9IGxpc3QgfHwgY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3ZpZXc6IGh0bWwuTElTVH1dKS5saXN0CgkJCQkJCXJldHVybiBjYW4ucGFnZS5BcHBlbmQoY2FuLCBsaXN0LCBbe3ZpZXc6IGh0bWwuSVRFTX1dKS5pdGVtCgkJCQkJfQoKCQkJCQlpZiAoY2FuLmJhc2UuaXNBcnJheShkYXRhKSkgeyAvLyDmlbDnu4QKCQkJCQkJd3JhcCgiWyIsICJdIiwgZGF0YS5sZW5ndGggPiAwLCBmdW5jdGlvbigpIHsgY2FuLmNvcmUuTGlzdChkYXRhLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsgdmFyIGl0ZW0gPSBfaXRlbSgpCgkJCQkJCQlzaG93KHZhbHVlLCBpdGVtLCBpbmRleCwgZGF0YS5sZW5ndGgpCgkJCQkJCX0pIH0pCgkJCQkJfSBlbHNlIHsgLy8g5a+56LGhCgkJCQkJCXZhciBsZW5ndGggPSBjYW4uY29yZS5JdGVtKGRhdGEpLmxlbmd0aCwgY291bnQgPSAwCgkJCQkJCXdyYXAoInsiLCAifSIsIGxlbmd0aCA+IDAsIGZ1bmN0aW9uKCkgeyBjYW4uY29yZS5JdGVtKGRhdGEsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgdmFyIGl0ZW0gPSBfaXRlbSgpCgkJCQkJCQljYW4ucGFnZS5BcHBlbmQoY2FuLCBpdGVtLCBbe3RleHQ6IFsnIicra2V5KyciJywgaHRtbC5TUEFOLCAia2V5Il0sIG9uY2xpY2s6IGZ1bmN0aW9uKGV2ZW50KSB7IHRvZ2dsZShzdWIpIH19LCB7dGV4dDogJzogJ31dKQoJCQkJCQkJdmFyIHN1YiA9IHNob3codmFsdWUsIGl0ZW0sIGNvdW50KyssIGxlbmd0aCkKCQkJCQkJfSkgfSkKCQkJCQl9CgkJCQkJYnJlYWsKCQkJCWNhc2UgbGFuZy5TVFJJTkc6IC8qIOWtl+S4siAqLyBjYW4ucGFnZS5BcHBlbmQoY2FuLCB0YXJnZXQsIFt7dGV4dDogWyciJytkYXRhKyciJywgaHRtbC5TUEFOLCBsYW5nLlNUUklOR119XSk7IGJyZWFrCgkJCQlkZWZhdWx0OiAvKiDlhbblroMgKi8gY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3RleHQ6IFsnJytkYXRhKycnLCBodG1sLlNQQU4sICJjb25zdCJdfV0pCgkJCX0KCQkJKGluZGV4IDwgdG90YWwtMSkgJiYgY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3RleHQ6IGljZS5GU31dKQoJCQlyZXR1cm4gbGlzdAoJCX07IHNob3coZGF0YSwgY2FuLnBhZ2UuQXBwZW5kKGNhbiwgdGFyZ2V0LCBbe3ZpZXc6IGh0bWwuSVRFTX1dKS5pdGVtLCAwLCAwKQoJfSwKfSwgWyIiXSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLnu4Tku7boj5zljZUiLCBsaXN0OiBbIuWxleW8gCIsICLmipjlj6AiLCAi5aSN5Yi2Il0sCgki5bGV5byAIjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi5fb3V0cHV0LCBbaHRtbC5ESVZfTElTVCwgaHRtbC5ESVZfTElTVF0sIGZ1bmN0aW9uKGxpc3QpIHsKCQkJY2FuLm9ubW90aW9uLnRvZ2dsZShjYW4sIGxpc3QsIHRydWUpCgkJfSkKCX0sCgki5oqY5Y+gIjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi5fb3V0cHV0LCBbaHRtbC5ESVZfTElTVCwgaHRtbC5ESVZfTElTVF0sIGZ1bmN0aW9uKGxpc3QpIHsKCQkJY2FuLm9ubW90aW9uLmhpZGRlbihjYW4sIGxpc3QpCgkJfSkKCX0sCgki5aSN5Yi2IjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi51c2VyLmNvcHkoZXZlbnQsIGNhbiwgY2FuLl9tc2cuUmVzdWx0KCkpCgl9LAp9KQo=",
        "usr/volcanos/plugin/story/media.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuLCB0YXJnZXQpLCBjYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKG1zZykKCQljYW4ucmVxdWlyZU1vZHVsZXMoWyJnaWZzaG90L2Rpc3QvZ2lmc2hvdC5qcyJdLCBmdW5jdGlvbigpIHsKCgkJfSkKCQl2YXIgaGVpZ2h0ID0gY2FuLkNvbmZIZWlnaHQoKQoJCWNhbi51aSA9IGNhbi5wYWdlLkFwcGVuZChjYW4sIGNhbi5fb3V0cHV0LCBbe3ZpZXc6IGh0bWwuT1VUUFVUfSwge3ZpZXc6IGh0bWwuRElTUExBWSwgc3R5bGU6IHtoZWlnaHQ6IGhlaWdodC80fX1dKQoJCW1zZy5UYWJsZShmdW5jdGlvbih2YWx1ZSkgewoJCQljYW4ub25pbXBvcnQuX3ZpZGVvKGNhbiwgIi9jaGF0L21lZGlhLyIrdmFsdWUucGF0aCkKCQl9KQoJfSwKCglfYWN0aW9uOiBmdW5jdGlvbihjYW4sIGxpc3QpIHsKCQljYW4ub25hcHBlbmQuX2FjdGlvbihjYW4sIGxpc3R8fGNhbi5vbmFjdGlvbi5saXN0LCBjYW4uX2FjdGlvbiwgY2FuLm9uYWN0aW9uKQoJfSwKCV9sYXlvdXQ6IGZ1bmN0aW9uKGNhbiwgY2IpIHsgdmFyIGhlaWdodCA9IGNhbi5Db25mSGVpZ2h0KCkKCQljYW4udWkudmlkZW8gPSBjYW4ucGFnZS5BcHBlbmRzKGNhbiwgY2FuLnVpLm91dHB1dCwgW3t0eXBlOiBodG1sLlZJREVPLCBkYXRhOiB7Y29udHJvbHM6ICJjb250cm9scyJ9LCBzdHlsZToge2hlaWdodDogaGVpZ2h0KjMvNH0sIF9pbml0OiBmdW5jdGlvbih0YXJnZXQpIHsKCQkJY2FuLm9ubW90aW9uLmRlbGF5KGNhbiwgZnVuY3Rpb24oKSB7IGNiKHRhcmdldCkgfSkKCQl9fV0pLmZpcnN0LCBjYW4ub25pbXBvcnQuX2FjdGlvbihjYW4sIFsi5oqT5ouNIiwgIuW9leWItiIsICLlj5bmtogiXSkKCX0sCglfaW1hZ2U6IGZ1bmN0aW9uKGNhbiwgc3JjKSB7CgkJY2FuLnBhZ2UuaW5zZXJ0QmVmb3JlKGNhbiwgW3tpbWc6IHNyYywgc3R5bGU6IHtoZWlnaHQ6IGNhbi5Db25mSGVpZ2h0KCkvNH19XSwgY2FuLnVpLmRpc3BsYXkuZmlyc3RDaGlsZCwgY2FuLnVpLmRpc3BsYXkpCgkJcmV0dXJuIHNyYwoJfSwKCV92aWRlbzogZnVuY3Rpb24oY2FuLCBzcmMpIHsKCQljYW4ucGFnZS5pbnNlcnRCZWZvcmUoY2FuLCBbe3R5cGU6IGh0bWwuVklERU8sIHNyYzogc3JjLCBkYXRhOiB7Y29udHJvbHM6ICJjb250cm9scyJ9LCBzdHlsZToge2hlaWdodDogY2FuLkNvbmZIZWlnaHQoKS80fX1dLCBjYW4udWkuZGlzcGxheS5maXJzdENoaWxkLCBjYW4udWkuZGlzcGxheSkKCQlyZXR1cm4gc3JjCgl9LAp9KQpWb2xjYW5vcyhjaGF0Lk9OQUNUSU9OLCB7aGVscDogIuaTjeS9nOaVsOaNriIsIGxpc3Q6IFsi5b2V5bGPIiwgIuaRhOWDjyJdLAoJIuW9leWxjyI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsKCQljYW4ub25pbXBvcnQuX2xheW91dChjYW4sIGZ1bmN0aW9uKHRhcmdldCkgewoJCQluYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldERpc3BsYXlNZWRpYSh7dmlkZW86IHtoZWlnaHQ6IGNhbi5Db25mSGVpZ2h0KCkqMy80fX0pLnRoZW4oZnVuY3Rpb24oc3RyZWFtKSB7IGNhbi5zdHJlYW0gPSBzdHJlYW0KCQkJCXRhcmdldC5zcmNPYmplY3QgPSBzdHJlYW0sIHRhcmdldC5vbmxvYWRlZG1ldGFkYXRhID0gZnVuY3Rpb24oZSkgeyB0YXJnZXQucGxheSgpIH0KCQkJfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7IGNhbi5taXNjLkxvZyhlcnIubmFtZSArICI6ICIgKyBlcnIubWVzc2FnZSkgfSkKCQl9KQoJfSwKCSLmkYTlg48iOiBmdW5jdGlvbihldmVudCwgY2FuKSB7CgkJY2FuLm9uaW1wb3J0Ll9sYXlvdXQoY2FuLCBmdW5jdGlvbih0YXJnZXQpIHsKCQkJbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoe3ZpZGVvOiB7aGVpZ2h0OiBjYW4uQ29uZkhlaWdodCgpKjMvNH19KS50aGVuKGZ1bmN0aW9uKHN0cmVhbSkgeyBjYW4uc3RyZWFtID0gc3RyZWFtCgkJCQl0YXJnZXQuc3JjT2JqZWN0ID0gc3RyZWFtLCB0YXJnZXQub25sb2FkZWRtZXRhZGF0YSA9IGZ1bmN0aW9uKGUpIHsgdGFyZ2V0LnBsYXkoKSB9CgkJCX0pLmNhdGNoKGZ1bmN0aW9uKGVycikgeyBjYW4ubWlzYy5Mb2coZXJyLm5hbWUgKyAiOiAiICsgZXJyLm1lc3NhZ2UpIH0pCgkJfSkKCX0sCgki5oqT5ouNIjogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyB2YXIgd2lkdGggPSBjYW4udWkudmlkZW8ub2Zmc2V0V2lkdGgsIGhlaWdodCA9IGNhbi51aS52aWRlby5vZmZzZXRIZWlnaHQKCQl2YXIgY2FudmFzID0gY2FuLnBhZ2UuQXBwZW5kKGNhbiwgY2FuLnVpLmRpc3BsYXksIFt7dHlwZTogaHRtbC5DQU5WQVMsIGhlaWdodDogaGVpZ2h0LCB3aWR0aDogd2lkdGh9XSkuZmlyc3QKCQljYW52YXMuZ2V0Q29udGV4dCgiMmQiKS5kcmF3SW1hZ2UoY2FuLnVpLnZpZGVvLCAwLCAwLCB3aWR0aCwgaGVpZ2h0LCAwLCAwLCB3aWR0aCwgaGVpZ2h0KQoJCWNhbi5vbmltcG9ydC5faW1hZ2UoY2FuLCBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9wbmcnKSksIGNhbi5wYWdlLlJlbW92ZShjYW4sIGNhbnZhcykKCX0sCgki5b2V5Yi2IjogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyBjYW4udWkuYmxvYnMgPSBbXQoJCXZhciByZWNvcmRlciA9IG5ldyBNZWRpYVJlY29yZGVyKGNhbi5zdHJlYW0sIHttaW1lVHlwZTogJ3ZpZGVvL3dlYm0nfSkKCQlyZWNvcmRlci5vbmRhdGFhdmFpbGFibGUgPSBmdW5jdGlvbihyZXMpIHsgY2FuLnVpLmJsb2JzLnB1c2gocmVzLmRhdGEpLCBjYW4uU3RhdHVzKCJ0b3RhbCIsIGNhbi51aS5ibG9icy5sZW5ndGgpIH0KCQlyZWNvcmRlci5vbnN0b3AgPSBmdW5jdGlvbigpIHsKCQkJY2FuLm9uaW1wb3J0Ll9sYXlvdXQoY2FuLCBmdW5jdGlvbih0YXJnZXQpIHsKCQkJCXRhcmdldC5zcmMgPSBjYW4ub25pbXBvcnQuX3ZpZGVvKGNhbiwgVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihjYW4udWkuYmxvYnMsIHt0eXBlOiAndmlkZW8vd2VibSd9KSkpCgkJCX0pLCBjYW4ub25pbXBvcnQuX2FjdGlvbihjYW4sIFsi5LiK5LygIiwgIuWPlua2iCJdKQoJCX0KCQlyZWNvcmRlci5zdGFydCgxMCksIGNhbi51aS5yZWNvcmRlciA9IHJlY29yZGVyCgkJY2FuLm9uaW1wb3J0Ll9hY3Rpb24oY2FuLCBbIue7k+adnyJdKQoJfSwKCSLnu5PmnZ8iOiBmdW5jdGlvbihldmVudCwgY2FuKSB7CgkJY2FuLmNvcmUuTGlzdChjYW4uc3RyZWFtLmdldFRyYWNrcygpLCBmdW5jdGlvbih0cmFjaykgeyB0cmFjay5zdG9wKCkgfSkKCX0sCgki5LiK5LygIjogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyB2YXIgbXNnID0gY2FuLnJlcXVlc3QoZXZlbnQpCgkJY2FuLnVzZXIuaW5wdXQoZXZlbnQsIGNhbiwgW3t0eXBlOiAidGV4dCIsIG5hbWU6ICJmaWxlIiwgdmFsdWU6ICJzb21lIn1dLCBmdW5jdGlvbihsaXN0KSB7CgkJCW1zZy5fdXBsb2FkID0gbmV3IEZpbGUoY2FuLnVpLmJsb2JzLCAobGlzdFswXXx8InNvbWUiKSsiLndlYm0iKSAKCQkJY2FuLnJ1bkFjdGlvbihldmVudCwgaHRtbC5VUExPQUQpCgkJfSkKCX0sCgki5Y+W5raIIjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi51aS5vdXRwdXQpLCBjYW4ub25pbXBvcnQuX2FjdGlvbihjYW4pCgl9LAp9KQpWb2xjYW5vcyhjaGF0Lk9OREVUQUlMLCB7aGVscDogIuaTjeS9nOaVsOaNriIsIGxpc3Q6IFsi5YWz6ZetIiwgIuaKk+aLjSIsICLlvZXliLYiXSwKCSLmiJDlm74iOiBmdW5jdGlvbihldmVudCwgY2FuKSB7CgkJZ2lmc2hvdC5jcmVhdGVHSUYoewoJCQkndmlkZW8nOiBbVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihjYW4udWkuYmxvYnMsIHt0eXBlIDogJ3ZpZGVvL3dlYm0nfSkpXSwKCQl9LGZ1bmN0aW9uKG9iaikgewoJCQlpZighb2JqLmVycm9yKSB7CgkJCQljYW4udXNlci5kb3dubG9hZChjYW4sIG9iai5pbWFnZSwgInNvbWUiLCAiZ2lmIikKCQkJfQoJCX0pOwoJfSwKCSLlm57mlL4iOiBmdW5jdGlvbihldmVudCwgY2FuKSB7CgkJdmFyIHZpZGVvID0gY2FuLnBhZ2UuQXBwZW5kKGNhbiwgY2FuLnVpLm91dHB1dCwgW3t0eXBlOiBodG1sLlZJREVPLCBzdHlsZToge3dpZHRoOiBjYW4uQ29uZldpZHRoKCl9fV0pLnZpZGVvCgkJdmlkZW8uc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihjYW4udWkuYmxvYnMsIHt0eXBlIDogJ3ZpZGVvL3dlYm0nfSkpLCB2aWRlby5wbGF5KCkKCX0sCgki5LiL6L29IjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi51c2VyLmRvd25sb2FkKGNhbiwgVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihjYW4udWkuYmxvYnMsIHt0eXBlOiAidmlkZW8vd2VibSJ9KSksICJyZWNvcmQud2VibSIpCgl9LAp9KQpWb2xjYW5vcyhjaGF0Lk9ORVhQT1JULCB7aGVscDogIuWvvOWHuuaVsOaNriIsIGxpc3Q6IFsidG90YWwiXX0pCg==",
        "usr/volcanos/plugin/story/parse.js": "",
        "usr/volcanos/plugin/story/pie.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuKSwgY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihtc2cpCgoJCXZhciBjb2xvciA9IFtjbGkuUkVELCBjbGkuWUVMTE9XLCBjbGkuR1JFRU4sIGNsaS5DWUFOLCBjbGkuQkxVRSwgY2xpLlBVUlBMRV0KCQl2YXIgY29sb3IgPSBbIiMzMzAwRkYiLCAiIzIxOTZGMyIsICIjNENBRjUwIiwgIiNDRERDMzkiLCAiI0ZGRUIzQiIsICIjOUMyN0IwIiwgIiM3OTU1NDgiLCAiIzYwN0Q4QiIsICIjQ0MzM0ZGIl0KCQl2YXIgaGVpZ2h0ID0gbXNnLk9wdGlvbihodG1sLkhFSUdIVCl8fGNhbi5Db25mSGVpZ2h0KCkKCgkJY2FuLnBhZ2UuQ2xhc3NMaXN0LmFkZChjYW4sIGNhbi5fZmllbGRzLCAiZHJhdyIpCgkJY2FuLnJlcXVpcmUoWyIvcGx1Z2luL2xvY2FsL3dpa2kvZHJhdy5qcyIsICIvcGx1Z2luL2xvY2FsL3dpa2kvZHJhdy9wYXRoLmpzIl0sIGZ1bmN0aW9uKCkgewoJCQljYW4ub25pbXBvcnQuX3Nob3coY2FuLCBtc2cpLCBjYW4ub25hcHBlbmQuX3N0YXR1cyhjYW4sIFtdLmNvbmNhdChtc2cuYXBwZW5kLCBbIndlaWdodCJdKSkKCQkJdmFyIG1hcmdpbiA9IGhlaWdodC84LCByID0gaGVpZ2h0LzItbWFyZ2luOyBjYW4uc3ZnLlZhbChodG1sLldJRFRILCAyKihyK21hcmdpbikpLCBjYW4uc3ZnLlZhbChodG1sLkhFSUdIVCwgMioocittYXJnaW4pKQoJCQljYW4ub25pbXBvcnQuX2RyYXcoY2FuLCBtc2csIGNhbi5Db25mKG1kYi5GSUVMRCksIGNvbG9yLCByK21hcmdpbiwgcittYXJnaW4sIHIsIG1hcmdpbiwgMCkKCgkJCWNhbi5wYWdlLnN0eWxlKGNhbiwgY2FuLnVpLnByb2plY3QsIGh0bWwuTUFYX1dJRFRILCBjYW4uQ29uZldpZHRoKCktaGVpZ2h0KQoJCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuLCBjYW4udWkucHJvamVjdCksIGNhbi5vbm1vdGlvbi50b2dnbGUoY2FuLCBjYW4udWkucHJvamVjdCwgdHJ1ZSkKCQkJY2FuLm9uYXBwZW5kLnRhYmxlKGNhbiwgbXNnLCBudWxsLCBjYW4udWkucHJvamVjdCksIGNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi51aS5wcm9qZWN0LCBodG1sLlRSLCBmdW5jdGlvbih0ciwgaW5kZXgpIHsKCQkJCWNhbi5wYWdlLk1vZGlmeShjYW4sIHRyLCB7b25tb3VzZWVudGVyOiBmdW5jdGlvbihldmVudCkgewoJCQkJCWNhbi5vbmltcG9ydC5fZHJhdyhjYW4sIG1zZywgY2FuLkNvbmYobWRiLkZJRUxEKSwgY29sb3IsIHIrbWFyZ2luLCByK21hcmdpbiwgciwgbWFyZ2luLCBpbmRleC0xKQoJCQkJfX0pCgkJCX0pCgkJfSkKCX0sCglfZHJhdzogZnVuY3Rpb24oY2FuLCBtc2csIGZpZWxkLCBjb2xvciwgeCwgeSwgciwgbWFyZ2luLCB3aGljaCkgeyBmaWVsZCA9IGZpZWxkfHxtZGIuVkFMVUUKCQlmdW5jdGlvbiBwb3MoeCwgeSwgciwgYW5nbGUpIHsgYW5nbGUgLT0gOTA7IHJldHVybiBbeCArIHIgKiBNYXRoLmNvcyhhbmdsZSAqIE1hdGguUEkgLyAxODApLCB5ICsgciAqIE1hdGguc2luKGFuZ2xlICogTWF0aC5QSSAvIDE4MCldIH0KCQlmdW5jdGlvbiBwaWUoeCwgeSwgciwgYmVnaW4sIHNwYW4sIGNvbG9yLCBjYikgeyBjYW4ub25pbXBvcnQuZHJhdyh7fSwgY2FuLCB7c2hhcGU6IHN2Zy5QQVRILCBzdHlsZToga2l0LkRpY3QoCgkJCWh0bWwuU1RST0tFX1dJRFRILCAxLCBodG1sLlNUUk9LRSwgY29sb3IsIGh0bWwuRklMTCwgY29sb3IsICJkIiwgY2FuLmJhc2Uuam9pbnMoWwoJCQkJWyJNIiwgeCwgeV0sIFsiTCJdLmNvbmNhdChwb3MoeCwgeSwgciwgYmVnaW4pKSwgWyJBIiwgciwgciwgIjAiLCBzcGFuPjE4MD8gIjEiOiAiMCIsICIxIl0uY29uY2F0KHBvcyh4LCB5LCByLCBiZWdpbitzcGFuKSksIFsiWiJdCgkJCV0sIGljZS5TUCwgaWNlLkZTKSwKCQkpLCBvbm1vdXNlZW50ZXI6IGZ1bmN0aW9uKGV2ZW50KSB7IGNhbi5iYXNlLmlzRnVuYyhjYikgJiYgY2IoZXZlbnQpIH0gfSkgfQoKCQlpZiAod2hpY2ggPT0gY2FuLl9sYXN0KSB7IHJldHVybiB9IGNhbi5fbGFzdCA9IHdoaWNoCgkJY2FuLm9ubW90aW9uLmNsZWFyKGNhbiwgY2FuLnN2ZyksIGNhbi5zdmcuVmFsdWUobWRiLkNPVU5ULCAwKQoJCXZhciB0b3RhbCA9IDA7IG1zZy5UYWJsZShmdW5jdGlvbih2YWx1ZSkgeyB0b3RhbCArPSBjYW4ub25pbXBvcnQuX3BhcnNlSW50KGNhbiwgdmFsdWVbZmllbGRdKSB9KQoJCXZhciBiZWdpbiA9IDA7IG1zZ1tjbGkuQ09MT1JdID0gW10sIG1zZ1sid2VpZ2h0Il0gPSBbXSwgbXNnLlRhYmxlKGZ1bmN0aW9uKHZhbHVlLCBpbmRleCkgeyB2YXIgc3BhbiA9IGNhbi5vbmltcG9ydC5fcGFyc2VJbnQoY2FuLCB2YWx1ZVtmaWVsZF0pL3RvdGFsKjM2MAoJCQl2YXIgcCA9IGluZGV4PT13aGljaD8gcG9zKHgsIHksIG1hcmdpbiwgYmVnaW4rc3Bhbi8yKTogW3gsIHldLCBjID0gY29sb3JbaW5kZXglY29sb3IubGVuZ3RoXQoKCQkJaWYgKG1zZy5MZW5ndGgoKSA9PSAxKSB7CgkJCQljYW4ub25pbXBvcnQuZHJhdyh7fSwgY2FuLCB7c2hhcGU6IHN2Zy5DSVJDTEUsIHBvaW50OiBbe3g6IHgsIHk6IHl9LCB7eDogeCwgeTogeStyfV0sIHN0eWxlOiB7ZmlsbDogY29sb3JbMF19fSkKCQkJfSBlbHNlIHsKCQkJCXBpZShwWzBdLCBwWzFdLCByLCBiZWdpbiwgc3BhbiwgYywgZnVuY3Rpb24oZXZlbnQpIHsgY2FuLm9uaW1wb3J0Ll9kcmF3KGNhbiwgbXNnLCBmaWVsZCwgY29sb3IsIHgsIHksIHIsIG1hcmdpbiwgaW5kZXgpIH0pLCBiZWdpbiArPSBzcGFuCgkJCX0KCQkJbXNnLlB1c2goY2xpLkNPTE9SLCAnPHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6JytjKyciPiAgICAgPC9zcGFuPicpCgkJCW1zZy5QdXNoKCJ3ZWlnaHQiLCBwYXJzZUludChzcGFuKjEwMC8zNjApKyIlIikKCQkJaWYgKGluZGV4ID09IHdoaWNoKSB7IGNhbi5TdGF0dXModmFsdWUpLCBjYW4uU3RhdHVzKCJ3ZWlnaHQiLCBwYXJzZUludChzcGFuKjEwMC8zNjApKyIlIikgfQoJCX0pCgl9LAoJX3BhcnNlSW50OiBmdW5jdGlvbihjYW4sIHZhbHVlKSB7IHZhbHVlID0gdmFsdWUudG9Mb3dlckNhc2UoKQoJCWlmIChjYW4uYmFzZS5lbmRXaXRoKHZhbHVlLCAibWkiKSkgeyByZXR1cm4gcGFyc2VJbnQodmFsdWUpKjEwMDAwMDAgfQoJCWlmIChjYW4uYmFzZS5lbmRXaXRoKHZhbHVlLCAiZ2kiKSkgeyByZXR1cm4gcGFyc2VJbnQodmFsdWUpKjEwMDAwMDAwMDAgfQoJCWlmIChjYW4uYmFzZS5lbmRXaXRoKHZhbHVlLCAiZyIpKSB7IHJldHVybiBwYXJzZUludCh2YWx1ZSkqMTAwMDAwMDAwMCB9CgkJaWYgKGNhbi5iYXNlLmVuZFdpdGgodmFsdWUsICJtIikpIHsgcmV0dXJuIHBhcnNlSW50KHZhbHVlKSoxMDAwMDAwIH0KCQlyZXR1cm4gcGFyc2VJbnQodmFsdWUpCgl9Cn0pClZvbGNhbm9zKGNoYXQuT05FWFBPUlQsIHtoZWxwOiAi5a+85Ye65pWw5o2uIiwgX3Nob3c6IGZ1bmN0aW9uKGNhbikge319KQo=",
        "usr/volcanos/plugin/story/spide.css": "ZmllbGRzZXQuZHJhdy5zcGlkZSBkaXYub3V0cHV0IGRpdi50b2dnbGUgeyBkaXNwbGF5Om5vbmU7IH0K",
        "usr/volcanos/plugin/story/spide.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuKSwgY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihtc2cpOyBpZiAobXNnLkxlbmd0aCgpID09IDApIHsgcmV0dXJuIH0KCgkJY2FuLkNvbmZEZWZhdWx0KHtyb290OiAiaWNlIiwgZmllbGQ6IG1zZy5hcHBlbmRbMF0sIHNwbGl0OiBpY2UuUFN9KQoJCWNhbi5kaXJfcm9vdCA9IG1zZy5PcHRpb24obmZzLkRJUl9ST09UKXx8Y2FuLkNvbmYoInJvb3QiKQoJCWNhbi5fdHJlZSA9IGNhbi5vbmltcG9ydC5fdHJlZShjYW4sIG1zZy5UYWJsZSgpLCBjYW4uQ29uZihtZGIuRklFTEQpLCBjYW4uQ29uZihsZXguU1BMSVQpKQoJCWlmICghY2FuLl90cmVlWyIiXSkgeyByZXR1cm4gfSBjYW4uX3RyZWVbIiJdLm5hbWUgPSBjYW4uQ29uZigicm9vdCIpCgoJCWNhbi5zaXplID0gcGFyc2VJbnQoY2FuLkFjdGlvbigic2l6ZSIpfHwyNCkKCQljYW4ubWFyZ2luID0gcGFyc2VJbnQoY2FuLkFjdGlvbigibWFyZ2luIil8fDMwKQoJCWNhbi5wYWdlLkNsYXNzTGlzdC5hZGQoY2FuLCBjYW4uX2ZpZWxkcywgImRyYXciKQoJCWNhbi5yZXF1aXJlKFsiL3BsdWdpbi9sb2NhbC93aWtpL2RyYXcuanMiLCAiL3BsdWdpbi9sb2NhbC93aWtpL2RyYXcvcGF0aC5qcyJdLCBmdW5jdGlvbigpIHsKCQkJY2FuLm9uaW1wb3J0LmxheW91dChjYW4pCgkJfSkKCX0sCglfdHJlZTogZnVuY3Rpb24oY2FuLCBsaXN0LCBmaWVsZCwgc3BsaXQpIHsKCQl2YXIgbm9kZSA9IHt9OyBjYW4uY29yZS5MaXN0KGxpc3QsIGZ1bmN0aW9uKGl0ZW0pIHsgaWYgKCFpdGVtW2ZpZWxkXSkgeyByZXR1cm4gfQoJCQljYW4uY29yZS5MaXN0KGNhbi5iYXNlLnRyaW1QcmVmaXgoaXRlbVtmaWVsZF0sIGNhbi5kaXJfcm9vdCtzcGxpdCkuc3BsaXQoc3BsaXQpLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGFycmF5KSB7CgkJCQl2YXIgbGFzdCA9IGFycmF5LnNsaWNlKDAsIGluZGV4KS5qb2luKHNwbGl0KXx8IiIsIG5hbWUgPSBhcnJheS5zbGljZSgwLCBpbmRleCsxKS5qb2luKHNwbGl0KQoJCQkJaWYgKCF2YWx1ZSB8fCBub2RlW25hbWVdKSB7IHJldHVybiB9CgoJCQkJbm9kZVtsYXN0XSA9IG5vZGVbbGFzdF18fHtuYW1lOiBsYXN0LCBtZXRhOiB7fSwgbGlzdDogW119CgkJCQlub2RlW2xhc3RdLmxpc3QucHVzaChub2RlW25hbWVdID0gewoJCQkJCW5hbWU6IHZhbHVlKyhpbmRleD09YXJyYXkubGVuZ3RoLTE/ICIiOiBzcGxpdCksCgkJCQkJbWV0YTogaXRlbSwgbGlzdDogW10sIGxhc3Q6IG5vZGVbbGFzdF0sCgkJCQkJZmlsZTogaXRlbVtmaWVsZF18fGl0ZW0uZmlsZSwgaGlkZTogdHJ1ZSwKCQkJCX0pCgkJCX0pCgkJfSkKCQlyZXR1cm4gbm9kZQoJfSwKCV9oZWlnaHQ6IGZ1bmN0aW9uKGNhbiwgdHJlZSwgZGVlcCkgeyBpZiAoIXRyZWUpIHsgcmV0dXJuIDAgfQoJCXRyZWUuZGVlcCA9IGRlZXB8fDAKCQlpZiAodHJlZS5saXN0Lmxlbmd0aCA9PSAwIHx8IHRyZWUuaGlkZSkgeyByZXR1cm4gdHJlZS5oZWlnaHQgPSAxIH0KCgkJdmFyIGhlaWdodCA9IDA7IGNhbi5jb3JlLkxpc3QodHJlZS5saXN0LCBmdW5jdGlvbihpdGVtKSB7CgkJCWhlaWdodCArPSBjYW4ub25pbXBvcnQuX2hlaWdodChjYW4sIGl0ZW0sIChkZWVwfHwwKSsxKQoJCX0pCgkJcmV0dXJuIHRyZWUuaGVpZ2h0ID0gaGVpZ2h0Cgl9LAoJX3dpZHRoOiBmdW5jdGlvbihjYW4sIHRyZWUsIGRlZXApIHsgaWYgKCF0cmVlKSB7IHJldHVybiAwIH0KCQl0cmVlLmRlZXAgPSBkZWVwfHwwCgkJaWYgKHRyZWUubGlzdC5sZW5ndGggPT0gMCB8fCB0cmVlLmhpZGUpIHsKCQkJdHJlZS52aWV3ID0gY2FuLm9uaW1wb3J0LmRyYXcoe30sIGNhbiwge3NoYXBlOiBodG1sLlRFWFQsIHBvaW50OiBbe3g6IDAsIHk6IDB9XSwgc3R5bGU6IHtpbm5lcjogdHJlZS5uYW1lfX0pCgkJCXJldHVybiB0cmVlLndpZHRoID0gdHJlZS52aWV3LlZhbCgidGV4dExlbmd0aCIpK2Nhbi5tYXJnaW4KCQl9CgoJCXZhciB3aWR0aCA9IDA7IGNhbi5jb3JlLkxpc3QodHJlZS5saXN0LCBmdW5jdGlvbihpdGVtKSB7CgkJCXdpZHRoICs9IGNhbi5vbmltcG9ydC5fd2lkdGgoY2FuLCBpdGVtLCAoZGVlcHx8MCkrMSkKCQl9KQoJCXJldHVybiB0cmVlLndpZHRoID0gd2lkdGgKCX0sCglfY29sb3I6IGZ1bmN0aW9uKGNhbiwgdHJlZSkgewoJCXJldHVybiB0cmVlLm1ldGEmJnRyZWUubWV0YS5jb2xvciB8fCAodHJlZS5saXN0ID09IDA/IGNsaS5QVVJQTEU6IGNsaS5ZRUxMT1cpCgl9LAoJbGF5b3V0OiBmdW5jdGlvbihjYW4pIHsKCQl2YXIgcCA9IGNhbi5BY3Rpb24oaWNlLlZJRVcsIGNhbi5zdXAudmlld3x8Y2FuLkFjdGlvbihpY2UuVklFVykpCgkJY2FuLm9ubW90aW9uLmNsZWFyKGNhbiksIGNhbi5vbmltcG9ydC5fc2hvdyhjYW4sIGNhbi5yZXF1ZXN0KCkpCgkJY2FuLnN2Zy5WYWwoaHRtbC5GT05UX1NJWkUsIGNhbi5BY3Rpb24oInNpemUiKSkKCQljYW4ub25hY3Rpb25bcF0oZXZlbnQsIGNhbiwgcCkKCX0sCn0sIFsiIl0pClZvbGNhbm9zKGNoYXQuT05BQ1RJT04sIHtoZWxwOiAi55So5oi35pON5L2cIiwgbGlzdDogWwoJCVtpY2UuVklFVywgIuaoquWQkSIsICLnurXlkJEiXSwgWyJzaXplIiwgMjQsIDMyLCA0OF0sIFsibWFyZ2luIiwgMzAsIDUwLCAxMDBdLAoJXSwKCXNpemU6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsgY2FuLnNpemUgPSBwYXJzZUludChjYW4uQWN0aW9uKCJzaXplIil8fDMwKSwgY2FuLm9uaW1wb3J0LmxheW91dChjYW4pIH0sCgltYXJnaW46IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsgY2FuLm1hcmdpbiA9IHBhcnNlSW50KGNhbi5BY3Rpb24oIm1hcmdpbiIpfHwzMCksIGNhbi5vbmltcG9ydC5sYXlvdXQoY2FuKSB9LAoJIuaoquWQkSI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbikgewoJCWNhbi5vbmltcG9ydC5faGVpZ2h0KGNhbiwgY2FuLl90cmVlWyIiXSkKCQljYW4uc3VwLnZpZXcgPSBidXR0b24sIGNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi5zdmcpCgoJCWNhbi5zdmcuVmFsKGh0bWwuSEVJR0hULCBjYW4uX3RyZWVbIiJdLmhlaWdodCpjYW4ubWFyZ2luKzIqY2FuLm1hcmdpbikKCQljYW4ud2lkdGggPSAwLCBjYW4ub25hY3Rpb24uX2RyYXdfaG9yaXpvbnRhbChjYW4sIGNhbi5fdHJlZVsiIl0sIGNhbi5tYXJnaW4sIGNhbi5tYXJnaW4pCgkJY2FuLnN2Zy5WYWwoaHRtbC5XSURUSCwgY2FuLndpZHRoK2Nhbi5tYXJnaW4pCgl9LAoJIue6teWQkSI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4sIGJ1dHRvbikgewoJCWNhbi5vbmltcG9ydC5fd2lkdGgoY2FuLCBjYW4uX3RyZWVbIiJdKQoJCWNhbi5zdXAudmlldyA9IGJ1dHRvbiwgY2FuLm9ubW90aW9uLmNsZWFyKGNhbiwgY2FuLnN2ZykKCgkJY2FuLnN2Zy5WYWwoaHRtbC5XSURUSCwgY2FuLl90cmVlWyIiXS53aWR0aCsyKmNhbi5tYXJnaW4pCgkJY2FuLmhlaWdodCA9IDAsIGNhbi5vbmFjdGlvbi5fZHJhd192ZXJ0aWNhbChjYW4sIGNhbi5fdHJlZVsiIl0sIGNhbi5tYXJnaW4sIGNhbi5tYXJnaW4rY2FuLm1hcmdpbikKCQljYW4uc3ZnLlZhbChodG1sLkhFSUdIVCwgY2FuLmhlaWdodCtjYW4ubWFyZ2luKQoJfSwKCV9kcmF3OiBmdW5jdGlvbihjYW4sIHRyZWUsIHgsIHksIHN0eWxlKSB7IHZhciBjb2xvciA9IGNhbi5vbmltcG9ydC5fY29sb3IoY2FuLCB0cmVlKQoJCXRyZWUudmlldyA9IGNhbi5vbmltcG9ydC5kcmF3KHt9LCBjYW4sIHtzaGFwZTogaHRtbC5URVhULCBwb2ludDogW3t4OiB4LCB5OiB5fV0sIHN0eWxlOiBjYW4uYmFzZS5Db3B5KGtpdC5EaWN0KAoJCQlodG1sLlNUUk9LRSwgY29sb3IsIGh0bWwuRklMTCwgY29sb3IsIGh0bWwuVEVYVF9BTkNIT1IsICJzdGFydCIsICJpbm5lciIsIHRyZWUubmFtZXx8dHJlZS5maWxlLAoJCSksIHN0eWxlKSwgfSksIGNhbi5jb3JlLkl0ZW1DQihjYW4ub25kZXRhaWwsIHRyZWUudmlldywgY2FuLCB0cmVlKQoJfSwKCV9kcmF3X3ZlcnRpY2FsOiBmdW5jdGlvbihjYW4sIHRyZWUsIHgsIHkpIHsgdHJlZS54ID0geCwgdHJlZS55ID0geQoJCWNhbi5vbmFjdGlvbi5fZHJhdyhjYW4sIHRyZWUsIHgrdHJlZS53aWR0aC8yLCB5LCBraXQuRGljdChodG1sLlRFWFRfQU5DSE9SLCAibWlkZGxlIikpCgoJCXRyZWUuaGVpZ2h0ID0gY2FuLm1hcmdpbgoJCWlmICh5K3RyZWUuaGVpZ2h0ID4gY2FuLmhlaWdodCkgeyBjYW4uaGVpZ2h0ID0geSt0cmVlLmhlaWdodCB9CgkJaWYgKHRyZWUuaGlkZSkgeyByZXR1cm4gfQoKCQl2YXIgb2Zmc2V0ID0gMDsgY2FuLmNvcmUuTGlzdCh0cmVlLmxpc3QsIGZ1bmN0aW9uKGl0ZW0pIHsKCQkJY2FuLm9uaW1wb3J0LmRyYXcoe30sIGNhbiwge3NoYXBlOiBzdmcuUEFUSDJWLCBwb2ludDogWwoJCQkJe3g6IHgrdHJlZS53aWR0aC8yLCB5OiB5K3RyZWUuaGVpZ2h0LWNhbi5tYXJnaW4vMn0sCgkJCQl7eDogeCtvZmZzZXQraXRlbS53aWR0aC8yLCB5OiB5K3RyZWUuaGVpZ2h0K2Nhbi5tYXJnaW4vMn0sCgkJCV0sIHN0eWxlOiB7c3Ryb2tlOiBjbGkuQ1lBTn19KQoKCQkJY2FuLm9uYWN0aW9uLl9kcmF3X3ZlcnRpY2FsKGNhbiwgaXRlbSwgeCtvZmZzZXQsIHkrdHJlZS5oZWlnaHQrY2FuLm1hcmdpbikKCQkJb2Zmc2V0ICs9IGl0ZW0ud2lkdGgKCQl9KQoJfSwKCV9kcmF3X2hvcml6b250YWw6IGZ1bmN0aW9uKGNhbiwgdHJlZSwgeCwgeSkgeyB0cmVlLnggPSB4LCB0cmVlLnkgPSB5CgkJY2FuLm9uYWN0aW9uLl9kcmF3KGNhbiwgdHJlZSwgeCwgeSt0cmVlLmhlaWdodCpjYW4ubWFyZ2luLzIsIGtpdC5EaWN0KGh0bWwuVEVYVF9BTkNIT1IsICJzdGFydCIpKQoKCQl0cmVlLndpZHRoID0gdHJlZS52aWV3LlZhbCgidGV4dExlbmd0aCIpfHwodHJlZS5uYW1lfHwiIikubGVuZ3RoKjEwCgkJaWYgKHgrdHJlZS53aWR0aCA+IGNhbi53aWR0aCkgeyBjYW4ud2lkdGggPSB4K3RyZWUud2lkdGggfQoJCWlmICh0cmVlLmhpZGUpIHsgcmV0dXJuIH0KCgkJdmFyIG9mZnNldCA9IDA7IGNhbi5jb3JlLkxpc3QodHJlZS5saXN0LCBmdW5jdGlvbihpdGVtKSB7CgkJCWNhbi5vbmltcG9ydC5kcmF3KHt9LCBjYW4sIHtzaGFwZTogc3ZnLlBBVEgySCwgcG9pbnQ6IFsKCQkJCXt4OiB4K3RyZWUud2lkdGgrY2FuLm1hcmdpbi84LCB5OiB5K3RyZWUuaGVpZ2h0KmNhbi5tYXJnaW4vMn0sCgkJCQl7eDogeCt0cmVlLndpZHRoK2Nhbi5tYXJnaW4qMi0yKmNhbi5tYXJnaW4vOCwgeTogeStvZmZzZXQraXRlbS5oZWlnaHQqY2FuLm1hcmdpbi8yfQoJCQldLCBzdHlsZToge3N0cm9rZTogY2xpLkNZQU59fSkKCgkJCWNhbi5vbmFjdGlvbi5fZHJhd19ob3Jpem9udGFsKGNhbiwgaXRlbSwgeCt0cmVlLndpZHRoKzIqY2FuLm1hcmdpbiwgeStvZmZzZXQpCgkJCW9mZnNldCArPSBpdGVtLmhlaWdodCpjYW4ubWFyZ2luCgkJfSkKCX0sCn0pClZvbGNhbm9zKGNoYXQuT05ERVRBSUwsIHtoZWxwOiAi55So5oi35Lqk5LqSIiwKCW9ubW91c2VlbnRlcjogZnVuY3Rpb24oZXZlbnQsIGNhbiwgdHJlZSkgeyB2YXIgeSA9IHRyZWUueSt0cmVlLmhlaWdodCpjYW4ubWFyZ2luLzIKCQljYW4ucGFnZS5SZW1vdmUoY2FuLCBjYW4ucG9zKSwgY2FuLnBvcyA9IGNhbi5vbmltcG9ydC5kcmF3KHt9LCBjYW4sIHtzaGFwZTogc3ZnLlJFQ1QsIHBvaW50OiBbCgkJCXt4OiB0cmVlLngtY2FuLm1hcmdpbi80LCB5OiB5LWNhbi5tYXJnaW4vMn0sIHt4OiB0cmVlLngrdHJlZS53aWR0aCtjYW4ubWFyZ2luLzgsIHk6IHkrY2FuLm1hcmdpbi8yfSwKCQldLCBzdHlsZToge3N0cm9rZTogY2xpLlJFRCwgZmlsbDogaHRtbC5OT05FfX0pLCBjYW4ub25rZXltYXAucHJldmVudChldmVudCkKCX0sCglvbmNsaWNrOiBmdW5jdGlvbihldmVudCwgY2FuLCB0cmVlKSB7CgkJaWYgKHRyZWUubGlzdC5sZW5ndGggPiAwIHx8IHRyZWUudGFncyB8fCB0cmVlLm5hbWUuZW5kc1dpdGgoY2FuLkNvbmYobGV4LlNQTElUKSkpIHsKCQkJcmV0dXJuIHRyZWUuaGlkZSA9ICF0cmVlLmhpZGUsIGNhbi5vbmFjdGlvbltjYW4uQWN0aW9uKGljZS5WSUVXKV0oZXZlbnQsIGNhbikKCQl9CgoJCWZvciAodmFyIG5vZGUgPSB0cmVlOyBub2RlOyBub2RlID0gbm9kZS5sYXN0KSB7IGNhbi5yZXF1ZXN0KGV2ZW50LCBub2RlLm1ldGEpIH0KCgkJY2FuLnJ1bihjYW4ucmVxdWVzdChldmVudCwgY2FuLk9wdGlvbigpKSwgY2FuLmJhc2UuT2JqKGNhbi5Db25mKGxleC5QUkVGSVgpLCBbXSkuY29uY2F0KFtjYW4uT3B0aW9uKCJyZXBvcyIpfHwiIiwgdHJlZS5maWxlfHwiIiwgdHJlZS5uYW1lXSksIGZ1bmN0aW9uKG1zZykgewoJCQlpZiAobXNnLkxlbmd0aCgpID09IDApIHsgcmV0dXJuIGNhbi5vbmRldGFpbC5wbHVnaW4oY2FuLCAid2ViLmNvZGUuaW5uZXIiLCBbY2FuLmRpcl9yb290LCB0cmVlLmZpbGUsIHRyZWUubGluZV0sIGNvZGUuSU5ORVIpIH0KCQkJaWYgKG1zZy5BcHBlbmQobWRiLklOREVYKSkgeyBtc2cuVGFibGUoZnVuY3Rpb24odmFsdWUpIHsgY2FuLm9uZGV0YWlsLnBsdWdpbihjYW4sIHZhbHVlLmluZGV4LCBbXSkgfSk7IHJldHVybiB9CgoJCQlpZiAobXNnLk9wdGlvbihsZXguU1BMSVQpKSB7CgkJCQl0cmVlLmxpc3QgPSBjYW4ub25pbXBvcnQuX3RyZWUoY2FuLCBtc2cuVGFibGUoKSwgbXNnLk9wdGlvbihtZGIuRklFTEQpfHxtc2cuYXBwZW5kWzBdLCBtc2cuT3B0aW9uKGxleC5TUExJVCkpWyIiXS5saXN0fHxbXQoJCQkJY2FuLmNvcmUuTGlzdCh0cmVlLmxpc3QsIGZ1bmN0aW9uKGl0ZW0pIHsgaXRlbS5sYXN0ID0gdHJlZSB9KQoJCQl9IGVsc2UgewoJCQkJbXNnLlRhYmxlKGZ1bmN0aW9uKGl0ZW0pIHsgdHJlZS5saXN0LnB1c2goewoJCQkJCXR5cGU6ICJ0YWdzIiwgbmFtZTogaXRlbS5uYW1lfHxpdGVtLmZpbGV8fGl0ZW1bbXNnLmFwcGVuZFswXV0sCgkJCQkJbWV0YTogaXRlbSwgbGlzdDogW10sIGxhc3Q6IHRyZWUsCgkJCQkJZmlsZTogaXRlbS5maWxlLCBsaW5lOiBpdGVtLmxpbmUsIGhpZGU6IHRydWUsCgkJCQl9KSB9KQoJCQl9CgkJCXRyZWUudGFncyA9IHRydWUsIHRyZWUuaGlkZSA9ICF0cmVlLmhpZGUsIGNhbi5vbmFjdGlvbltjYW4uQWN0aW9uKGljZS5WSUVXKV0oZXZlbnQsIGNhbikKCQl9LCB0cnVlKQoJfSwKCXBsdWdpbjogZnVuY3Rpb24oY2FuLCBpbmRleCwgYXJncywgcHJlZml4KSB7CgkJY2FuLm9uYXBwZW5kLnBsdWdpbihjYW4sIHt0eXBlOiBjaGF0LkZMT0FULCBpbmRleDogaW5kZXgsIGFyZ3M6IGFyZ3MsIG1vZGU6ICJmbG9hdCJ9LCBmdW5jdGlvbihzdWIpIHsKCQkJc3ViLnJ1biA9IGZ1bmN0aW9uKGV2ZW50LCBjbWRzLCBjYikgeyBjYW4ucnVuQWN0aW9uKGNhbi5yZXF1ZXN0KGV2ZW50KSwgcHJlZml4fHxbaWNlLlJVTiwgaW5kZXhdLCBjbWRzLCBjYikgfQoJCQlzdWIuTW9kZSgiZmxvYXQiKSwgY2FuLmdldEFjdGlvblNpemUoZnVuY3Rpb24obGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0KSB7IGxlZnQgPSBsZWZ0fHwwCgkJCQl2YXIgdG9wID0gY2FuLk1vZGUoKSA9PSB1bmRlZmluZWQ/IDEyMDogMDsgaWYgKGNhbi51c2VyLmlzTW9iaWxlKSB7IHRvcCA9IGNhbi51c2VyLmlzTGFuZHNjYXBlKCk/IDA6IDQ4IH0KCQkJCXN1Yi5Db25mSGVpZ2h0KGhlaWdodC10b3AtMipodG1sLkFDVElPTl9IRUlHSFQtKGNhbi51c2VyLmlzTW9iaWxlJiYhY2FuLnVzZXIuaXNMYW5kc2NhcGUoKT8gMipodG1sLkFDVElPTl9IRUlHSFQ6IDApKSwgc3ViLkNvbmZXaWR0aCh3aWR0aCkKCQkJCWNhbi5vbm1vdGlvbi5tb3ZlKGNhbiwgc3ViLl90YXJnZXQsIHtwb3NpdGlvbjogaHRtbC5GSVhFRCwgbGVmdDogbGVmdCwgdG9wOiB0b3B9KQoJCQl9KQoJCX0pCgl9LAp9KQo=",
        "usr/volcanos/plugin/story/trend.css": "ZmllbGRzZXQuZHJhdy50cmVuZCBkaXYub3V0cHV0IGRpdi50b2dnbGUgeyBkaXNwbGF5Om5vbmU7IH0KCg==",
        "usr/volcanos/plugin/story/trend.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25tb3Rpb24uY2xlYXIoY2FuKSwgY2FuLmJhc2UuaXNGdW5jKGNiKSAmJiBjYihtc2cpOyBpZiAobXNnLkxlbmd0aCgpID09IDApIHsgcmV0dXJuIH0KCQlpZiAobXNnLk9wdGlvbigiYnJhbmNoIikpIHsgcmV0dXJuIGNhbi5vbmFwcGVuZC50YWJsZShjYW4sIG1zZykgfQoKCQljYW4uZGF0YSA9IG1zZy5UYWJsZSgpLCBjYW4ub25pbXBvcnQuX3N1bShjYW4pCgkJY2FuLkFjdGlvbihodG1sLkhFSUdIVCwgbXNnLk9wdGlvbihodG1sLkhFSUdIVCl8fGljZS5BVVRPKQoJCWNhbi5BY3Rpb24oaHRtbC5TUEVFRCwgcGFyc2VJbnQobXNnLk9wdGlvbihodG1sLlNQRUVEKXx8IjEwMCIpKQoKCQljYW4ucGFnZS5DbGFzc0xpc3QuYWRkKGNhbiwgY2FuLl9maWVsZHMsICJkcmF3IikKCQljYW4ucmVxdWlyZShbIi9wbHVnaW4vbG9jYWwvd2lraS9kcmF3LmpzIiwgIi9wbHVnaW4vbG9jYWwvd2lraS9kcmF3L3BhdGguanMiXSwgZnVuY3Rpb24oKSB7CgkJCWNhbi5vbmltcG9ydC5sYXlvdXQoY2FuKQoJCX0pCgl9LAoJX3N1bTogZnVuY3Rpb24oY2FuKSB7CgkJdmFyIGJlZ2luID0gIiIsIGNvdW50ID0gMCwgcmVzdCA9IDAsIGFkZCA9IDAsIGRlbCA9IDAsIG1heCA9IDAKCQljYW4ubWF4ID0gMCwgY2FuLm1pbiA9IDAsIGNhbi5saXN0ID0gY2FuLmNvcmUuTGlzdChjYW4uZGF0YSwgZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CgkJCXZhciBsaW5lID0gewoJCQkJZGF0ZTogdmFsdWVbY2FuLl9tc2cuYXBwZW5kWzBdXSwKCQkJCXRleHQ6IHZhbHVlW2Nhbi5fbXNnLmFwcGVuZFs0XV0sCgkJCQlhZGQ6IHBhcnNlSW50KHZhbHVlW2Nhbi5fbXNnLmFwcGVuZFsxXV0pLAoJCQkJZGVsOiBwYXJzZUludCh2YWx1ZVtjYW4uX21zZy5hcHBlbmRbMl1dKSwKCQkJfQoKCQkJbGluZS5iZWdpbiA9IHJlc3QKCQkJbGluZS5tYXggPSByZXN0ICsgbGluZS5hZGQKCQkJbGluZS5taW4gPSByZXN0IC0gbGluZS5kZWwKCQkJbGluZS5jbG9zZSA9IHJlc3QgKyBsaW5lLmFkZCAtIGxpbmUuZGVsCgoJCQliZWdpbiA9IGJlZ2luIHx8IHZhbHVlLmRhdGUsIGNvdW50KysKCQkJcmVzdCA9IGxpbmUuY2xvc2UsIGFkZCArPSBsaW5lLmFkZCwgZGVsICs9IGxpbmUuZGVsCgoJCQlpZiAobGluZS5tYXggLSBsaW5lLm1pbiA+IG1heCkgeyBtYXggPSBsaW5lLm1heCAtIGxpbmUubWluIH0KCQkJaWYgKGxpbmUubWF4ID4gY2FuLm1heCkgeyBjYW4ubWF4ID0gbGluZS5tYXggfQoJCQlpZiAobGluZS5taW4gPCBjYW4ubWluKSB7IGNhbi5taW4gPSBsaW5lLm1pbiB9CgkJCXJldHVybiBsaW5lCgkJfSkKCQljYW4uU3RhdHVzKHsiZnJvbSI6IGJlZ2luLCAiY29tbWl0IjogY291bnQsICJ0b3RhbCI6IGFkZCtkZWwsICJtYXgiOiBtYXh9KQoJfSwKCV9sYXlvdXQ6IGZ1bmN0aW9uKGNhbikgewoJCXZhciBoZWlnaHQgPSBjYW4ub25leHBvcnQuaGVpZ2h0KGNhbikKCQl2YXIgd2lkdGggPSBwYXJzZUludChjYW4uQ29uZldpZHRoKCkpLCBzcGFjZSA9IHBhcnNlSW50KGNhbi5BY3Rpb24oInNwYWNlIil8fCIxMCIpCgkJdmFyIHN0ZXAgPSBwYXJzZUludCgod2lkdGgtMipzcGFjZSkgLyBjYW4ubGlzdC5sZW5ndGgpCgoJCWNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi5fb3V0cHV0KSwgY2FuLm9uaW1wb3J0Ll9zaG93KGNhbiwgY2FuLl9tc2cpCgkJY2FuLnN2Zy5WYWwoaHRtbC5IRUlHSFQsIGhlaWdodCksIGNhbi5zdmcuVmFsKGh0bWwuV0lEVEgsIHdpZHRoKQoJCXJldHVybiB7aGVpZ2h0OiBoZWlnaHQsIHdpZHRoOiB3aWR0aCwgc3BhY2U6IHNwYWNlLCBzdGVwOiBzdGVwfQoJfSwKCWxheW91dDogZnVuY3Rpb24oY2FuKSB7CgkJY2FuLm9uYWN0aW9uW2Nhbi5BY3Rpb24oaWNlLlZJRVcpXSh7fSwgY2FuKQoJfSwKfSwgWyIiXSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLnu4Tku7boj5zljZUiLCBsaXN0OiBbCgkJW2ljZS5WSUVXLCAi6LaL5Yq/5Zu+IiwgIuafseeKtuWbviIsICLmlbDmja7mupAiXSwKCQlbaHRtbC5IRUlHSFQsIDEwMCwgMjAwLCA0MDAsIDYwMCwgODAwLCBpY2UuQVVUT10sCgkJWyJzcGFjZSIsIDEwLCAyMCwgNTAsIDEwMF0sCgkJW2h0bWwuU1BFRUQsIDEwLCAyMCwgNTAsIDEwMF0sCgldLAoJIui2i+WKv+WbviI6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsgdmFyIGFyZ3MgPSBjYW4ub25pbXBvcnQuX2xheW91dChjYW4pCgkJZnVuY3Rpb24gc2NhbGUoeSkgeyByZXR1cm4gKHkgLSBjYW4ubWluKS8oY2FuLm1heCAtIGNhbi5taW4pKihhcmdzLmhlaWdodC0yKmFyZ3Muc3BhY2UpIH0KCQlmdW5jdGlvbiBvcmRlcihpbmRleCwgeCwgeSkgeyByZXR1cm4ge3g6IGFyZ3Muc3BhY2UrYXJncy5zdGVwKmluZGV4K3gsIHk6IGFyZ3MuaGVpZ2h0LWFyZ3Muc3BhY2Utc2NhbGUoeSl9IH0KCgkJdmFyIGJsYWNrID0gY2FuLm9uaW1wb3J0Lmdyb3VwKGNhbiwgY2xpLkJMQUNLLCBraXQuRGljdChodG1sLlNUUk9LRSwgY2xpLkJMQUNLLCBodG1sLkZJTEwsIGNsaS5CTEFDSykpCgkJdmFyIHdoaXRlID0gY2FuLm9uaW1wb3J0Lmdyb3VwKGNhbiwgY2xpLldISVRFLCBraXQuRGljdChodG1sLlNUUk9LRSwgY2xpLldISVRFLCBodG1sLkZJTEwsIGNsaS5XSElURSkpCgoJCWNhbi5jb3JlLk5leHQoY2FuLmxpc3QsIGZ1bmN0aW9uKGxpbmUsIG5leHQsIGluZGV4KSB7IGNhbi5TdGF0dXMobGluZSkKCQkJY2FuLm9uaW1wb3J0LmRyYXcoe30sIGNhbiwge3NoYXBlOiBzdmcuTElORSwgcG9pbnQ6IFsKCQkJCW9yZGVyKGluZGV4LCBhcmdzLnN0ZXAvMiwgbGluZS5taW4pLCBvcmRlcihpbmRleCwgYXJncy5zdGVwLzIsIGxpbmUubWF4KSwKCQkJXX0sIGxpbmUuYmVnaW4gPCBsaW5lLmNsb3NlPyB3aGl0ZTogYmxhY2spCgoJCQljYW4ub25pbXBvcnQuZHJhdyh7fSwgY2FuLCB7c2hhcGU6IHN2Zy5SRUNULCBwb2ludDogWwoJCQkJb3JkZXIoaW5kZXgsIGFyZ3Muc3RlcC80LCBsaW5lLmNsb3NlKSwgb3JkZXIoaW5kZXgsIGFyZ3Muc3RlcC80KjMsIGxpbmUuYmVnaW4pLAoJCQldLCBfaW5pdDogZnVuY3Rpb24odmlldykgewoJCQkJY2FuLmNvcmUuSXRlbUNCKGNhbi5vbmRldGFpbCwgZnVuY3Rpb24oa2V5LCBjYikgeyB2aWV3W2tleV0gPSBmdW5jdGlvbihldmVudCkgeyBjYihldmVudCwgY2FuLCBsaW5lKSB9IH0pCgkJCX19LCBsaW5lLmJlZ2luIDwgbGluZS5jbG9zZT8gd2hpdGU6IGJsYWNrKQoKCQkJY2FuLmNvcmUuVGltZXIocGFyc2VJbnQoY2FuLkFjdGlvbihodG1sLlNQRUVEKSksIG5leHQpCgkJfSkKCX0sCgki5p+x54q25Zu+IjogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyB2YXIgYXJncyA9IGNhbi5vbmltcG9ydC5fbGF5b3V0KGNhbikKCQl2YXIgbWF4ID0ge30sIG1pbiA9IHt9OyBjYW4uY29yZS5MaXN0KGNhbi5fbXNnLmFwcGVuZCwgZnVuY3Rpb24oa2V5LCB3aGljaCkgewoJCQljYW4uY29yZS5MaXN0KGNhbi5kYXRhLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKCQkJCXZhciB2ID0gcGFyc2VJbnQodmFsdWVba2V5XSl8fDA7IGlmIChpbmRleCA9PSAwKSB7CgkJCQkJcmV0dXJuIG1heFtrZXldID0gdiwgbWluW2tleV0gPSB2CgkJCQl9CgkJCQlpZiAodiA+IG1heFtrZXldKSB7IG1heFtrZXldID0gdiB9CgkJCQlpZiAodiA8IG1pbltrZXldKSB7IG1pbltrZXldID0gdiB9CgkJCX0pCgkJfSkKCgkJZnVuY3Rpb24gc2NhbGUoa2V5LCB5KSB7IHJldHVybiAoeSAtIG1pbltrZXldKS8obWF4W2tleV0gLSBtaW5ba2V5XSkqKGFyZ3MuaGVpZ2h0LTIqYXJncy5zcGFjZSkgfQoKCQl2YXIgd2lkdGggPSBhcmdzLnN0ZXAvY2FuLl9tc2cuYXBwZW5kLmxlbmd0aCwgd2hpY2ggPSAwCgkJY2FuLmNvcmUuTGlzdChjYW4uX21zZy5hcHBlbmQsIGZ1bmN0aW9uKGtleSwgd2hpY2gpIHsgaWYgKG1heFtrZXldID09IG1pbltrZXldKSB7IHJldHVybiB9CgkJCWNhbi5jb3JlLk5leHQoY2FuLmRhdGEsIGZ1bmN0aW9uKGxpbmUsIG5leHQsIGluZGV4KSB7IGlmIChwYXJzZUludChsaW5lW2tleV0pID09IDApIHsgcmV0dXJuIH0KCQkJCWNhbi5vbmltcG9ydC5kcmF3KHt9LCBjYW4sIHtzaGFwZTogc3ZnLlJFQ1QsIHBvaW50OiBbCgkJCQkJe3g6IGFyZ3Muc3BhY2UrYXJncy5zdGVwKmluZGV4K3dpZHRoKndoaWNoKzIsIHk6IGFyZ3MuaGVpZ2h0LWFyZ3Muc3BhY2Utc2NhbGUoa2V5LCBwYXJzZUludChsaW5lW2tleV0pKX0sCgkJCQkJe3g6IGFyZ3Muc3BhY2UrYXJncy5zdGVwKmluZGV4K3dpZHRoKih3aGljaCsxKSsyLCB5OiBhcmdzLmhlaWdodC1hcmdzLnNwYWNlfSwKCQkJCV0sIHN0eWxlOiBraXQuRGljdChodG1sLlNUUk9LRV9XSURUSCwgMSwgaHRtbC5TVFJPS0UsIGNsaS5XSElURSwgaHRtbC5GSUxMLCBjbGkuV0hJVEUsIHN2Zy5SWCwgMCwgc3ZnLlJZLCAwKSwgX2luaXQ6IGZ1bmN0aW9uKHZpZXcpIHsKCQkJCQljYW4uY29yZS5JdGVtQ0IoY2FuLm9uZGV0YWlsLCBmdW5jdGlvbihrZXksIGNiKSB7IHZpZXdba2V5XSA9IGZ1bmN0aW9uKGV2ZW50KSB7IGNiKGV2ZW50LCBjYW4sIGxpbmUpIH0gfSkKCQkJCX19KSwgY2FuLmNvcmUuVGltZXIocGFyc2VJbnQoY2FuLkFjdGlvbihodG1sLlNQRUVEKSksIG5leHQpCgkJCX0pLCB3aGljaCsrCgkJfSkKCX0sCgki5pWw5o2u5rqQIjogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi5vbm1vdGlvbi5jbGVhcihjYW4sIGNhbi5fb3V0cHV0KQoJCWNhbi5vbmFwcGVuZC50YWJsZShjYW4sIGNhbi5fbXNnLCBudWxsLCBjYW4uX291dHB1dCkKCX0sCgoJaGVpZ2h0OiBmdW5jdGlvbihldmVudCwgY2FuKSB7IGNhbi5vbmltcG9ydC5sYXlvdXQoY2FuKSB9LAoJc3BhY2U6IGZ1bmN0aW9uKGV2ZW50LCBjYW4pIHsgY2FuLm9uaW1wb3J0LmxheW91dChjYW4pIH0sCglzcGVlZDogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyBjYW4ub25pbXBvcnQubGF5b3V0KGNhbikgfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkRFVEFJTCwge2hlbHA6ICLnlKjmiLfkuqTkupIiLAoJb25tb3VzZWVudGVyOiBmdW5jdGlvbihldmVudCwgY2FuLCBsaW5lKSB7IGNhbi5TdGF0dXMobGluZSkgfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkVYUE9SVCwge2hlbHA6ICLlr7zlh7rmlbDmja4iLCBsaXN0OiBbImZyb20iLCAiY29tbWl0IiwgInRvdGFsIiwgIm1heCIsICJkYXRlIiwgInRleHQiLCAiYWRkIiwgImRlbCJdLAoJaGVpZ2h0OiBmdW5jdGlvbihjYW4pIHsgdmFyIGhlaWdodCA9IGNhbi5BY3Rpb24oaHRtbC5IRUlHSFQpCgkJaWYgKGhlaWdodCA9PSBpY2UuQVVUTykgeyBoZWlnaHQgPSBjYW4uQ29uZkhlaWdodCgpCgkJCS8vIGNhbi5pc0Z1bGxNb2RlKCkgfHwgKGhlaWdodCA9IGNhbi5iYXNlLk1heChjYW4uQ29uZkhlaWdodCgpLCA2MDApKQoJCX0KCQlpZiAoaGVpZ2h0IDwgMjAwKSB7IGhlaWdodCA9IDIwMCB9CgkJcmV0dXJuIHBhcnNlSW50KGhlaWdodHx8Y2FuLl9yb290Ll9oZWlnaHQvMikKCX0sCn0pCg==",
        "usr/volcanos/plugin/story/video.js": "Vm9sY2Fub3MoY2hhdC5PTklNUE9SVCwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2csIGNiLCB0YXJnZXQpIHsKCQljYW4ub25pbXBvcnQuc2VsZWN0KGNhbiwgbXNnKQoJCWNhbi5vbm1vdGlvbi5jbGVhcihjYW4pLCBjYW4uYmFzZS5pc0Z1bmMoY2IpICYmIGNiKG1zZykKCQljYW4ub25hcHBlbmQudGFibGUoY2FuLCBtc2cpLCBjYW4ub25hcHBlbmQuYm9hcmQoY2FuLCBtc2cpCgkJY2FuLm9ubW90aW9uLmRlbGF5KGNhbiwgZnVuY3Rpb24oKSB7IGNhbi5vbmFjdGlvbi5wbGF5KGV2ZW50LCBjYW4pIH0pCgkJY2FuLnBhZ2UuU2VsZWN0KGNhbiwgY2FuLl9vdXRwdXQsICJ0ZCBhIiwgZnVuY3Rpb24oYSkgewoJCQljYW4ucGFnZS5Nb2RpZnkoY2FuLCBhLCB7dGFyZ2V0OiAiIn0pCgkJfSkKCX0sCglzZWxlY3Q6IGZ1bmN0aW9uKGNhbiwgbXNnKSB7CgkJbXNnLkNsZWFyKCksIGNhbi5wYWdlLlNlbGVjdChjYW4sIGNhbi5fcm9vdC5fdGFyZ2V0LCBjYW4uT3B0aW9uKCJ0YWdzIiksIGZ1bmN0aW9uKGEsIGluZGV4KSB7CgkJCW1zZy5QdXNoKG1kYi5JTkRFWCwgaW5kZXgpCgkJCW1zZy5QdXNoKG1kYi5OQU1FLCBhLmlubmVyVGV4dCkKCQkJbXNnLlB1c2gobWRiLkxJTkssIGEuaHJlZikKCQkJYS5ocmVmID09IGxvY2F0aW9uLmhyZWYgJiYgY2FuLm9ubW90aW9uLmRlbGF5KGNhbiwgZnVuY3Rpb24oKSB7CgkJCQljYW4ucGFnZS5TZWxlY3QoY2FuLCBjYW4uX291dHB1dCwgaHRtbC5UUiwgZnVuY3Rpb24odHIsIGkpIHsKCQkJCQlpLTEgPT0gaW5kZXggJiYgY2FuLnBhZ2UuQ2xhc3NMaXN0LmFkZChjYW4sIHRyLCAic2VsZWN0IikKCQkJCX0pCgkJCX0pCgkJfSkKCQltc2cuT3B0aW9uKGljZS5NU0dfU1RBVFVTLCBKU09OLnN0cmluZ2lmeShbCgkJCXtuYW1lOiAidGltZSIsIHZhbHVlOiBjYW4uYmFzZS5UaW1lKG51bGwsICIleS0lbS0lZCAlSDolTTolUyIpfSwKCQkJe25hbWU6ICJjb3VudCIsIHZhbHVlOiBtc2cuTGVuZ3RoKCl9LAoJCV0pKQoJfSwKfSkKVm9sY2Fub3MoY2hhdC5PTkFDVElPTiwge2hlbHA6ICLmjqfku7bkuqTkupIiLAoJbmV4dDogZnVuY3Rpb24oZXZlbnQsIGNhbikgeyB2YXIgbXNnID0gY2FuLl9tc2cKCQltc2cuVGFibGUoZnVuY3Rpb24obGluZSwgaW5kZXgpIHsKCQkJaWYgKGxpbmUubGluayA9PSBsb2NhdGlvbi5ocmVmKSB7CgkJCQlsb2NhdGlvbi5ocmVmID0gbXNnLmxpbmtbaW5kZXgrMV0KCQkJfQoJCX0pCgl9LAoJcGxheTogZnVuY3Rpb24oZXZlbnQsIGNhbikgewoJCWNhbi5wYWdlLlNlbGVjdEFsbChjYW4sIGNhbi5fcm9vdC5fdGFyZ2V0LCBodG1sLlZJREVPLCBmdW5jdGlvbih2aWRlbykgewoJCQl2aWRlby5wbGF5YmFja1JhdGUgPSBwYXJzZUZsb2F0KGNhbi5PcHRpb24oInJhdGUiKSkKCQkJdmlkZW8uY3VycmVudFRpbWUgPSBwYXJzZUludChjYW4uT3B0aW9uKCJza2lwIikpCgkJCXZpZGVvLm9udGltZXVwZGF0ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7CgkJCQlpZiAodmlkZW8uY3VycmVudFRpbWUgPiBwYXJzZUludChjYW4uT3B0aW9uKCJuZXh0IikpKSB7CgkJCQkJY2FuLm9uYWN0aW9uLm5leHQoZXZlbnQsIGNhbikKCQkJCX0KCQkJfSwgdmlkZW8ucGxheSgpLCB2aWRlby5yZXF1ZXN0RnVsbHNjcmVlbigpCgkJfSkKCX0sCn0pCg==",
        "usr/volcanos/plugin/table.js": "",
        "usr/volcanos/publish/client/nodejs/proto.js": "dHJ5IHsgaWYgKHR5cGVvZihnbG9iYWwpID09IGxhbmcuT0JKRUNUKSB7IC8vIG5vZGVqcwoJVm9sY2Fub3MubWV0YS5fbG9hZCA9IGZ1bmN0aW9uKHVybCwgY2IpIHsgaWYgKCF1cmwpIHsgcmV0dXJuIH0KCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBpZiAoVm9sY2Fub3MubWV0YS5jYWNoZVt1cmxdKSB7IHJldHVybiBjYihWb2xjYW5vcy5tZXRhLmNhY2hlW3VybF0pIH0KCQkJc3dpdGNoICh1cmwuc3BsaXQoIj8iKVswXS5zcGxpdChpY2UuUFQpLnBvcCgpLnRvTG93ZXJDYXNlKCkpIHsKCQkJCWNhc2UgbmZzLkpTOgoJCQkJCXJlcXVpcmUocGF0aC5pc0Fic29sdXRlKHVybCk/IHVybDogcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICJ1c3Ivdm9sY2Fub3MiLCB1cmwpKQoJCQkJCWNiKFZvbGNhbm9zLm1ldGEuY2FjaGVbdXJsXSkKCQkJCQlicmVhawoJCQl9CgkJfSwgMTAwKQoJfQoKCVZvbGNhbm9zLm1ldGEuX2xvYWQoZ2xvYmFsLnBsdWdpbiwgZnVuY3Rpb24oY2FjaGUpIHsKCQlWb2xjYW5vcy5tZXRhLnZvbGNhbm8gPSAiLi9mcmFtZS5qcyIsIFZvbGNhbm9zKHtsaWJzOiBbCgkJCSIuL2xpYi9iYXNlLmpzIiwgIi4vbGliL2NvcmUuanMiLCAiLi9saWIvbWlzYy5qcyIsICIuL2xpYi9wYWdlLmpzIiwgLy8gIi4vbGliL3VzZXIuanMiLAoJCV0sIHBhbmVsczogW10sIHBsdWdpbjogW119LCBmdW5jdGlvbihjYW4pIHsgY2FuLmNvcmUuTGlzdChjYWNoZSwgZnVuY3Rpb24oaXRlbSkgeyBjYW5baXRlbS5fbmFtZV0gPSBpdGVtIH0pCgkJCVZvbGNhbm9zLm1ldGEuX2xvYWQoIi4vcHVibGlzaC9jbGllbnQvbm9kZWpzL3Byb3RvLmpzIiwgZnVuY3Rpb24oY2FjaGUpIHsKCQkJCWNhbi5jb3JlLkxpc3QoY2FjaGUsIGZ1bmN0aW9uKGl0ZW0pIHsgY2FuLmJhc2UuQ29weShjYW5baXRlbS5fbmFtZV18fHt9LCBpdGVtKSB9KQoJCQkJY2FuLm9uaW1wb3J0Ll9pbml0KGNhbiwgY2FuLnJlcXVlc3QoKSwgZnVuY3Rpb24obXNnKSB7IGNvbnNvbGUubG9nKGljZS5OTCkgfSwgbnVsbCkKCQkJfSkKCQl9KQoJfSkKfSB9IGNhdGNoIChlKSB7IGNvbnNvbGUubG9nKGUpIH0KCl9jYW5fbmFtZSA9ICIuL2ZyYW1lLmpzIgpWb2xjYW5vcygib25hcHBlbmQiLCB7aGVscDogIua4suafk+W8leaTjiIsCgl0YWJsZTogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCQl2YXIgbWF4ID0ge307IG1zZy5UYWJsZShmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGFycmF5KSB7CgkJCWZvciAodmFyIGsgaW4gdmFsdWUpIHsgaWYgKHZhbHVlW2tdLmxlbmd0aCA+IChtYXhba118fDApKSB7CgkJCQltYXhba10gPSB2YWx1ZVtrXS5sZW5ndGgKCQkJfSB9CgkJfSkKCgkJdmFyIGxpc3QgPSBbXTsgbXNnLlRhYmxlKGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgYXJyYXkpIHsgdmFyIGxpbmUgPSBbXQoJCQlpZiAoaW5kZXggPT0gMCkgewoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cuYXBwZW5kLmxlbmd0aDsgaSsrKSB7IGxpbmUucHVzaChtc2cuYXBwZW5kW2ldKQoJCQkJCWZvciAodmFyIGogPSAwOyBqIDw9IG1heFttc2cuYXBwZW5kW2ldXS1tc2cuYXBwZW5kW2ldLmxlbmd0aDsgaisrKSB7CgkJCQkJCWxpbmUucHVzaChpY2UuU1ApCgkJCQkJfQoJCQkJCWxpbmUucHVzaChpY2UuU1ApCgkJCQl9CgkJCQlsaXN0LnB1c2gobGluZS5qb2luKCIiKSkKCQkJfQoJCQlsaW5lID0gW107IGZvciAodmFyIGkgPSAwOyBpIDwgbXNnLmFwcGVuZC5sZW5ndGg7IGkrKykgeyB2YXIgayA9IG1zZy5hcHBlbmRbaV0KCQkJCWxpbmUucHVzaCh2YWx1ZVtrXSkKCQkJCWZvciAodmFyIGogPSAwOyBqIDw9IG1heFtrXS12YWx1ZVtrXTsgaisrKSB7CgkJCQkJbGluZS5wdXNoKGljZS5TUCkKCQkJCX0KCQkJCWxpbmUucHVzaChpY2UuU1ApCgkJCX0KCQkJbGlzdC5wdXNoKGxpbmUuam9pbigiIikpCgkJfSkKCQljb25zb2xlLmxvZyhsaXN0LmpvaW4oaWNlLk5MKSkKCX0sCglib2FyZDogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCQljb25zb2xlLmxvZyhtc2cuUmVzdWx0KCkpCgl9LAp9KQoK",

        "usr/intshell/LICENSE": "TUlUIExpY2Vuc2UKCkNvcHlyaWdodCAoYykgMjAyMCDnoIHnpZ4KClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsCmNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUKU09GVFdBUkUuCg==",
        "usr/intshell/README.md": "IyBpbnRzaGVsbApJTlRTSEVMTCBhbGlhcyBmb3IgaW4gdGhlIHNoZWxsLCBhIHBsdWdpbiBtYW5hZ2VyIHN5c3RlbQoKIyMgQWJvcnQKCklOVFNIRUxMIGFsbG93cyB5b3UgdG8uLi4KCi0ga2VlcCB0cmFjayBvZiBhbmQgY29uZmlndXJlIHlvdXIgcGx1Z2lucyByaWdodCBpbiB0aGUgLmlzaC9wbHVnZWQvCi0gaW5zdGFsbCBjb25maWd1cmVkIHBsdWdpbnMgKGEuay5hLiBzY3JpcHRzL2J1bmRsZSkKLSB1cGRhdGUgY29uZmlndXJlZCBwbHVnaW5zCi0gc2VhcmNoIGJ5IG5hbWUgYWxsIGF2YWlsYWJsZSBzY3JpcHRzCi0gY2xlYW4gdW51c2VkIHBsdWdpbnMgdXAKCklOVFNIRUxMIGF1dG9tYXRpY2FsbHkuLi4KCi0gY2xvbmUgdGhlIHJlcG9zIGlmIHRoZSBwbHVnaW5zIGRvbid0IGV4aXN0cwotIGxvYWQgdGhlIHNjcmlwdCBpZiB0aGUgcGx1Z2lucyBkb24ndCBzb3VyY2UKLSBtYW5hZ2VzIHRoZSBydW50aW1lIHBhdGggb2YgeW91ciBpbnN0YWxsZWQgc2NyaXB0cwotIHJlZ2VuZXJhdGVzIGhlbHAgdGFncyBhZnRlciBpbnN0YWxsaW5nIGFuZCB1cGRhdGluZwoKIyMgUXVpY2sgU3RhcnQKIyMjIDEuIERvd25sb2FkIElOVFNIRUxMCgpgYGBzaApnaXQgY2xvbmUgaHR0cHM6Ly9zaHlsaW51eC5jb20veC9pbnRzaGVsbC5naXQgfi8uaXNoCmBgYAoKIyMjIDIuIENvbmZpZ3VyZSBQbHVnaW5zOgpQdXQgdGhpcyBhdCB0aGUgYm90dG9tIG9mIHlvdXIgLmJhc2hyYyB0byB1c2UgSU5UU0hFTEwKYGBgc2gKaWYgWyAtZiB+Ly5pc2gvcGx1Zy5zaCBdICYmIHNvdXJjZSB+Ly5pc2gvcGx1Zy5zaDsgdGhlbgogICAgcmVxdWlyZSBjb25mLnNoCiAgICByZXF1aXJlIG1pc3Muc2gKICAgIyAuLi4gYWRkIG90aGVyIHBsdWdpbnMKZmkKCmBgYAoKIyMjIDMuIFVzZSBQbHVnaW5zOgoqKnVzZSBieSBtYW51YWwgbG9hZCoqCmBgYHNoCiQgcmVxdWlyZSBzaHlsaW51eC5jb20veC9pbnRzaGVsbCBzeXMvY2xpL2RhdGUuc2gKYGBgCgphZnRlciBsb2FkIGRhdGUuc2gsIHlvdSBjYWxsIGFsbCB0aGUgZnVuY3Rpb24gZGlyZWN0bHkKYGBgc2gKJCBpc2hfc3lzX2RhdGUKMjAyMi0wNy0wMSAxNTo1MDozMApgYGAK",
        "usr/intshell/app/app.sh": "IyEvYmluL3NoCgo=",
        "usr/intshell/app/cat.sh": "IyEvYmluL2Jhc2gKCmNhdCAkMQo=",
        "usr/intshell/conf.sh": "IyEvYmluL3NoCgpyZXF1aXJlIHN5cy9zeXMuc2gKcmVxdWlyZSBkZXYvZGV2LnNoCnJlcXVpcmUgYXBwL2FwcC5zaAoK",
        "usr/intshell/dev/dev.sh": "IyEvYmluL3NoCgpyZXF1aXJlIGRldi9naXQvZ2l0LnNoCnJlcXVpcmUgZGV2L3ZpbS92aW0uc2gKcmVxdWlyZSBkZXYvdG11eC90bXV4LnNoCgo=",
        "usr/intshell/dev/git/git.sh": "IyEvYmluL2Jhc2gKCmlzaF9kZXZfZ2l0X3ByZXBhcmUoKSB7CiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIGFsaWFzLnQgdGFnCiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIGFsaWFzLnMgc3RhdHVzCiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIGFsaWFzLmIgYnJhbmNoCiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIGFsaWFzLmwgImxvZyAtLW9uZWxpbmUgLS1kZWNvcmF0ZSIKICAgIGdpdCBjb25maWcgLS1nbG9iYWwgaW5pdC5kZWZhdWx0QnJhbmNoIG1hc3RlcgoKICAgIGdpdCBjb25maWcgLS1nbG9iYWwgY29sb3IudWkgYWx3YXlzCiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIGNvcmUucXVvdGVwYXRoIGZhbHNlCiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIGNyZWRlbnRpYWwuaGVscGVyIHN0b3JlCiAgICBnaXQgY29uZmlnIC0tZ2xvYmFsIHB1c2guZGVmYXVsdCBzaW1wbGUKICAgIGdpdCBjb25maWcgLS1nbG9iYWwgcHVsbC5mZiBvbmx5Cn0KaXNoX2Rldl9naXRfY29uZmlnKCkgewogICAgaXNoX3N5c19kZXZfcmVxdWVzdAp9Cg==",
        "usr/intshell/dev/tmux/local.sh": "IyEvYmluL2Jhc2gKCnRtdXhfY21kPSJ0bXV4IC1TIGJpbi90bXV4LnNvY2tldCAtZiBldGMvdG11eC5jb25mIgpzZXNzaW9uPW1pc3MgJiYgWyAtcyAiJDEiIF0gJiYgc2Vzc2lvbj0kMSAmJiBzaGlmdAoKaWYgJHRtdXhfY21kIGhhcy1zZXNzaW9uIC10ICRzZXNzaW9uOyB0aGVuCiAgICAkdG11eF9jbWQgYXR0YWNoIC10ICRzZXNzaW9uCmVsc2UKICAgICR0bXV4X2NtZCBuZXctc2Vzc2lvbiAtcyAkc2Vzc2lvbgpmaQo=",
        "usr/intshell/dev/tmux/tmux-1.8.conf": "YmluZCBDLW0gY29tbWFuZC1wcm9tcHQgLXAgIm1vdmUgdG86IiAic3dhcC1wYW5lIC1zIC4gLXQgJSUiCmJpbmQgQy11IGNvbW1hbmQtcHJvbXB0IC1wICJtb3ZlIHRvOiIgIm1vdmUtcGFuZSAtdiAtdCAlJSIKYmluZCBDLXYgY29tbWFuZC1wcm9tcHQgLXAgIm1vdmUgdG86IiAibW92ZS1wYW5lIC1oIC10ICUlIgoKc2V0IC1nIG1vdXNlLXNlbGVjdC13aW5kb3cgb24Kc2V0IC1nIG1vdXNlLXNlbGVjdC1wYW5lIG9uCnNldCAtZyBtb3VzZS1yZXNpemUtcGFuZSBvbgpzZXQgLWcgbW91c2UtdXRmOCBvbgpzZXQgLWcgbW9kZS1tb3VzZSBvbgoK",
        "usr/intshell/dev/tmux/tmux.conf": "IyDphY3nva7nrqHnkIYge3t7CnNldCAtZyBwcmVmaXggQy1zCgpzZXQgLWcgYmFzZS1pbmRleCAxCnNldCAtZyBwYW5lLWJhc2UtaW5kZXggMQpzZXQgLWcgcmVudW1iZXItd2luZG93cyBvbgoKc2V0IC1nIGRpc3BsYXktdGltZSA1MDAwCnNldCAtZyBkaXNwbGF5LXBhbmVzLXRpbWUgNTAwMApzZXQgLWcgaGlzdG9yeS1saW1pdCAzMDAwCnNldCAtZyBtb2RlLWtleXMgdmkKCnNldCAtZ3cgb3RoZXItcGFuZS13aWR0aCA2MApzZXQgLWd3IG90aGVyLXBhbmUtaGVpZ2h0IDE1CgojIOagh+mimOagjwpzZXQgLWcgc2V0LXRpdGxlcyBvbgpzZXQgLWcgc2V0LXRpdGxlcy1zdHJpbmcgIiNoLyNTOiNXLiNQIgoKIyDnirbmgIHmoI8Kc2V0IC1nIHN0YXR1cy1iZyBibHVlCnNldCAtZyBzdGF0dXMtZmcgd2hpdGUKc2V0IC1nIGFsbG93LXJlbmFtZSBvZmYKc2V0IC1nIHN0YXR1cy1pbnRlcnZhbCAxCnNldCAtZyBzdGF0dXMtbGVmdC1sZW5ndGggNjAKc2V0IC1nIHN0YXR1cy1sZWZ0ICIjW2JnPXJlZCBmZz13aGl0ZV1cIFsjaC8jU11cICNbYmc9eWVsbG93IGZnPWJsYWNrXVwgW11cICNbYmc9cmVkXSIKc2V0IC1nIHN0YXR1cy1yaWdodCAiI1tiZz1yZWRdXCBbIyhkYXRlICcrJVktJW0tJWQgJUg6JU06JVMnKV1cICIKc2V0IC1nIHN0YXR1cy1yaWdodC1sZW5ndGggNjAKCnNldCAtZ3cgd2luZG93LXN0YXR1cy1mb3JtYXQgIiNbYmc9Ymx1ZSBmZz13aGl0ZV1cIFsjSTojVyNGXVwgIgpzZXQgLWd3IHdpbmRvdy1zdGF0dXMtY3VycmVudC1mb3JtYXQgIiNbYmc9cmVkIGZnPXdoaXRlXVwgWyNJOiNXI0ZdXCAiCiMgfX19CiMg5Lya6K+d566h55CGe3t7CmJpbmQgcSBjb25maXJtLWJlZm9yZSAiZGV0YWNoLWNsaWVudCIKIyB9fX0KIyDnqpflj6PnrqHnkIZ7e3sKYmluZCBiIGJyZWFrLXBhbmUKYmluZCBjIG5ldy13aW5kb3cKYmluZCBlIGNvbW1hbmQtcHJvbXB0IC1wICJ3aW5kb3cgbmV3IG5hbWU6IiAicmVuYW1lLXdpbmRvdyAnJSUnIgpiaW5kIEIgY29tbWFuZC1wcm9tcHQgLXAgInRhcmdldCB3aW5kb3c6IiAiam9pbi1wYW5lIC12IC10ICUlIgoKYmluZCBwIHByZXZpb3VzLXdpbmRvdwpiaW5kIG4gbmV4dC13aW5kb3cKYmluZCBvIGxhc3Qtd2luZG93CiMgfX19CiMg6Z2i5p2/566h55CGe3t7CmJpbmQgaSBkaXNwbGF5LXBhbmVzCmJpbmQgeCBjb25maXJtLWJlZm9yZSAtcCAia2lsbC1wYW5lICNQPyAoeS9uKSIga2lsbC1wYW5lCmJpbmQgeiByZXNpemUtcGFuZSAtWgpiaW5kIHYgc3BsaXQtd2luZG93IC1oCmJpbmQgdSBzcGxpdC13aW5kb3cKCmJpbmQgaCBzZWxlY3QtcGFuZSAtTApiaW5kIGwgc2VsZWN0LXBhbmUgLVIKYmluZCBqIHNlbGVjdC1wYW5lIC1ECmJpbmQgayBzZWxlY3QtcGFuZSAtVQoKYmluZCBDLWcgc2VsZWN0LWxheW91IHRpbGVkCmJpbmQgQy15IHNlbGVjdC1sYXlvdSBtYWluLXZlcnRpY2FsCmJpbmQgQy10IHNlbGVjdC1sYXlvdSBtYWluLWhvcml6b250YWwKYmluZCBDLWggY29tbWFuZC1wcm9tcHQgLXAgInNpemU6IiAicmVzaXplLXBhbmUgLUwgJSUiCmJpbmQgQy1sIGNvbW1hbmQtcHJvbXB0IC1wICJzaXplOiIgInJlc2l6ZS1wYW5lIC1SICUlIgpiaW5kIEMtaiBjb21tYW5kLXByb21wdCAtcCAic2l6ZToiICJyZXNpemUtcGFuZSAtRCAlJSIKYmluZCBDLWsgY29tbWFuZC1wcm9tcHQgLXAgInNpemU6IiAicmVzaXplLXBhbmUgLVUgJSUiCmJpbmQgQy1vIGNvbmZpcm0tYmVmb3JlIC1wICJraWxsIGFsbCBvdGhlciBwYW5lKHkvbik/IiAia2lsbC1wYW5lIC1hIgojIH19fQojIOe8k+WtmOeuoeeQhnt7ewpiaW5kIEMtcyBjb3B5LW1vZGUKCmJpbmQgciBjaG9vc2UtYnVmZmVyCmJpbmQgYSBwYXN0ZS1idWZmZXIKIyB9fX0KIyDlkb3ku6TnrqHnkIZ7e3sKYmluZCBDLWkgcnVuLXNoZWxsICJzb3VyY2UgYmluL3NlbmQtaW50c2hlbGwuc2giCmJpbmQgU3BhY2UgY29tbWFuZC1wcm9tcHQKIyB9fX0KCmlmLXNoZWxsICJbIC1lIH4vLnRtdXhfbG9jYWwgXSIgInNvdXJjZS1maWxlIH4vLnRtdXhfbG9jYWwiCgo=",
        "usr/intshell/dev/tmux/tmux.sh": "IyEvYmluL2Jhc2gKCmlzaF9kZXZfdG11eF9wcmVwYXJlKCkgewogICAgaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly50bXV4LmNvbmYgJFBXRC91c3IvaW50c2hlbGwvZGV2L3RtdXgvdG11eC5jb25mCiAgICBpc2hfc3lzX2xpbmtfY3JlYXRlIH4vLnRtdXhfbG9jYWwgJFBXRC91c3IvaW50c2hlbGwvZGV2L3RtdXgvdG11eF9sb2NhbC5jb25mCn0KaXNoX2Rldl90bXV4X3Nlc3Npb24oKSB7CiAgICBsb2NhbCB0bXV4X2NtZD0idG11eCAtUyBiaW4vdG11eC5zb2NrZXQgLWYgZXRjL3RtdXguY29uZiIKICAgIGxvY2FsIHNlc3Npb249bWlzcyAmJiBbIC1zICIkMSIgXSAmJiBzZXNzaW9uPSQxICYmIHNoaWZ0CgogICAgaWYgJHRtdXhfY21kIGhhcy1zZXNzaW9uIC10ICRzZXNzaW9uOyB0aGVuCiAgICAgICAgJHRtdXhfY21kIGF0dGFjaCAtdCAkc2Vzc2lvbgogICAgZWxzZQogICAgICAgICR0bXV4X2NtZCBuZXctc2Vzc2lvbiAtcyAkc2Vzc2lvbgogICAgZmkKfQo=",
        "usr/intshell/dev/tmux/tmux_local.conf": "YmluZCBjIG5ldy13aW5kb3cgLWMgIiN7cGFuZV9jdXJyZW50X3BhdGh9IgoKYmluZCB1IHNwbGl0LXdpbmRvdyAtYyAiI3twYW5lX2N1cnJlbnRfcGF0aH0iCmJpbmQgdiBzcGxpdC13aW5kb3cgLWggLWMgIiN7cGFuZV9jdXJyZW50X3BhdGh9IgpiaW5kIFUgc3BsaXQtd2luZG93IC1mIC1jICIje3BhbmVfY3VycmVudF9wYXRofSIKYmluZCBWIHNwbGl0LXdpbmRvdyAtZiAtaCAtYyAiI3twYW5lX2N1cnJlbnRfcGF0aH0iCgpiaW5kIEMtbSBkaXNwbGF5LXBhbmVzICJzd2FwLXBhbmUgLXQgJSUiCmJpbmQgQy11IGRpc3BsYXktcGFuZXMgIm1vdmUtcGFuZSAtdiAtdCAlJSIKYmluZCBDLXYgZGlzcGxheS1wYW5lcyAibW92ZS1wYW5lIC1oIC10ICUlIgoKc2V0IC1nIG1vdXNlIG9uCgo=",
        "usr/intshell/dev/vim/auto.vim": "",
        "usr/intshell/dev/vim/css.vim": "aGlnaGxpZ2h0IGNzc0tleSAgICBjdGVybWZnPXllbGxvdwoKc3ludGF4IG1hdGNoIGlzaEtleSAicGFnZSIKc3ludGF4IG1hdGNoIGlzaEtleSAidmlldyIK",
        "usr/intshell/dev/vim/go.vim": "c3ludGF4IG1hdGNoIENvbW1lbnQgIiMuKiQiCnN5bnRheCBtYXRjaCBDb21tZW50ICJcPE5hbWU6IFwiW15cIl0qXCIiCnN5bnRheCBtYXRjaCBDb21tZW50ICJcPEhlbHA6IFwiW15cIl0qXCIiCgpoaWdobGlnaHQga2l0VHlwZSAgICBjdGVybWZnPWxpZ2h0Z3JlZW4Kc3ludGF4IG1hdGNoIGtpdFR5cGUgIlw8QW55XD4iCnN5bnRheCBtYXRjaCBraXRUeXBlICJcPE1hcFw+IgpzeW50YXggbWF0Y2gga2l0VHlwZSAiXDxNYXBzXD4iCnN5bnRheCBtYXRjaCBraXRUeXBlICJcPExpc3RcPiIKc3ludGF4IG1hdGNoIGtpdFR5cGUgIlw8SGFuZGxlclw+IgpzeW50YXggbWF0Y2gga2l0VHlwZSAiXDxDb21tYW5kc1w+IgpzeW50YXggbWF0Y2gga2l0VHlwZSAiXDxBY3Rpb25zXD4iCgpoaWdobGlnaHQga2l0Q29uc3QgICAgY3Rlcm1mZz15ZWxsb3cKc3ludGF4IG1hdGNoIGtpdENvbnN0ICJcPGtpdFwuW2EtejAtOUEtWl8uXSoiCgpoaWdobGlnaHQgbXNnQ29uc3QgICAgY3Rlcm1mZz1jeWFuCnN5bnRheCBtYXRjaCBtc2dDb25zdCAiXDxpY2VcLlthLXowLTlBLVpfLl0qIgpzeW50YXggbWF0Y2ggbXNnQ29uc3QgIlw8bXNnXC5bYS16MC05QS1aXy5dKiIKc3ludGF4IG1hdGNoIG1zZ0NvbnN0ICJcPG1cLlthLXowLTlBLVpfLl0qIgoK",
        "usr/intshell/dev/vim/iml.vim": "c3ludGF4IG1hdGNoIENvbW1lbnQgIiMuKiQiCnN5bnRheCBtYXRjaCBDb21tZW50ICJcIlteXCJdKlwiIgoKaGlnaGxpZ2h0IHNoeVJpdmVyICAgIGN0ZXJtZmc9cmVkCnN5bnRheCBtYXRjaCBzaHlSaXZlciAiXlthLXpBLVowLTkuXVwrIgoKaGlnaGxpZ2h0IHNoeVN0b3JtICAgIGN0ZXJtZmc9eWVsbG93CnN5bnRheCBtYXRjaCBzaHlTdG9ybSAiXglbYS16QS1aMC05Oi5fXVwrIgoKaGlnaGxpZ2h0IHNoeUNvbW1hbmQgICAgY3Rlcm1mZz1ncmVlbgpzeW50YXggbWF0Y2ggc2h5Q29tbWFuZCAiXgkJW2EtekEtWjAtOTouXy8tXVwrIgoKaGlnaGxpZ2h0IHNoeUFyZ3MgICAgY3Rlcm1mZz1jeWFuCnN5bnRheCBtYXRjaCBzaHlBcmdzICJuYW1lIgpzeW50YXggbWF0Y2ggc2h5QXJncyAiYXJncyIKCg==",
        "usr/intshell/dev/vim/javascript.vim": "c3ludGF4IG1hdGNoIENvbW1lbnQgIlw8c2h5KFwiW15cIl0qXCIiCnN5bnRheCBtYXRjaCBDb21tZW50ICJcPG5hbWU6IFwiW15cIl0qXCIiCnN5bnRheCBtYXRjaCBDb21tZW50ICJcPGhlbHA6IFwiW15cIl0qXCIiCnN5bnRheCBtYXRjaCBDb21tZW50ICJcPFZvbGNhbm9zKFteLHsgXSoiCgpoaWdobGlnaHQgY2FuQ29uc3QgICAgY3Rlcm1mZz15ZWxsb3cKc3ludGF4IG1hdGNoIGNhbkNvbnN0ICJcPGNhblw+IgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8c3ViXD4iCnN5bnRheCBtYXRjaCBjYW5Db25zdCAiXDxtc2dcPiIKc3ludGF4IG1hdGNoIGNhbkNvbnN0ICJcPHJlc1w+IgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8dGFyZ2V0XD4iCgpoaWdobGlnaHQga2l0Q29uc3QgICAgY3Rlcm1mZz15ZWxsb3cKc3ludGF4IG1hdGNoIGtpdENvbnN0ICJcPGtpdFwuW2EtejAtOUEtWl8uXSoiCgoKaGlnaGxpZ2h0IG1zZ0NvbnN0ICAgIGN0ZXJtZmc9Y3lhbgpzeW50YXggbWF0Y2ggbXNnQ29uc3QgIlw8bVwuW2EtejAtOUEtWl8uXSoiCnN5bnRheCBtYXRjaCBtc2dDb25zdCAiXDxtc2dcLlthLXowLTlBLVpfLl0qIgpzeW50YXggbWF0Y2ggbXNnQ29uc3QgIlw8cmVzXC5bYS16MC05QS1aXy5dKiIKc3ludGF4IG1hdGNoIG1zZ0NvbnN0ICJcPGNhblwuW2EtejAtOUEtWl9dKiIKc3ludGF4IG1hdGNoIG1zZ0NvbnN0ICJcPHN1YlwuW2EtejAtOUEtWl8uXSoiCnN5bnRheCBtYXRjaCBtc2dDb25zdCAiXDxjYlw+IgpzeW50YXggbWF0Y2ggbXNnQ29uc3QgIlw8Y2JzXD4iCgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8Y2FuXC5iYXNlIgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8Y2FuXC5jb3JlIgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8Y2FuXC5taXNjIgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8Y2FuXC5wYWdlIgpzeW50YXggbWF0Y2ggY2FuQ29uc3QgIlw8Y2FuXC51c2VyIgoK",
        "usr/intshell/dev/vim/plug.vim": "",
        "usr/intshell/dev/vim/sh.vim": "aGlnaGxpZ2h0IGlzaEtleSAgICBjdGVybWZnPXllbGxvdwpoaWdobGlnaHQgaXNoRnVuYyAgICBjdGVybWZnPWN5YW4KCnN5bnRheCBtYXRjaCBpc2hLZXkgIm1ha2UiCnN5bnRheCBtYXRjaCBpc2hLZXkgInJlcXVpcmUiCnN5bnRheCBtYXRjaCBpc2hGdW5jICJpc2hfbWlzc19wcmVwYXJlIgpzeW50YXggbWF0Y2ggaXNoRnVuYyAiaXNoX21pc3NfbWFrZSIKCnN5bnRheCBtYXRjaCBpc2hLZXkgImxvY2FsIgpzeW50YXggbWF0Y2ggaXNoS2V5ICJ3aGl0ZSIKCnNldCBmb2xkbWV0aG9kPW1hcmtlcgpzZXQgZm9sZG1hcmtlcj17LH0KCg==",
        "usr/intshell/dev/vim/shy.vim": "CnNldCBmb2xkbWV0aG9kPWluZGVudApzeW50YXggbWF0Y2ggQ29tbWVudAkgICAgIiMuKiQiCnN5bnRheCBtYXRjaCBDb21tZW50CSAgICAiXCJbXlwiXSpcIiIKCmhpZ2hsaWdodCBzaHlTdHJpbmcgICAgIGN0ZXJtZmc9bWFnZW50YQpzeW50YXggcmVnaW9uIHNoeVN0cmluZwlzdGFydD0iYCIgZW5kPSJgIgpzeW50YXggbWF0Y2ggc2h5U3RyaW5nCSAgICAiXGBbXlxgXSpcYCIKc3ludGF4IG1hdGNoIHNoeVN0cmluZwkgICAgImZhbHNlIgpzeW50YXggbWF0Y2ggc2h5U3RyaW5nCSAgICAidHJ1ZSIKCmhpZ2hsaWdodCBzaHlDb250ZXh0ICAgIGN0ZXJtZmc9cmVkCnN5bnRheCBtYXRjaCBzaHlDb250ZXh0ICJcflthLXpcLl1cKyIKCmhpZ2hsaWdodCBzaHlDb21tYW5kICAgIGN0ZXJtZmc9Z3JlZW4Kc3ludGF4IG1hdGNoIHNoeUNvbW1hbmQgIl4gICAgW2EtekEtWjAtOTouX11cKyIKc3ludGF4IG1hdGNoIHNoeUNvbW1hbmQgIl5cdFthLXpBLVowLTk6Ll9dXCsiCnN5bnRheCBtYXRjaCBzaHlDb21tYW5kICJeW2EtekEtWjAtOTouX11cKyIKCmhpZ2hsaWdodCBzaHlDb25maWcgICAgY3Rlcm1mZz15ZWxsb3cKc3ludGF4IG1hdGNoIHNoeUNvbmZpZyAiXiAgICBjb25maWciCnN5bnRheCBtYXRjaCBzaHlDb25maWcgIl5zb3VyY2UiCnN5bnRheCBtYXRjaCBzaHlDb25maWcgIl5yZXR1cm4iCgoKaGlnaGxpZ2h0IHNoeVRpdGxlICAgIGN0ZXJtYmc9ZGFya3JlZCBjdGVybWZnPXdoaXRlCmhpZ2hsaWdodCBzaHlTZWN0aW9uICAgIGN0ZXJtYmc9ZGFya2dyZWVuIGN0ZXJtZmc9d2hpdGUKc3ludGF4IG1hdGNoIHNoeVRpdGxlICJedGl0bGUiCnN5bnRheCBtYXRjaCBzaHlUaXRsZSAiXmNoYXB0ZXIiCnN5bnRheCBtYXRjaCBzaHlTZWN0aW9uICJec2VjdGlvbiIKCg==",
        "usr/intshell/dev/vim/vim.sh": "IyEvYmluL2Jhc2gKCmlzaF9kZXZfdmltX3ByZXBhcmUoKSB7CiAgICBsb2NhbCBmcm9tPSRQV0QvdXNyL2ludHNoZWxsL2Rldi92aW0KCiAgICBta2RpciAtcCB+Ly52aW0vYXV0b2xvYWQKICAgIGlzaF9zeXNfbGlua19jcmVhdGUgfi8udmltL2F1dG9sb2FkL3BsdWcudmltICRmcm9tL3BsdWcudmltCiAgICBpc2hfc3lzX2xpbmtfY3JlYXRlIH4vLnZpbS9hdXRvbG9hZC9hdXRvLnZpbSAkZnJvbS9hdXRvLnZpbQoKICAgIG1rZGlyIC1wIH4vLnZpbS9zeW50YXgKICAgIGlzaF9zeXNfbGlua19jcmVhdGUgfi8udmltL3N5bnRheC9zaC52aW0gJGZyb20vc2gudmltCiAgICBpc2hfc3lzX2xpbmtfY3JlYXRlIH4vLnZpbS9zeW50YXgvc2h5LnZpbSAkZnJvbS9zaHkudmltCiAgICBpc2hfc3lzX2xpbmtfY3JlYXRlIH4vLnZpbS9zeW50YXgvZ28udmltICRmcm9tL2dvLnZpbQogICAgaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly52aW0vc3ludGF4L2ltbC52aW0gJGZyb20vaW1sLnZpbQogICAgaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly52aW0vc3ludGF4L3ptbC52aW0gJGZyb20vem1sLnZpbQogICAgaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly52aW0vc3ludGF4L2Nzcy52aW0gJGZyb20vY3NzLnZpbQogICAgaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly52aW0vc3ludGF4L2phdmFzY3JpcHQudmltICRmcm9tL2phdmFzY3JpcHQudmltCgogICAgaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly52aW1yYyAkZnJvbS92aW1yYwogICAgdmltIC1jIFBsdWdJbnN0YWxsIC1jIGV4aXQgLWMgZXhpdAogICAgdmltIC1jIEdvSW5zdGFsbEJpbmFyaWVzIC1jIGV4aXQgLWMgZXhpdAp9CmlzaF9kZXZfdmltX2NsZWFyKCkgewogICAgZm9yIHBhdGggaW4gdm9sY2Fub3MgbGVhcm5pbmcgaWNlYmVyZ3MgdG9vbGtpdHMgaW50c2hlbGw7IGRvCiAgICAgICAgZm9yIGZpbGUgaW4gYGZpbmQgdXNyLyRwYXRoLyAtbmFtZSAiKnN3cCJgOyBkbwogICAgICAgICAgICBpc2hfbG9nX2RlYnVnICJybSAkZmlsZSI7IHJtICRmaWxlCiAgICAgICAgZG9uZQogICAgZG9uZQoKICAgIGZvciBmaWxlIGluIGBmaW5kIC4vIC1uYW1lICIqc3dwImA7IGRvCiAgICAgICAgaXNoX2xvZ19kZWJ1ZyAicm0gJGZpbGUiOyBybSAiJGZpbGUiCiAgICBkb25lCn0KCg==",
        "usr/intshell/dev/vim/vimrc": "IiDova/ku7blronoo4Uge3t7CiIkIGN1cmwgLWZMbyB+Ly52aW0vYXV0b2xvYWQvcGx1Zy52aW0gLS1jcmVhdGUtZGlycyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vanVuZWd1bm4vdmltLXBsdWcvbWFzdGVyL3BsdWcudmltCiIKIjEuIOWuieijhXZpbeWQhOenjeaPkuS7tgoiOlBsdWdJbnN0YWxsCiIKIjIuIOWuieijhWdv5ZCE56eN5o+S5Lu2CiI6R29JbnN0YWxsQmluYXJpZXMKIn19fQoiIOaPkuS7tuWIl+ihqCJ7e3sKaWYgZmlsZXJlYWRhYmxlKGV4cGFuZCgifi8udmltL2F1dG9sb2FkL3BsdWcudmltIikpCgljYWxsIHBsdWcjYmVnaW4oKQoJUGx1ZyAnZ2NtdC90YWJvby52aW0nCglzZXQgc2Vzc2lvbm9wdGlvbnMrPXRhYnBhZ2VzLGdsb2JhbHMKCglQbHVnICdraWVuL2N0cmxwLnZpbScKCWxldCBnOmN0cmxwX2NtZD0nQ3RybFBCdWZmZXInCgoJUGx1ZyAndmltLWFpcmxpbmUvdmltLWFpcmxpbmUnCglQbHVnICdhaXJibGFkZS92aW0tZ2l0Z3V0dGVyJwoJUGx1ZyAndHBvcGUvdmltLWZ1Z2l0aXZlJwoKCVBsdWcgJ21hanV0c3VzaGkvdGFnYmFyJwoJUGx1ZyAnc2Nyb29sb29zZS9uZXJkdHJlZScKCWxldCBnOk5FUkRUcmVlV2luUG9zPSJsZWZ0IgoJbGV0IGc6TkVSRFRyZWVXaW5TaXplPTIwCgoJIiBQbHVnICdwb3N2YS92aW0tdnVlJwoJUGx1ZyAnZmF0aWgvdmltLWdvJwoJUGx1ZyAnY2hyNC9uZ2lueC52aW0nCglQbHVnICdvdGhyZWUvaHRtbDUudmltJwoJUGx1ZyAndmltLXNjcmlwdHMvcHl0aG9uLnZpbScKCVBsdWcgJ3BsYXN0aWNib3kvdmltLW1hcmtkb3duJwoKCVBsdWcgJ21iYmlsbC9lY2hvZnVuYycKCVBsdWcgJ3ZpbS1zY3JpcHRzL3RDb21tZW50JwoJUGx1ZyAndmltLXN5bnRhc3RpYy9zeW50YXN0aWMnCglQbHVnICd2aW0tc2NyaXB0cy9tYXRyaXgudmltLS1ZYW5nJwoJY2FsbCBwbHVnI2VuZCgpCmVuZGlmCiJ9fX0KIiDln7rmnKzphY3nva4ie3t7CnNldCBjYz0xMjAKc2V0IG5vd3JhcApzZXQgbnVtYmVyCnNldCByZWxhdGl2ZW51bWJlcgpzZXQgY3Vyc29ybGluZQpzZXQgY3Vyc29yY29sdW1uCnNldCBzY3JvbGxvZmY9MwpzZXQgbW91c2U9YQoKIiDnvJPlrZgKc2V0IGhpZGRlbgpzZXQgYXV0b3dyaXRlCnNldCBlbmNvZGluZz11dGYtOAoKIiDmkJzntKIKc2V0IGhsc2VhcmNoCnNldCBpbmNzZWFyY2gKc2V0IG5vd3JhcHNjYW4Kc2V0IHNtYXJ0Y2FzZQpzZXQgaWdub3JlY2FzZQpzZXQgc2hvd21hdGNoCnNldCBtYXRjaHRpbWU9MgoKIiDnvKnov5sKc2V0IGNpbmRlbnQKIiBzZXQgZXhwYW5kdGFiCnNldCB0YWJzdG9wPTQKc2V0IHNoaWZ0d2lkdGg9NApzZXQgYmFja3NwYWNlPWluZGVudCxlb2wsc3RhcnQKCiIg5oqY5Y+gCnNldCBmb2xkZW5hYmxlCnNldCBmb2xkbWV0aG9kPW1hcmtlcgoKIiDmjInplK4Kbm5vcmVtYXAgPFNwYWNlPiA6Cm5ub3JlbWFwIDxDLUg+IDxDLVc+aApubm9yZW1hcCA8Qy1KPiA8Qy1XPmoKbm5vcmVtYXAgPEMtSz4gPEMtVz5rCm5ub3JlbWFwIDxDLUw+IDxDLVc+bAoKbm5vcmVtYXAgPEYyPiA6TkVSRFRyZWVUb2dnbGU8Q1I+Cm5ub3JlbWFwIDxGMz4gOlRhZ2JhclRvZ2dsZTxDUj4KIn19fQoiIOe8lueoi+mFjee9rnt7ewpzZXQga2V5d29yZHByZz1tYW5cIC1hCgpmdW5jdGlvbiEgQ29uZmlnKHR5cGUpCglpZiBhOnR5cGUgPT0gImNvbmYiCgkJc2V0IGZpbGV0eXBlPW5naW54CgllbHNlaWYgYTp0eXBlID09ICJ4bWwiCgkJc2V0IGZpbGV0eXBlPXhtbAoJZWxzZWlmIGE6dHlwZSA9PSAidnVlIgoJCXNldCBzaGlmdHdpZHRoPTIKCQlzZXQgdGFic3RvcD0yCgllbmRpZgplbmRmdW5jdGlvbgoKZnVuYyEgQ29uZmlncygpCglsZXQgZXh0ID0gZXhwYW5kKCIlOmUiKQoJaWYgZXh0ID09ICJnbyIKCQlzZXQgZm9sZG5lc3RtYXg9MwoJCXNldCBmb2xkbWV0aG9kPXN5bnRheAoJCWxldCBnOnRhZ2Jhcl9jdGFnc19iaW4gPSAiZ290YWdzIgoJCW5ub3JlbWFwIDxDLVs+IDpHb0ltcGxlbWVudHM8Q1I+CgoJCWxldCBnOmdvX3VwZGF0ZXRpbWUgPSAzMDAKCQkiIGxldCBnOmdvX2F1dG9fc2FtZWlkcyA9IDAKCQlsZXQgZzpnb19hdXRvX3R5cGVfaW5mbyA9IDEKCQlsZXQgZzpnb192ZXJzaW9uX3dhcm5pbmcgPSAwCgkJCgkJbGV0IGc6Z29fZm10X2F1dG9zYXZlID0gMQoJCWxldCBnOmdvX2ltcG9ydHNfYXV0b3NhdmUgPSAxCgkJIiBsZXQgZzpnb19tZXRhbGludGVyX2F1dG9zYXZlID0gMQoJCQoJCWxldCBnOmdvX2hpZ2hsaWdodF90eXBlcyA9IDEKCQlsZXQgZzpnb19oaWdobGlnaHRfZnVuY3Rpb25zID0gMQoJCWxldCBnOmdvX2hpZ2hsaWdodF9vcGVyYXRvcnMgPSAxCgkJbGV0IGc6Z29faGlnaGxpZ2h0X3NwYWNlX3RhYl9lcnJvciA9IDEKCQlsZXQgZzpnb19oaWdobGlnaHRfdHJhaWxpbmdfd2hpdGVzcGFjZV9lcnJvciA9IDEKCQkKCQkiIGF1dG9jbWQgQnVmV3JpdGVQcmUgKi5nbyBHb0ZtdAoJCSIgYXV0b2NtZCBCdWZXcml0ZVByZSAqLmdvIEdvVmV0CgkJIiBhdXRvY21kIEJ1ZldyaXRlUHJlICouZ28gR29MaW50CgkJIiBhdXRvY21kIEJ1ZldyaXRlUHJlICouZ28gR29JbXBvcnRzCgoJZWxzZWlmIGV4dCA9PSAic2h5IgoJCXNldCBmaWxldHlwZT1zaHkKCQlzZXQgdGFic3RvcD0yCgkJc2V0IHNoaWZ0d2lkdGg9MgoJCXNldCBjb21tZW50c3RyaW5nPSMlcwoKCWVsc2VpZiBleHQgPT0gImpzb24iCgkJc2V0IGZvbGRtZXRob2Q9c3ludGF4CgoJZWxzZWlmIGV4dCA9PSAianMiCgkJc2V0IGZpbGV0eXBlPWphdmFzY3JpcHQKCQlzZXQgZm9sZG1ldGhvZD1tYXJrZXIKCQlzZXQgZm9sZG1hcmtlcj17LH0KCQlsZXQgamF2YVNjcmlwdF9mb2xkPTEKCQlzb3VyY2Ugfi8udmltL3N5bnRheC9qYXZhc2NyaXB0LnZpbQoKCWVsc2VpZiBleHQgPT0gImNzcyIKCQlzZXQgZmlsZXR5cGU9Y3NzCgkJc2V0IGZvbGRtZXRob2Q9bWFya2VyCgkJc2V0IGZvbGRtYXJrZXI9eyx9CgkJc2V0IHNoaWZ0d2lkdGg9MgoJCXNldCB0YWJzdG9wPTIKCgllbHNlaWYgZXh0ID09ICJ6bWwiCgkJc2V0IGZpbGV0eXBlPXptbAoJCXNldCB0YWJzdG9wPTIKCQlzZXQgc2hpZnR3aWR0aD0yCgkJc2V0IGNvbW1lbnRzdHJpbmc9IyVzCgkJIiBzZXQgc21hcnRpbmRlbnQKCQkiIHNldCBpbmRlbnRleHByPUdldEJsb2NrSW5kZW50KCkKCgllbHNlaWYgZXh0ID09ICJpbWwiCgkJc2V0IGZpbGV0eXBlPWltbAoJCXNldCB0YWJzdG9wPTIKCQlzZXQgc2hpZnR3aWR0aD0yCgkJc2V0IGNvbW1lbnRzdHJpbmc9IyVzCgoJZWxzZWlmIGV4dCA9PSAieWFtbCIKCQlzZXQgc2hpZnR3aWR0aD0yCgkJc2V0IHRhYnN0b3A9MgoKCWVsc2VpZiBleHQgPT0gInByb3RvIgoJCXNldCBmb2xkbWFya2VyPXssfQoJCXNldCBzaGlmdHdpZHRoPTIKCQlzZXQgdGFic3RvcD0yCgkJc2V0IGV4cGFuZHRhYgoKCWVsc2VpZiBleHQgPT0gInNxbCIKCQlzZXQgZm9sZG1hcmtlcj0oLCkKCQlzZXQgc2hpZnR3aWR0aD0yCgkJc2V0IHRhYnN0b3A9MgoJCXNldCBleHBhbmR0YWIKCgllbHNlaWYgZXh0ID09ICJncm9vdnkiCgkJc2V0IGV4cGFuZHRhYgoJCXNldCB0YWJzdG9wPTQKCQlzZXQgc2hpZnR3aWR0aD00CgogICAgZWxzZWlmIGV4dCA9PSAiamF2YSIKCQlzZXQgZXhwYW5kdGFiCgkJc2V0IHRhYnN0b3A9NAoJCXNldCBzaGlmdHdpZHRoPTQKCQlzZXQgb21uaWZ1bmM9amF2YWNvbXBsZXRlI0NvbXBsZXRlCgoJZW5kaWYKZW5kZnVuYwoKZnVuYyEgR2V0QmxvY2tJbmRlbnQgKCkKCXJldHVybiA0CmVuZGZ1bmMKCmF1dG9jbWQgQnVmTmV3RmlsZSxCdWZSZWFkUG9zdCAqIGNhbGwgQ29uZmlncygpCmF1dG9jbWQgQnVmTmV3RmlsZSxCdWZSZWFkUG9zdCAqLmNvbmYgY2FsbCBDb25maWcoImNvbmYiKQphdXRvY21kIEJ1Zk5ld0ZpbGUsQnVmUmVhZFBvc3QgKi53eG1sIGNhbGwgQ29uZmlnKCJ4bWwiKQphdXRvY21kIEJ1Zk5ld0ZpbGUsQnVmUmVhZFBvc3QgKi52dWUgY2FsbCBDb25maWcoInZ1ZSIpCiJ9fX0KCiLmnKzlnLDphY3nva4ie3t7CmlmIGZpbGVyZWFkYWJsZShleHBhbmQoIn4vLnZpbS9hdXRvbG9hZC9hdXRvLnZpbSIpKSB8IHNvdXJjZSB+Ly52aW0vYXV0b2xvYWQvYXV0by52aW0gfCBlbmRpZgppZiBmaWxlcmVhZGFibGUoZXhwYW5kKCJ+Ly52aW1fbG9jYWwudmltIikpIHwgc291cmNlIH4vLnZpbV9sb2NhbC52aW0gfCBlbmRpZgphdXRvY21kIEJ1ZlJlYWRQb3N0ICogbm9ybWFsIGAiCiJ9fX0KIuS4u+mimOiJsuezuyJ7e3sKc3ludGF4IG9uCnNldCB0X0NvPTI1Ngpjb2xvcnNjaGVtZSB0b3J0ZQoiIGNvbG9yc2NoZW1lIGVsZmxvcmQKCmhpZ2hsaWdodCBDb21tZW50IGN0ZXJtZmc9Y3lhbiBjdGVybWJnPWRhcmtibHVlCmhpZ2hsaWdodCBQbWVudVNlbCBjdGVybWZnPWRhcmtibHVlIGN0ZXJtYmc9Y3lhbgpoaWdobGlnaHQgUG1lbnUgY3Rlcm1mZz1jeWFuIGN0ZXJtYmc9ZGFya2JsdWUKIn19fQo=",
        "usr/intshell/dev/vim/zml.vim": "aGlnaGxpZ2h0IHptbENvbW1hbmQgICAgY3Rlcm1mZz15ZWxsb3cKc3ludGF4IG1hdGNoIHptbENvbW1hbmQgImhlYWQiCnN5bnRheCBtYXRjaCB6bWxDb21tYW5kICJsZWZ0IgpzeW50YXggbWF0Y2ggem1sQ29tbWFuZCAibWFpbiIKc3ludGF4IG1hdGNoIHptbENvbW1hbmQgImZvb3QiCnN5bnRheCBtYXRjaCB6bWxDb21tYW5kICJtZW51IgpzeW50YXggbWF0Y2ggem1sQ29tbWFuZCAicmV0dXJuIgoKaGlnaGxpZ2h0IHptbEZ1bmN0aW9uICAgIGN0ZXJtZmc9Y3lhbgpzeW50YXggbWF0Y2ggem1sRnVuY3Rpb24gImluZGV4IgpzeW50YXggbWF0Y2ggem1sRnVuY3Rpb24gImFjdGlvbiIKc3ludGF4IG1hdGNoIHptbEZ1bmN0aW9uICJhcmdzIgpzeW50YXggbWF0Y2ggem1sRnVuY3Rpb24gInN0eWxlIgpzeW50YXggbWF0Y2ggem1sRnVuY3Rpb24gInN0eWxlLndpZHRoIgoKaGlnaGxpZ2h0IHptbENvbnN0YW50ICAgIGN0ZXJtZmc9bWFnZW50YQpzeW50YXggbWF0Y2ggem1sQ29uc3RhbnQgImF1dG8iCnN5bnRheCBtYXRjaCB6bWxDb25zdGFudCAidXNlcm5hbWUiCg==",
        "usr/intshell/index.sh": "IyEvYmluL3NoCgpleHBvcnQgY3R4X2Rldj0ke2N0eF9kZXY6PSJodHRwOi8vc2h5bGludXguY29tIn0KCl9kb3duX2JpZ19maWxlKCkgeyAjIOS4i+i9veaWh+S7tiBkaXIgdXJsCglbIC1mICIkMSIgXSAmJiByZXR1cm4gfHwgZWNobyAiZG93bmxvYWQgJGN0eF9kZXYvJDIiCgllY2hvICQxfCBncmVwICIvIiAmPi9kZXYvbnVsbCAmJiBta2RpciAtcCAkezElKi8qfTsgaWYgY3VybCAtaCAmPi9kZXYvbnVsbDsgdGhlbgoJCWN1cmwgLW8gJDEgLWZMICIkY3R4X2Rldi8kMj9wb2Q9JGN0eF9wb2QiCgllbHNlCgkJd2dldCAtTyAkMSAiJGN0eF9kZXYvJDI/cG9kPSRjdHhfcG9kIgoJZmkKfQpfZG93bl9maWxlcygpIHsgIyDkuIvovb3mlofku7YgZmlsZS4uLgoJZm9yIGZpbGUgaW4gIiRAIjsgZG8gX2Rvd25fZmlsZSAkZmlsZSBwdWJsaXNoLyR7ZmlsZSMjKi99OyBkb25lCn0KX2Rvd25fZmlsZSgpIHsgIyDkuIvovb3mlofku7YgZGlyIHVybAoJZWNobyAkMXwgZ3JlcCAiLyIgJj4vZGV2L251bGwgJiYgbWtkaXIgLXAgJHsxJSovKn07IGlmIGN1cmwgLWggJj4vZGV2L251bGw7IHRoZW4KCQljdXJsIC1vICQxIC1mc1NMICRjdHhfZGV2LyQyCgllbHNlCgkJd2dldCAtTyAkMSAtcSAkY3R4X2Rldi8kMgoJZmkKfQpfdGVtcF9maWxlKCkgeyAjIOWKoOi9veaWh+S7tiB1cmwgYXJnLi4uCgljdHhfdGVtcD0kKG1rdGVtcCkgJiYgX2Rvd25fZmlsZSAkY3R4X3RlbXAgJDEgJiYgc2hpZnQgJiYgc291cmNlICRjdHhfdGVtcCAiJEAiCn0KX2Rvd25fdGFycygpIHsgIyDkuIvovb3mlofku7YgZmlsZS4uLgoJZm9yIGZpbGUgaW4gIiRAIjsgZG8gX2Rvd25fdGFyICRmaWxlIHB1Ymxpc2gvJGZpbGU7IGRvbmUKfQpfZG93bl90YXIoKSB7ICMg5LiL6L295paH5Lu2IGZpbGUgcGF0aAoJWyAtZiAkMSBdICYmIHJldHVybjsgX2Rvd25fYmlnX2ZpbGUgIiRAIiAmJiB0YXIgLXhmICQxCn0KCnByZXBhcmVfc2NyaXB0KCkgewoJZm9yIHNjcmlwdCBpbiAiJEAiOyBkbyBfdGVtcF9maWxlIGludHNoZWxsLyRzY3JpcHQ7IGRvbmUgCn0KcHJlcGFyZV9wYWNrYWdlKCkgewoJX2Rvd25fdGFycyBjb250ZXh0cy5iaW4udGFyLmd6IGNvbnRleHRzLnNyYy50YXIuZ3oKCWxvY2FsIGJhY2s9JFBXRDsgY2Qgfi87IF9kb3duX3RhcnMgY29udGV4dHMuaG9tZS50YXIuZ3o7IGNkICRiYWNrCglleHBvcnQgVklNPSRQV0QvdXNyL2luc3RhbGwvdmltLXZpbS0xMmJlNzM0L19pbnN0YWxsL3NoYXJlL3ZpbS92aW04Mi8KCWV4cG9ydCBMRF9MSUJSQVJZX1BBVEg9JFBXRC91c3IvbG9jYWwvbGliCgoJaXNoX3N5c19wYXRoX2xvYWQKCWdpdCBjb25maWcgLS1nbG9iYWwgaW5pdC50ZW1wbGF0ZWRpciAkUFdEL3Vzci9pbnN0YWxsL2dpdC0yLjMxLjEvX2luc3RhbGwvc2hhcmUvZ2l0LWNvcmUvdGVtcGxhdGVzLwoJZ2l0IGNvbmZpZyAtLWdsb2JhbCB1cmwuIiRjdHhfZGV2Ii5pbnN0ZWFkT2YgaHR0cHM6Ly9zaHlsaW51eC5jb20KCWdpdCBjb25maWcgLS1nbG9iYWwgaW5pdC5kZWZhdWx0QnJhbmNoIG1hc3Rlcgp9CnByZXBhcmVfc3lzdGVtKCkgewoJY2FzZSAiJCh1bmFtZSkiIGluCgkJRGFyd2luKSB4Y29kZS1zZWxlY3QgLS1pbnN0YWxsIDI+L2Rldi9udWxsIDs7CgkJTGludXgpIAoJCQlpZiBbIGB3aG9hbWlgID09IHJvb3QgXTsgdGhlbgoJCQkJeXVtIGluc3RhbGwgLXkgbWFrZSBnaXQgdmltIHRtdXgKCQkJZWxzZQoJCQkJc3VkbyB5dW0gaW5zdGFsbCAteSBtYWtlIGdpdCB2aW0gdG11eAoJCQlmaQoJCQk7OwoJZXNhYwp9CnByZXBhcmVfdG11eCgpIHsKCV9kb3duX2ZpbGUgZXRjL3RtdXguY29uZiBpbnRzaGVsbC9kZXYvdG11eC90bXV4LmNvbmYKCV9kb3duX2ZpbGUgYmluL3RtdXguc2ggaW50c2hlbGwvZGV2L3RtdXgvbG9jYWwuc2gKfQpwcmVwYXJlX2ljZSgpIHsKCWxvY2FsIGJpbj0iaWNlIgoJY2FzZSBgdW5hbWUgLXNgIGluCgkJRGFyd2luKSBiaW49JHtiaW59LmRhcndpbiA7OwoJCUxpbnV4KSBiaW49JHtiaW59LmxpbnV4IDs7CgkJKikgYmluPSR7YmlufS53aW5kb3dzIDs7Cgllc2FjCgljYXNlIGB1bmFtZSAtbWAgaW4KCQltaXBzKSBiaW49JHtiaW59Lm1pcHNsZSA7OwoJCXg4Nl82NCkgYmluPSR7YmlufS5hbWQ2NCA7OwoJCWFybTY0KSBiaW49JHtiaW59LmFtZDY0IDs7CgkJYXJtKnxhYXJjaDY0KSBiaW49JHtiaW59LmFybSA7OwoJCSopIGJpbj0ke2Jpbn0uMzg2IDs7Cgllc2FjCglfZG93bl9iaWdfZmlsZSBiaW4vaWNlLmJpbiBwdWJsaXNoLyRiaW4gJiYgY2htb2QgdSt4IGJpbi9pY2UuYmluOyBbIC1mIGJpbi9pY2UuYmluIF0KfQoKbWFpbigpIHsKCWNhc2UgIiQxIiBpbgoJCWludHNoZWxsKSAjIOWIm+W7uumhueebrgoJCQlbIC1mICRQV0QvLmlzaC9wbHVnLnNoIF0gJiYgc291cmNlICRQV0QvLmlzaC9wbHVnLnNoICYmIHJldHVybgoJCQlbIC1mICRIT01FLy5pc2gvcGx1Zy5zaCBdICYmIHNvdXJjZSAkSE9NRS8uaXNoL3BsdWcuc2ggJiYgcmV0dXJuCgkJCWdpdCB2ZXJzaW9uICY+L2Rldi9udWxsICYmIGdpdCBjbG9uZSBodHRwczovL3NoeWxpbnV4LmNvbS94L2ludHNoZWxsICRQV0QvLmlzaCAmJiByZXR1cm4KCQkJcHJlcGFyZV9zY3JpcHQgcGx1Zy5zaCBjb25mLnNoIG1pc3Muc2gKCQkJOzsKCQlwcm9qZWN0KSAjIOWIm+W7uumhueebrgoJCQlwcmVwYXJlX3NjcmlwdCBwbHVnLnNoIGNvbmYuc2ggbWlzcy5zaDsgcHJlcGFyZV9zeXN0ZW0KCQkJaXNoX21pc3NfcHJlcGFyZV9jb21waWxlCgkJCWlzaF9taXNzX3ByZXBhcmVfZGV2ZWxvcAoJCQlpc2hfbWlzc19wcmVwYXJlX2luc3RhbGwKCgkJCWlzaF9taXNzX3ByZXBhcmVfY29udGV4dHMKCgkJCWV4cG9ydCBQQVRIPSR7UFdEfS9iaW46JFBBVEggY3R4X2xvZz0ke2N0eF9sb2c6PS9kZXYvc3Rkb3V0fQoJCQlnbyBnZXQgc2h5bGludXguY29tL3gvaWNlCgkJCXNoaWZ0ICYmIG1ha2UgJiYgaXNoX21pc3Nfc2VydmUgIiRAIgoJCQk7OwoJCXNvdXJjZSkgIyDmupDnoIHlronoo4UKCQkJcHJlcGFyZV9zeXN0ZW0KCQkJZ2l0IGNsb25lIGh0dHBzOi8vc2h5bGludXguY29tL3gvY29udGV4dHMKCQkJc2hpZnQgJiYgY2QgY29udGV4dHMgJiYgc291cmNlIGV0Yy9taXNzLnNoICIkQCIKCQkJOzsKCQliaW5hcnkpICMg5bqU55So5a6J6KOFCgkJCWV4cG9ydCBjdHhfbG9nPSR7Y3R4X2xvZzo9L2Rldi9zdGRvdXR9IGN0eF9kZXY9Imh0dHBzOi8vc2h5bGludXguY29tIgoJCQlzaGlmdCAmJiBwcmVwYXJlX2ljZSAmJiBiaW4vaWNlLmJpbiBmb3JldmVyIHN0YXJ0IGRldiAiIiAiJEAiCgkJCTs7CgkJYXBwKSAjIOeUn+S6p+eOr+WigwoJCQlleHBvcnQgY3R4X2xvZz0ke2N0eF9sb2c6PS9kZXYvc3Rkb3V0fQoJCQlzaGlmdCAmJiBwcmVwYXJlX2ljZSAmJiBiaW4vaWNlLmJpbiBmb3JldmVyIHN0YXJ0IGRldiBkZXYgIiRAIgoJCQk7OwoJCWRldikgIyDlvIDlj5Hnjq/looMKCQkJcHJlcGFyZV9zY3JpcHQgcGx1Zy5zaCBjb25mLnNoIG1pc3Muc2gKCQkJc2hpZnQgJiYgcHJlcGFyZV9wYWNrYWdlICYmIHNvdXJjZSBldGMvbWlzcy5zaCAiJEAiCgkJCTs7CgkJKikgIyDnu4jnq6/njq/looMKCQkJcHJlcGFyZV9zY3JpcHQgcGx1Zy5zaCBjb25mLnNoIG1pc3Muc2gKCQkJaXNoX3N5c19kZXZfbG9naW4gJiYgWyAtbiAiJCoiIF0gJiYgaXNoX3N5c19kZXZfcnVuICIkQCIKCQkJOzsKCWVzYWMKfQoKbWFpbiAiJEAiCg==",
        "usr/intshell/miss.sh": "IyEvYmluL3NoCgpleHBvcnQgY3R4X3BpZD0ke2N0eF9waWQ6PXZhci9ydW4vaWNlLnBpZH0KZXhwb3J0IGN0eF9sb2c9JHtjdHhfbG9nOj1iaW4vYm9vdC5sb2d9Cgppc2hfbWlzc19pY2VfYmluPSJpY2UuYmluIgppc2hfbWlzc19pbml0X3NoeT0iZXRjL2luaXQuc2h5Igppc2hfbWlzc19tYWluX3NoeT0ic3JjL21haW4uc2h5Igppc2hfbWlzc19tYWluX2dvPSJzcmMvbWFpbi5nbyIKCmlzaF9taXNzX2Rvd25sb2FkX3BrZygpIHsKCWZvciB1cmwgaW4gIiRAIjsgZG8gbG9jYWwgcGtnPSR7dXJsIyMqL30KCQlbIGBpc2hfc3lzX2ZpbGVfc2l6ZSAkcGtnYCAtZ3QgMCBdICYmIGJyZWFrCgkJaXNoX2xvZ19yZXF1aXJlICR1cmw7IGlmIGN1cmwgLWggJj4vZGV2L251bGw7IHRoZW4KCQkJY3VybCAtbyAkcGtnIC1mU0wgJHVybCAmJiB0YXIgeGYgJHBrZyAKCQllbHNlCgkJCXdnZXQgLU8gJHBrZyAkdXJsICYmIHRhciB4ZiAkcGtnIAoJCWZpCglkb25lCn0KaXNoX21pc3NfcHJlcGFyZV9jb21waWxlKCkgewoJaXNoX3N5c19wYXRoX2luc2VydCAiJFBXRC91c3IvbG9jYWwvZ28vYmluIiAiJFBXRC91c3IvbG9jYWwvYmluIiAiJFBXRC9iaW4iICIkUFdEL3Vzci9wdWJsaXNoIgoJZXhwb3J0IEdPUFJWSUFURT0ke0dPUFJWSUFURTo9c2h5bGludXguY29tLGdpdGh1Yi5jb219CglleHBvcnQgR09CSU49JHtHT0JJTjo9JFBXRC91c3IvbG9jYWwvYmlufQoJZXhwb3J0IElTSF9DT05GX1BBVEg9JFBXRC8uaXNoL3BsdWdlZAoJZXhwb3J0IEdPMTExTU9EVUxFPW9uCgoJZ28gdmVyc2lvbiAmPi9kZXYvbnVsbCAmJiByZXR1cm4KCglsb2NhbCBnb2FyY2g9YW1kNjQ7IGNhc2UgIiQodW5hbWUgLW0pIiBpbgoJCXg4Nl82NCkgZ29hcmNoPWFtZDY0OzsKCQlhcm02NCkgZ29hcmNoPWFybTY0OzsKCQlpNjg2KSBnb2FyY2g9Mzg2OzsKCQkqKSBnb29zPWFybTs7Cgllc2FjCglsb2NhbCBnb29zPWxpbnV4OyBjYXNlICIkKHVuYW1lIC1zKSIgaW4KCQlEYXJ3aW4pIGdvb3M9ZGFyd2luOzsKCQlMaW51eCkgZ29vcz1saW51eDs7CgkJKikgZ29vcz13aW5kb3dzOzsKCWVzYWMKCglsb2NhbCBwa2c9Z28ke0dPVkVSU0lPTjo9MS4xNS41fS4ke2dvb3N9LSR7Z29hcmNofS50YXIuZ3o7IGlzaF9sb2dfZGVidWcgImRvd25sb2FkOiAkcGtnIgoJbG9jYWwgYmFjaz0kUFdEOyBta2RpciAtcCB1c3IvbG9jYWw7IGNkIHVzci9sb2NhbDsgaXNoX21pc3NfZG93bmxvYWRfcGtnIGh0dHBzOi8vZGwuZ29vZ2xlLmNvbS9nby8kcGtnOyBjZCAkYmFjawp9CmlzaF9taXNzX3ByZXBhcmVfZGV2ZWxvcCgpIHsKCWlzaF9kZXZfZ2l0X3ByZXBhcmUKCgkjIC5naXRpZ25vcmUKCWlzaF9zeXNfZmlsZV9jcmVhdGUgLmdpdGlnbm9yZSA8PEVORApldGMvCmJpbi8KdmFyLwp1c3IvCi4qCkVORAoKCSMgZ28ubW9kCglsb2NhbCByZW1vdGU9JChnaXQgY29uZmlnIHJlbW90ZS5vcmlnaW4udXJsfHNlZCAtZSAicy9eaHR0cHM6XC9cLy8vInxzZWQgLWUgInMvXmh0dHA6XC9cLy8vIikKCVsgLWYgZ28ubW9kIF0gfHwgZ28gbW9kIGluaXQgJHtyZW1vdGU6PSR7UFdEIyMqL319CgoJIyBzcmMvbWFpbi5nbwoJaXNoX3N5c19maWxlX2NyZWF0ZSAkaXNoX21pc3NfbWFpbl9nbyA8PEVORApwYWNrYWdlIG1haW4KCmltcG9ydCAic2h5bGludXguY29tL3gvaWNlIgoKZnVuYyBtYWluKCkgeyBwcmludChpY2UuUnVuKCkpIH0KRU5ECgoJIyBNYWtlZmlsZQoJaXNoX3N5c19maWxlX2NyZWF0ZSBNYWtlZmlsZSA8PCBFTkQKZXhwb3J0IENHT19FTkFCTEVEPTAKCmFsbDoKCUBlY2hvICYmIGRhdGUKCWdvIGJ1aWxkIC12IC1vIGJpbi8kaXNoX21pc3NfaWNlX2JpbiAkaXNoX21pc3NfbWFpbl9nbyAmJiAuL2Jpbi8kaXNoX21pc3NfaWNlX2JpbiBmb3JldmVyIHJlc3RhcnQKRU5ECn0KaXNoX21pc3NfcHJlcGFyZV9pbnN0YWxsKCkgewoJIyBldGMvaW5pdC5zaHkKCWlzaF9zeXNfZmlsZV9jcmVhdGUgJGlzaF9taXNzX2luaXRfc2h5IDw8RU5ECn5hYWEKCn53ZWIKCn5jbGkKCn5jdHgKCn5tZGIKCkVORAoKCSMgc3JjL21haW4uc2h5Cglpc2hfc3lzX2ZpbGVfY3JlYXRlICRpc2hfbWlzc19tYWluX3NoeSA8PEVORAp0aXRsZSAiJHtQV0QjIyovfSIKRU5ECn0KCmlzaF9taXNzX3ByZXBhcmUoKSB7Cglsb2NhbCBuYW1lPSR7MSMjKi99IHJlcG9zPSR7MSNodHRwczovL30KCVsgIiRuYW1lIiA9ICIkcmVwb3MiIF0gJiYgcmVwb3M9c2h5bGludXguY29tL3gvJG5hbWUKCglsb2NhbCBiYWNrPSRQV0QKCUlTSF9DT05GX1BBVEg9JFBXRC8uaXNoL3BsdWdlZCByZXF1aXJlICRyZXBvcwoJaXNoX3N5c19saW5rX2NyZWF0ZSB1c3IvJG5hbWUgJChyZXF1aXJlX3BhdGggJHJlcG9zKQoJcmVxdWlyZV9wdWxsIHVzci8kbmFtZQoJY2QgJGJhY2sKfQppc2hfbWlzc19wcmVwYXJlX2NvbnRleHRzKCkgewoJaXNoX2xvZ19yZXF1aXJlIC1nIHNoeWxpbnV4LmNvbS94L2NvbnRleHRzCglbIC1kIC5naXQgXSB8fCBnaXQgaW5pdAoJWyAiYGdpdCByZW1vdGVgIiA9ICIiIF0gfHwgcmVxdWlyZV9wdWxsIC4vCn0KaXNoX21pc3NfcHJlcGFyZV9pbnRzaGVsbCgpIHsKCWlzaF9sb2dfcmVxdWlyZSAtZyBzaHlsaW51eC5jb20veC9pbnRzaGVsbAoJWyAtZiAkUFdELy5pc2gvcGx1Zy5zaCBdIHx8IFsgLWYgJEhPTUUvLmlzaC9wbHVnLnNoIF0gfHwgZ2l0IGNsb25lIGh0dHBzOi8vc2h5bGludXguY29tL3gvaW50c2hlbGwgJFBXRC8uaXNoCglbIC1kICRQV0QvLmlzaCBdICYmIGlzaF9zeXNfbGlua19jcmVhdGUgdXNyL2ludHNoZWxsICRQV0QvLmlzaAoJWyAtZCAkSE9NRS8uaXNoIF0gJiYgaXNoX3N5c19saW5rX2NyZWF0ZSB1c3IvaW50c2hlbGwgJEhPTUUvLmlzaAoJcmVxdWlyZV9wdWxsIHVzci9pbnRzaGVsbAoKCWlzaF9zeXNfY2xpX3ByZXBhcmUKfQppc2hfbWlzc19wcmVwYXJlX2ljZWJlcmdzKCkgewoJaXNoX21pc3NfcHJlcGFyZSBpY2ViZXJncwp9CmlzaF9taXNzX3ByZXBhcmVfdG9vbGtpdHMoKSB7Cglpc2hfbWlzc19wcmVwYXJlIHRvb2xraXRzCn0KaXNoX21pc3NfcHJlcGFyZV92b2xjYW5vcygpIHsKCWlzaF9taXNzX3ByZXBhcmUgdm9sY2Fub3MKfQppc2hfbWlzc19wcmVwYXJlX2xlYXJuaW5nKCkgewoJaXNoX21pc3NfcHJlcGFyZSBsZWFybmluZwp9CmlzaF9taXNzX3ByZXBhcmVfc2Vzc2lvbigpIHsKCWxvY2FsIG5hbWU9JDEgJiYgWyAiJG5hbWUiID0gIiIgXSAmJiBuYW1lPSR7UFdEIyMqL30KCWxvY2FsIHdpbj0kMiAmJiBbICIkd2luIiA9ICIiIF0gJiYgd2luPSR7bmFtZSMjKi19Cglpc2hfbG9nX25vdGljZSAic2Vzc2lvbjogJG5hbWU6JHdpbiIKCglpZiAhIHRtdXggaGFzLXNlc3Npb24gLXQgJG5hbWUgJj4vZGV2L251bGw7IHRoZW4KCQlUTVVYPSIiIHRtdXggbmV3LXNlc3Npb24gLWQgLXMgJG5hbWUgLW4gJHdpbgoJCXRtdXggc3BsaXQtd2luZG93IC1kIC1wIDMwIC10ICRuYW1lCgkJdG11eCBzcGxpdC13aW5kb3cgLWQgLWggLXQgJHtuYW1lfTokd2luLjIKCgkJbG9jYWwgbGVmdD0yIHJpZ2h0PTMKCQl0bXV4IHNlbmQta2V5IC10ICR7bmFtZX06JHdpbi4kcmlnaHQgImlzaF9taXNzX2xvZyIgRW50ZXIKCQlpZiBbICIkbmFtZSIgPSAibWlzcyIgXTsgdGhlbgoJCQl0bXV4IHNlbmQta2V5IC10ICR7bmFtZX06JHdpbi4kbGVmdCAiaXNoX21pc3Nfc2VydmUiCgkJZWxzZQoJCQl0bXV4IHNlbmQta2V5IC10ICR7bmFtZX06JHdpbi4kbGVmdCAiaXNoX21pc3Nfc3BhY2UgZGV2IGRldiIKCQlmaQoJCXNsZWVwIDEgJiYgdG11eCBzZW5kLWtleSAtdCAke25hbWV9OiR3aW4uMSAidmltIC1PIHNyYy9tYWluLmdvIHNyYy9tYWluLnNoeSIgRW50ZXIKCgkJY2FzZSBgdW5hbWUgLXNgIGluCgkJCURhcndpbikgc2xlZXAgNSAmJiBvcGVuIGh0dHA6Ly9sb2NhbGhvc3Q6OTAyMCA7OwoJCWVzYWMKCWZpCgoJWyAiJFRNVVgiID0gIiIgXSAmJiB0bXV4IGF0dGFjaCAtdCAkbmFtZSB8fCB0bXV4IHNlbGVjdC13aW5kb3cgLXQgJG5hbWU6JHdpbgp9Cgppc2hfbWlzc19zdGFydCgpIHsKCXdoaWxlIHRydWU7IGRvCgkJZGF0ZSAmJiAkaXNoX21pc3NfaWNlX2JpbiAiJEAiIDI+JGN0eF9sb2cgJiYgYnJlYWsgfHwgZWNobyAtZSAiXG5cbnJlc3RhcnRpbmcuLi4iCgkJc2xlZXAgMQoJZG9uZQp9CmlzaF9taXNzX3Jlc3RhcnQoKSB7CglbIC1lICIkY3R4X3BpZCIgXSAmJiBraWxsIC0yIGBjYXQgJGN0eF9waWRgICY+L2Rldi9udWxsIHx8IGVjaG8KfQppc2hfbWlzc19zdG9wKCkgewoJWyAtZSAiJGN0eF9waWQiIF0gJiYga2lsbCAtMyBgY2F0ICRjdHhfcGlkYCAmPi9kZXYvbnVsbCB8fCBlY2hvCn0KaXNoX21pc3Nfc2VydmVfbG9nKCkgewoJaXNoX21pc3Nfc3RvcCAmJiBjdHhfbG9nPS9kZXYvc3Rkb3V0IGlzaF9taXNzX3N0YXJ0IHNlcnZlIHN0YXJ0ICRACn0KaXNoX21pc3Nfc2VydmUoKSB7Cglpc2hfbWlzc19zdG9wICYmIGlzaF9taXNzX3N0YXJ0IHNlcnZlIHN0YXJ0ICRACn0KaXNoX21pc3Nfc3BhY2UoKSB7Cglpc2hfbWlzc19zdG9wICYmIGlzaF9taXNzX3N0YXJ0IHNwYWNlIGRpYWwgZGV2IG9wcyAkQAp9CmlzaF9taXNzX2xvZygpIHsKCXRvdWNoICRjdHhfbG9nICYmIHRhaWwgLWYgJGN0eF9sb2cKfQoKaXNoX21pc3NfbWFrZSgpIHsKCWxvY2FsIGJpbmFyeXM9YmluL2ljZS5iaW4KCWVjaG8gJiYgZGF0ZQoJWyAtZiBzcmMvdmVyc2lvbi5nbyBdIHx8IGVjaG8gInBhY2thZ2UgbWFpbiIgPiBzcmMvdmVyc2lvbi5nbwoJZ28gYnVpbGQgLXYgLW8gJHtiaW5hcnlzfSBzcmMvbWFpbi5nbyBzcmMvdmVyc2lvbi5nbyAmJiAuLyR7YmluYXJ5c30gZm9yZXZlciByZXN0YXJ0ICY+L2Rldi9udWxsCn0KaXNoX21pc3NfZ29fc3VtKCkgewoJZ28gbW9kIGRvd25sb2FkIHNoeWxpbnV4LmNvbS94L2ljZQoJZ28gbW9kIGRvd25sb2FkIHNoeWxpbnV4LmNvbS94L2ljZWJlcmdzCglnbyBtb2QgZG93bmxvYWQgc2h5bGludXguY29tL3gvdG9vbGtpdHMKCglnbyBtb2QgZG93bmxvYWQgc2h5bGludXguY29tL3gvd2Vic29ja2V0CglnbyBtb2QgZG93bmxvYWQgc2h5bGludXguY29tL3gvZ28tcXJjb2RlCglnbyBtb2QgZG93bmxvYWQgc2h5bGludXguY29tL3gvZ28tc3FsLW15c3FsCgoJZ28gbW9kIGRvd25sb2FkIHNoeWxpbnV4LmNvbS94L2xpbnV4LXN0b3J5CglnbyBtb2QgZG93bmxvYWQgc2h5bGludXguY29tL3gvbmdpbngtc3RvcnkKCWdvIG1vZCBkb3dubG9hZCBzaHlsaW51eC5jb20veC9nb2xhbmctc3RvcnkKCWdvIG1vZCBkb3dubG9hZCBzaHlsaW51eC5jb20veC9yZWRpcy1zdG9yeQoJZ28gbW9kIGRvd25sb2FkIHNoeWxpbnV4LmNvbS94L215c3FsLXN0b3J5Cn0K",
        "usr/intshell/plug.sh": "IyEvYmluL3NoCgojIyAxLumFjee9riAjIHsKSVNIX0NPTkZfSE9NRT0ke0lTSF9DT05GX0hPTUU6PSIkSE9NRS8uaXNoL3BsdWdlZCJ9CklTSF9DT05GX1BBVEg9JHtJU0hfQ09ORl9QQVRIOj0iJFBXRC8uaXNoL3BsdWdlZCJ9CgpJU0hfQ09ORl9MT0c9JHtJU0hfQ09ORl9MT0c6PSIvZGV2L3N0ZGVyciJ9CklTSF9DT05GX0xFVkVMPSR7SVNIX0NPTkZfTEVWRUw6PSJub3RpY2UgZGVidWcifQpJU0hfQ09ORl9DT0xPUj0ke0lTSF9DT05GX0NPTE9SOj0idHJ1ZSJ9CiMgfQojIyAyLuaXpeW/lyAjIHsKSVNIX1NIT1dfQ09MT1Jfcj0iXGVbMzFtIgpJU0hfU0hPV19DT0xPUl9nPSJcZVszMm0iCklTSF9TSE9XX0NPTE9SX2I9IlxlWzM0bSIKSVNIX1NIT1dfQ09MT1JfZW5kPSJcZVswbSIKaXNoX3Nob3coKSB7CiAgICBsb2NhbCBzcGFjZT0iICIgY291bnQ9IiI7IHdoaWxlIFsgIiQjIiAtZ3QgIjAiIF07IGRvIHNwYWNlPSIgIjsgY2FzZSAkMSBpbgogICAgICAgIC11c2VybmFtZSkgZWNobyAtbiAiJCh3aG9hbWkpIjs7CiAgICAgICAgLWhvc3RuYW1lKSBlY2hvIC1uICIkKGhvc3RuYW1lKSI7OwogICAgICAgIC1kYXRlKSBlY2hvIC1uICIkKGRhdGUgKyIlWS0lbS0lZCIpIjs7CiAgICAgICAgLXRpbWUpIGVjaG8gLW4gIiQoZGF0ZSArIiVZLSVtLSVkICVIOiVNOiVTIikiOzsKICAgICAgICAqKSBpZiBsb2NhbCBrPSQxICYmIFsgIiR7azowOjF9IiA9ICItIiBdIDsgdGhlbiBzcGFjZT0iIgogICAgICAgICAgICBsb2NhbCBjb2xvcj0kKGV2YWwgInByaW50ZiBcJHtJU0hfU0hPV19DT0xPUl8ke2s6MX19IiAyPi9kZXYvbnVsbCkKICAgICAgICAgICAgWyAiJElTSF9DT05GX0NPTE9SIiA9ICJ0cnVlIiBdICYmIHByaW50ZiAiJGNvbG9yIiAmJiBjb3VudD0ibmVlZCIKICAgICAgICBlbHNlCiAgICAgICAgICAgIHByaW50ZiAiJDEiOyBbIC1uICRjb3VudCBdICYmIHByaW50ZiAiJElTSF9TSE9XX0NPTE9SX2VuZCIgJiYgY291bnQ9CiAgICAgICAgZmk7OwogICAgZXNhYzsgWyAiJCMiIC1ndCAiMCIgXSAmJiBzaGlmdCAmJiBlY2hvIC1uICIkc3BhY2UiOyBkb25lOyBlY2hvCn0KaXNoX2xvZygpIHsKICAgIGZvciBsIGluICQoZWNobyAke0lTSF9DT05GX0xFVkVMOj0kMX0pOyBkbwogICAgICAgIFsgIiRsIiA9ICIkMSIgXSAmJiBpc2hfc2hvdyAtdGltZSAiJEAiID4kSVNIX0NPTkZfTE9HIAogICAgZG9uZTsgcmV0dXJuIDAKfQppc2hfbG9nX2RlYnVnKCkgeyBpc2hfbG9nICJkZWJ1ZyIgIiRAIiBgX2ZpbGVsaW5lIDIgMmA7IH0KaXNoX2xvZ19yZXF1aXJlKCkgeyBpc2hfbG9nICJyZXF1aXJlIiAiJEAiOyB9CmlzaF9sb2dfcmVxdWVzdCgpIHsgaXNoX2xvZyAicmVxdWVzdCIgIiRAIjsgfQppc2hfbG9nX3NvdXJjZSgpIHsgaXNoX2xvZyAic291cmNlIiAiJEAiOyB9CmlzaF9sb2dfbm90aWNlKCkgeyBpc2hfbG9nICJub3RpY2UiICIkQCI7IH0KaXNoX2xvZ19hbGlhcygpIHsgaXNoX2xvZyAiYWxpYXMiICIkQCI7IH0KIyB9CiMjIDMu5Yqg6L29ICMgewpyZXF1aXJlX3BhdGgoKSB7ICMg55uu5b2VIHJlcG9zCiAgICBmb3IgbmFtZSBpbiAiJEAiOyBkbwogICAgICAgIFsgLWUgJG5hbWUgXSAmJiBlY2hvICRuYW1lICYmIGNvbnRpbnVlCiAgICAgICAgZm9yIHAgaW4gJFBXRC8uaXNoL3BsdWdlZCAkSVNIX0NPTkZfUEFUSCAkSVNIX0NPTkZfSE9NRTsgZG8KICAgICAgICAgICAgWyAtZSAkcC8kbmFtZSBdICYmIGVjaG8gJHAvJG5hbWUgJiYgYnJlYWsKICAgICAgICAgICAgWyAtZSAke3AlLyp9LyRuYW1lIF0gJiYgZWNobyAke3AlLyp9LyRuYW1lICYmIGJyZWFrCiAgICAgICAgZG9uZQogICAgZG9uZQp9CnJlcXVpcmVfZm9yaygpIHsgICMg5LuT5bqTIHJlcG9zIFt0YWddCiAgICBsb2NhbCBuYW1lPSQxIG1vZD0kMSB0YWc9JDIgJiYgc2hpZnQgMjsgWyAiJHRhZyIgPSAiIiBdIHx8IG5hbWU9JG1vZEAkdGFnCiAgICBsb2NhbCBwPSQocmVxdWlyZV9wYXRoICRuYW1lKTsgWyAiJHAiICE9ICIiIF0gJiYgZWNobyAkcCAmJiByZXR1cm4KCiAgICBpc2hfbG9nX25vdGljZSAtZyAiY2xvbmUgJG1vZCA9PiAkSVNIX0NPTkZfUEFUSC8kbmFtZSIKICAgIGdpdCBjbG9uZSBodHRwczovLyRtb2QgJElTSF9DT05GX1BBVEgvJG5hbWUgJj4vZGV2L251bGwKICAgIGVjaG8gJElTSF9DT05GX1BBVEgvJG5hbWU7IFsgIiR0YWciID0gIiIgXSAmJiByZXR1cm4KCiAgICBjZCAiJElTSF9DT05GX1BBVEgvJG5hbWUiOyBnaXQgY2hlY2tvdXQgJHRhZyAmPi9kZXYvbnVsbCAmJiBybSAtcmYgLmdpdDsgY2QgLSAmPi9kZXYvbnVsbAp9CnJlcXVpcmVfcHVsbCgpIHsgIyDmm7TmlrAgcmVwb3MKICAgIGxvY2FsIGJhY2s9JFBXRDsgY2QgIiQocmVxdWlyZV9mb3JrICQxKSIgJiYgaXNoX2xvZ19ub3RpY2UgcHdkICRQV0QgJiYgZ2l0IHB1bGw7IGNkICRiYWNrOyBlY2hvCn0KcmVxdWlyZV90ZW1wKCkgeyAjIOS4i+i9vSBmaWxlCiAgICBmb3IgbmFtZSBpbiAiJEAiOyBkbyBsb2NhbCB0ZW1wPSQobWt0ZW1wKSAKICAgICAgICBpc2hfbG9nX3JlcXVlc3QgIiR0ZW1wIDw9ICRjdHhfZGV2L2ludHNoZWxsLyRuYW1lIgogICAgICAgIGN1cmwgLS1jcmVhdGUtZGlycyAtZnNTTCAtbyAkdGVtcCAkY3R4X2Rldi9pbnRzaGVsbC8kbmFtZSAmJiBlY2hvICR0ZW1wCiAgICBkb25lCn0KcmVxdWlyZSgpIHsgIyByZXF1aXJlIFthcyBuYW1lXSBbbW9kXSBmaWxlIGFyZy4uLgogICAgbG9jYWwgbmFtZT0ke0lTSF9DVFhfTU9EVUxFI2lzaF99ICYmIFsgIiQxIiA9ICJhcyIgXSAmJiBuYW1lPSQyICYmIHNoaWZ0IDIKICAgIGxvY2FsIG1vZD0kMSB0YWc9ICYmIHNoaWZ0OyBtb2Q9JHttb2QjaHR0cHM6Ly99CiAgICB0YWc9JHttb2QjKkB9IG1vZD0ke21vZCVAKn07IFsgIiR0YWciID0gIiRtb2QiIF0gJiYgdGFnPSIiCiAgICBpc2hfbG9nX3JlcXVpcmUgJG5hbWUgLWcgJG1vZCBieSBgX2ZpbGVsaW5lIDIgMmAKCiAgICBsb2NhbCBmaWxlPSQocmVxdWlyZV9wYXRoICRtb2QpCiAgICBbIC1mICIkZmlsZSIgXSB8fCBpZiBlY2hvICRtb2R8IGdyZXAgIl5naXQiICY+L2Rldi9udWxsOyB0aGVuCiAgICAgICAgZmlsZT0kKHJlcXVpcmVfZm9yayAiJG1vZCIgIiR0YWciKS8kMSAmJiBzaGlmdAogICAgZWxpZiBlY2hvICRtb2R8IGdyZXAgInNoeWxpbnV4LmNvbS94LyIgJj4vZGV2L251bGw7IHRoZW4KICAgICAgICBmaWxlPSQocmVxdWlyZV9mb3JrICIkbW9kIiAiJHRhZyIpLyQxICYmIHNoaWZ0CiAgICBlbHNlCiAgICAgICAgZmlsZT0kKHJlcXVpcmVfdGVtcCAkbW9kKQogICAgZmk7IFsgLWYgIiRmaWxlIiBdIHx8IHJldHVybiAwCgogICAgbG9jYWwgYmFjaz0kUFdEICYmIFsgLWQgIiR7ZmlsZSUvKn0iIF0gJiYgY2QgJHtmaWxlJS8qfQogICAgSVNIX0NUWF9NT0RVTEU9JChfbmFtZSBpc2hfJHtuYW1lfSkgSVNIX0NUWF9TQ1JJUFQ9JDEgX2xvYWQgJGZpbGUgIiRAIgogICAgY2QgJGJhY2s7IHJldHVybiAwCn0KX2xvYWQoKSB7CiAgICBsb2NhbCBmaWxlPSQxICYmIHNoaWZ0CiAgICBpc2hfbG9nX3NvdXJjZSAiJGZpbGUgIiRAIiIKICAgIHNvdXJjZSAuLyR7ZmlsZSMjKi99ICIkQCIKfQpfbmFtZSgpIHsKICAgIGxvY2FsIG5hbWU9IiQqIiAmJiBlY2hvICR7bmFtZS8vW15hLXpBLVowLTlfXS9ffQp9Cl9maWxlbGluZSgpIHsKICAgIGxvY2FsIGluZGV4MT0kKCgkezF9LTEpKQogICAgZWNobyAiJHtCQVNIX1NPVVJDRVskMV19OiR7QkFTSF9MSU5FTk9bJGluZGV4MV19OiR7RlVOQ05BTUVbJGluZGV4MV19Igp9Cgo=",
        "usr/intshell/show.sh": "IyEvYmluL3NoCgpJU0hfU0hPV19DT0xPUl9hcmc9IlxlWzMzOzRtIgoKSVNIX1NIT1dfQ09MT1Jfcj0iXGVbMzFtIgpJU0hfU0hPV19DT0xPUl9nPSJcZVszMm0iCklTSF9TSE9XX0NPTE9SX3k9IlxlWzMzbSIKSVNIX1NIT1dfQ09MT1JfYj0iXGVbMzRtIgpJU0hfU0hPV19DT0xPUl9wPSJcZVszNW0iCklTSF9TSE9XX0NPTE9SX2M9IlxlWzM2bSIKCklTSF9TSE9XX0NPTE9SX3JlZD0iXGVbMzFtIgpJU0hfU0hPV19DT0xPUl9ncmVlbj0iXGVbMzJtIgpJU0hfU0hPV19DT0xPUl9ibHVlPSJcZVszNG0iCklTSF9TSE9XX0NPTE9SX3llbGxvdz0iXGVbMzNtIgpJU0hfU0hPV19DT0xPUl9wdXJwbGU9IlxlWzM1bSIKSVNIX1NIT1dfQ09MT1JfY3lhbj0iXGVbMzZtIgpJU0hfU0hPV19DT0xPUl9ibGFjaz0iXGVbMzdtIgpJU0hfU0hPV19DT0xPUl93aGl0ZT0iXGVbMzBtIgpJU0hfU0hPV19DT0xPUl9iZ19yZWQ9IlxlWzQxbSIKSVNIX1NIT1dfQ09MT1JfYmdfZ3JlZW49IlxlWzQybSIKSVNIX1NIT1dfQ09MT1JfYmdfYmx1ZT0iXGVbNDRtIgpJU0hfU0hPV19DT0xPUl9iZ195ZWxsb3c9IlxlWzQzbSIKSVNIX1NIT1dfQ09MT1JfYmdfcHVycGxlPSJcZVs0NW0iCklTSF9TSE9XX0NPTE9SX2JnX2N5YW49IlxlWzQ2bSIKSVNIX1NIT1dfQ09MT1JfYmdfYmxhY2s9IlxlWzQ3bSIKSVNIX1NIT1dfQ09MT1JfYmdfd2hpdGU9IlxlWzQwbSIKSVNIX1NIT1dfQ09MT1JfYm9sZD0iXGVbMW0iCklTSF9TSE9XX0NPTE9SX3VuZGVybGluZT0iXGVbNG0iCklTSF9TSE9XX0NPTE9SX3JldmVyc2U9IlxlWzdtIgpJU0hfU0hPV19DT0xPUl9ibGluaz0iXGVbNW0iCklTSF9TSE9XX0NPTE9SX2VuZD0iXGVbMG0iCgo=",
        "usr/intshell/sys/cli/cli.sh": "IyEvYmluL3NoCgppc2hfc3lzX2NsaV9hbGlhcygpIHsKICAgIFsgIiQjIiA9ICIwIiBdICYmIGFsaWFzICYmIHJldHVybgogICAgWyAiJCMiID0gIjEiIF0gJiYgYWxpYXMgJDEgJiYgcmV0dXJuCiAgICBpc2hfbG9nX2FsaWFzICItZyIgIiQxIiAiPT4iICIkMiIgYnkgYF9maWxlbGluZSAyYAogICAgYWxpYXMgJDE9IiQyIgp9CmlzaF9zeXNfY2xpX3NoZWxsKCkgewogICAgcHMgfGdyZXAgIl5cICokJCJ8Z3JlcCAtdiBncmVwfGdyZXAgLW8gIlthLXpdKiQiCn0KaXNoX3N5c19jbGlfcHJvbXB0KCkgewogICAgbG9jYWwgbmFtZT0kKGhvc3RuYW1lKSAmJiBuYW1lPSR7bmFtZSMjKi19ICYmIG5hbWU9JHtuYW1lJSVcLip9CiAgICBjYXNlICIkKGlzaF9zeXNfY2xpX3NoZWxsKSIgaW4KICAgICAgICBiYXNoKQogICAgICAgICAgICBleHBvcnQgUFMxPSJcXCFAJG5hbWVbXFx0XVxcV1xcJCAiCiAgICAgICAgICAgIDs7CiAgICAgICAgenNoKQogICAgICAgICAgICBleHBvcnQgUFMxPSJcXCFAJG5hbWVbXHRdXFdcJCAiCiAgICAgICAgICAgIDs7CiAgICBlc2FjCn0KaXNoX3N5c19jbGlfcHJlcGFyZSgpIHsKICAgIGxvY2FsIHJjPSIuYmFzaHJjIjsgY2FzZSAiJChpc2hfc3lzX2NsaV9zaGVsbCkiIGluCiAgICAgICAgYmFzaCkgcmM9Ii5iYXNocmMiOzsKICAgICAgICB6c2gpIHJjPSIuenNocmMiOzsKICAgIGVzYWMKCiAgICBbIC1kIH4vLmlzaCBdIHx8IFsgIiRQV0QiID0gIiRIT01FIiBdIHx8IGxuIC1zICRQV0QvLmlzaCAkSE9NRS8uaXNoCiAgICBncmVwICJzb3VyY2Ugfi8uYmFzaF9sb2NhbCIgfi8kcmMgJj4vZGV2L251bGwgfHwgY2F0ID4+IH4vJHJjIDw8RU5ECmlmIFsgLWYgfi8uaXNoL3BsdWcuc2ggXSAmJiBzb3VyY2Ugfi8uaXNoL3BsdWcuc2g7IHRoZW4KICAgIHJlcXVpcmUgY29uZi5zaAogICAgcmVxdWlyZSBtaXNzLnNoCmZpCgpbIC1mIH4vLmJhc2hfbG9jYWwgXSAmJiBzb3VyY2Ugfi8uYmFzaF9sb2NhbApFTkQKfQo=",
        "usr/intshell/sys/cli/date.sh": "IyEvYmluL3NoCgppc2hfc3lzX2RhdGUoKSB7IGRhdGUgKyIlWS0lbS0lZCAlSDolTTolUyI7IH0KaXNoX3N5c19kYXRlX2RhdGUoKSB7IGRhdGUgKyIlWS0lbS0lZCI7IH0KaXNoX3N5c19kYXRlX3RpbWUoKSB7IGRhdGUgKyIlSDolTTolUyI7IH0KCmlzaF9zeXNfZGF0ZV95ZWFyKCkgeyBkYXRlICsiJVkiOyB9CmlzaF9zeXNfZGF0ZV9tb250aCgpIHsgZGF0ZSArIiVtIjsgfQppc2hfc3lzX2RhdGVfZGF5KCkgeyBkYXRlICsiJWQiOyB9Cgppc2hfc3lzX2RhdGVfaG91cigpIHsgZGF0ZSArIiVIIjsgfQppc2hfc3lzX2RhdGVfbWludXRlKCkgeyBkYXRlICsiJU0iOyB9CmlzaF9zeXNfZGF0ZV9zZWNvbmQoKSB7IGRhdGUgKyIlUyI7IH0KCmlzaF9zeXNfZGF0ZV93ZWVrZGF5KCkgeyBkYXRlICsiJXciOyB9CmlzaF9zeXNfZGF0ZV90aW1lem9uZSgpIHsgZGF0ZSArIiV6IjsgfQoKaXNoX3N5c19kYXRlX2ZpbGVuYW1lKCkgeyBkYXRlICsiJVklbSVkXyVIJU0lUyI7IH0KCg==",
        "usr/intshell/sys/cli/file.sh": "IyEvYmluL3NoCgppc2hfc3lzX3BhdGhfY3JlYXRlKCkgewogICAgbG9jYWwgdGFyZ2V0PSQxICYmIFsgLWQgJHt0YXJnZXQlLyp9IF0gJiYgcmV0dXJuCiAgICBbICR7dGFyZ2V0JS8qfSAhPSAke3RhcmdldH0gXSAmJiBta2RpciAtcCAke3RhcmdldCUvKn0gfHwgcmV0dXJuIDAKfQppc2hfc3lzX3BhdGhfaW5zZXJ0KCkgewogICAgZm9yIHAgaW4gIiRAIjsgZG8KICAgICAgICBlY2hvICRQQVRIfCBncmVwICIkcCIgJj4vZGV2L251bGwgfHwgZXhwb3J0IFBBVEg9JHA6JFBBVEgKICAgIGRvbmUKfQppc2hfc3lzX3BhdGhfbG9hZCgpIHsKICAgIGxvY2FsIHBhdGg9JHtDVFhfUk9PVDo9JFBXRH0KICAgIGZvciBsaW5lIGluIGBjYXQgJHtwYXRofS9ldGMvcGF0aCAyPi9kZXYvbnVsbGA7IGRvCiAgICAgICAgaWYgZWNobyAkbGluZXwgZ3JlcCAtdiAiXi8iICY+L2Rldi9udWxsOyB0aGVuIGxpbmU9JHBhdGgvJGxpbmU7IGZpCiAgICAgICAgaXNoX3N5c19wYXRoX2luc2VydCAkbGluZQogICAgZG9uZQp9CmlzaF9zeXNfZmlsZV9zaXplKCkgewogICAgbG9jYWwgc2l6ZT1gbHMgLXMgJDEgMj4vZGV2L251bGx8IGdyZXAgLW8gIlswLTldKiJ8aGVhZCAtbjFgCiAgICBbICIkc2l6ZSIgPSAiIiBdICYmIHNpemU9MDsgZWNobyAkc2l6ZQp9CmlzaF9zeXNfZmlsZV9jcmVhdGUoKSB7CiAgICBbIC1lICQxIF0gJiYgcmV0dXJuIHx8IGlzaF9sb2dfZGVidWcgLWcgImNyZWF0ZSBmaWxlICR7UFdEfSAkMSIKICAgIGlzaF9zeXNfcGF0aF9jcmVhdGUgJDEgJiYgY2F0ID4gJDEKfQppc2hfc3lzX2xpbmtfY3JlYXRlKCkgewogICAgWyAteiAiJDIiIF0gJiYgcmV0dXJuCiAgICBbIC1lICIkMSIgXSAmJiByZXR1cm4gfHwgaXNoX2xvZ19kZWJ1ZyAtZyAiY3JlYXRlIGxpbmsgJDEgPT4gJDIiCiAgICBpc2hfc3lzX3BhdGhfY3JlYXRlICQxICYmIGxuIC1zICQyICQxCn0KCg==",
        "usr/intshell/sys/sys.sh": "IyEvYmluL3NoCgpyZXF1aXJlIHN5cy9jbGkvY2xpLnNoCnJlcXVpcmUgc3lzL2NsaS9kYXRlLnNoCnJlcXVpcmUgc3lzL2NsaS9maWxlLnNoCgpyZXF1aXJlIHN5cy93ZWIvd2ViLnNoCnJlcXVpcmUgc3lzL3dlYi9kZXYuc2gKCg==",
        "usr/intshell/sys/web/dev.sh": "IyEvYmluL3NoCgppc2hfc3lzX2Rldl9zaWQ9JHtpc2hfc3lzX2Rldl9zaWQ6PSIifQppc2hfc3lzX2Rldl9zaWQoKSB7IGVjaG8gJGlzaF9zeXNfZGV2X3NpZDsgfQppc2hfc3lzX2Rldl9yZXF1ZXN0KCkgewogICAgbG9jYWwgdXJsPSRjdHhfZGV2L2NvZGUvYmFzaC8kMSAmJiBzaGlmdAogICAgaXNoX3N5c193ZWJfcmVxdWVzdCAiJHVybCIgIiRAIiBwd2QgIiR7UFdEfSIgc2lkICIkaXNoX3N5c19kZXZfc2lkIiBwb2QgJGN0eF9wb2QKfQppc2hfc3lzX2Rldl9zb3VyY2UoKSB7CiAgICBsb2NhbCBjdHhfdGVtcD0kKG1rdGVtcCk7IGlzaF9zeXNfZGV2X3JlcXVlc3QgIiRAIiA+JGN0eF90ZW1wICYmIHNvdXJjZSAkY3R4X3RlbXAgIiRAIgp9CmlzaF9zeXNfZGV2X2NvbmZpZ3MoKSB7CiAgICBpc2hfc3lzX2Rldl9yZXF1ZXN0IGNvbmZpZ3MKfQppc2hfc3lzX2Rldl9xcmNvZGUoKSB7CiAgICBpc2hfc3lzX2Rldl9yZXF1ZXN0IHFyY29kZSB0ZXh0ICIkQCIKfQppc2hfc3lzX2Rldl9sb2dvdXQoKSB7CiAgICBpc2hfc3lzX2Rldl9yZXF1ZXN0IHNlc3MgY21kcyBsb2dvdXQgMj4vZGV2L251bGwgJiYgaXNoX3N5c19kZXZfc2lkPSIiCn0KaXNoX3N5c19kZXZfbG9naW4oKSB7CiAgICBpc2hfc3lzX2Rldl9zaWQ9JChpc2hfc3lzX2Rldl9yZXF1ZXN0IHNlc3MgdXNlcm5hbWUgIiQod2hvYW1pKSIgaG9zdG5hbWUgIiQoaG9zdG5hbWUpIiBwaWQgIiQkIikKfQoKaXNoX3N5c19kZXZfdXBsb2FkKCkgewogICAgWyAiJCMiID0gIjAiIF0gJiYgaXNoX3N5c19kZXZfcmVxdWVzdCBkb3dubG9hZCAmJiByZXR1cm4KICAgIGxvY2FsIGZpbGU9JDEgJiYgc2hpZnQgJiYgaXNoX3N5c19kZXZfcmVxdWVzdCB1cGxvYWQgdXBsb2FkICJAJGZpbGUiICRACn0KaXNoX3N5c19kZXZfZG93bmxvYWQoKSB7CiAgICBbICIkIyIgPSAiMCIgXSAmJiBpc2hfc3lzX2Rldl9yZXF1ZXN0IGRvd25sb2FkICYmIHJldHVybgogICAgaXNoX3N5c19kZXZfcmVxdWVzdCBkb3dubG9hZCBjbWRzICRACn0KCmlzaF9zeXNfZGV2X3RyYXNoPSR7aXNoX3N5c19kZXZfdHJhc2g6PX4vdHJhc2h9CmlzaF9zeXNfZGV2X3RyYXNoKCkgewogICAgbG9jYWwgZnJvbT0kUFdELyQxIHRvPSRpc2hfc3lzX2Rldl90cmFzaC8kKGlzaF9zeXNfZGF0ZV9maWxlbmFtZSktYGVjaG8gJFBXRC8kMXwgdHIgJy8nICdfJ2AKICAgIGxvY2FsIHNpemU9YGR1IC1zYiAkZnJvbSAyPi9kZXYvbnVsbCB8Y3V0IC1mMSAyPi9kZXYvbnVsbGAKICAgIGlzaF9zeXNfZGV2X3JlcXVlc3QgdHJhc2ggY21kcyBpbnNlcnQgc2l6ZSAiJHNpemUiIGZyb20gIiRmcm9tIiB0byAiJHRvIiAmPi9kZXYvbnVsbAogICAgbWtkaXIgLXAgJGlzaF9zeXNfZGV2X3RyYXNoICY+L2Rldi9udWxsOyBtdiAkZnJvbSAkdG8KfQoKaXNoX3N5c19kZXZfZmF2b3IoKSB7CiAgICBpZiBbIC16ICIkMSIgXTsgdGhlbiBpc2hfc3lzX2Rldl9yZXF1ZXN0IGZhdm9yOyByZXR1cm47IGZpCiAgICBpc2hfc3lzX2Rldl9yZXF1ZXN0IGZhdm9yIGNtZHMgZXhwb3J0IHpvbmUgIiQxIiBuYW1lICIkMiIKfQp6c2hhZGRoaXN0b3J5KCkgewogICAgbG9jYWwgbmFtZT1gaGlzdG9yeXx0YWlsIC1uMXxncmVwIC1vICJbMC05XVwrXCAiYAogICAgWyAtbiAiJG5hbWUiIF0gJiYgWyAiJGlzaF9zeXNfZGV2X3N5bmNfbGFzdCIgIT0gIiRuYW1lIiBdICYmICgobmFtZSA9IG5hbWUgKyAxKSkgJiYgaXNoX3N5c19kZXZfcmVxdWVzdCBzeW5jIGNtZHMgaGlzdG9yeSBhcmcgIiRuYW1lIGBkYXRlICsiJVktJW0tJWQgJUg6JU06JVMiYCAkMSIgPi9kZXYvbnVsbAogICAgaXNoX3N5c19kZXZfc3luY19sYXN0PSRuYW1lCn0KaXNoX3N5c19kZXZfc3luYygpIHsKICAgIGxvY2FsIGNtZD1gSElTVFRJTUVGT1JNQVQ9IiVGICVUICIgaGlzdG9yeXx0YWlsIC1uMWAKICAgIFsgLW4gIiRjbWQiIF0gJiYgWyAiJGlzaF9zeXNfZGV2X3N5bmNfbGFzdCIgIT0gIiRjbWQiIF0gJiYgaXNoX3N5c19kZXZfcmVxdWVzdCBzeW5jIFNIRUxMICIkU0hFTEwiIGNtZHMgaGlzdG9yeSBhcmcgIiRjbWQiID4vZGV2L251bGwKICAgIGlzaF9zeXNfZGV2X3N5bmNfbGFzdD0kY21kCn0KaXNoX3N5c19kZXZfZXhpdCgpIHsKICAgIGlzaF9zeXNfZGV2X2xvZ291dAp9CmlzaF9zeXNfZGV2X2luaXQoKSB7CiAgICBpc2hfc3lzX2Rldl9sb2dpbgogICAgaWYgYmluZCAmPi9kZXYvbnVsbDsgdGhlbiAjIGJhc2gKICAgICAgICB0cmFwIGlzaF9zeXNfZGV2X2V4aXQgRVhJVAogICAgICAgIHRyYXAgaXNoX3N5c19kZXZfc3luYyBERUJVRwoKICAgIGVsaWYgYmluZGtleSAmPi9kZXYvbnVsbDsgdGhlbiAjIHpzaAogICAgICAgIGVjaG8gPiAvZGV2L251bGwKICAgIGZpCn0KIyBpc2hfc3lzX2Rldl9pbml0Cgppc2hfc3lzX2Rldl9ydW5fbG9naW4oKSB7CiAgICBsb2NhbCB1cmw9JGN0eF9kZXYvY2hhdC9jbWQvd2ViLmNvZGUuYmFzaC5ncmFudC8kaXNoX3N5c19kZXZfc2lkCiAgICBpc2hfc3lzX2Rldl9xcmNvZGUgJHVybAogICAgZWNobwp9CmlzaF9zeXNfZGV2X3J1bl9wcmVsb2FkPSIiCmlzaF9zeXNfZGV2X3J1bl9wcmVwYXJlKCkgewogICAgbG9jYWwgY21kPSJydW4vYWN0aW9uL2NvbW1hbmQiOyBmb3Iga2V5IGluICIkQCI7IGRvIGNtZD0kY21kIi8iJGtleTsgZG9uZQogICAgaWYgWyAiJGlzaF9zeXNfZGV2X3J1bl9wcmVsb2FkIiA9ICIiIF07IHRoZW4KICAgICAgICBpc2hfc3lzX2Rldl9ydW5fcHJlbG9hZD0kKG1rdGVtcCk7IGlzaF9zeXNfZGV2X3JlcXVlc3QgJGNtZCA+JGlzaF9zeXNfZGV2X3J1bl9wcmVsb2FkCiAgICBmaQogICAgc291cmNlICRpc2hfc3lzX2Rldl9ydW5fcHJlbG9hZCAkaXNoX3N5c19kZXZfcnVuX291dHB1dAp9CmlzaF9zeXNfZGV2X3J1bl9vdXRwdXQ9IiIKaXNoX3N5c19kZXZfcnVuKCkgewogICAgaWYgWyAiJCoiID0gIiIgXTsgdGhlbiByZXR1cm47IGZpCiAgICBsb2NhbCBjbWQ9InJ1bi9hY3Rpb24vcnVuIjsgZm9yIGtleSBpbiAiJEAiOyBkbyBjbWQ9JGNtZCIvIiRrZXk7IGRvbmUKICAgIGlzaF9zeXNfZGV2X3J1bl9vdXRwdXQ9JChta3RlbXApOyBpc2hfc3lzX2Rldl9yZXF1ZXN0ICRjbWQgPiRpc2hfc3lzX2Rldl9ydW5fb3V0cHV0CiAgICBpZiBoZWFkIC1uMSAkaXNoX3N5c19kZXZfcnVuX291dHB1dHxncmVwICJ3YXJuOiBub3QgbG9naW4iICY+L2Rldi9udWxsOyB0aGVuCiAgICAgICAgaXNoX3N5c19kZXZfcnVuX2xvZ2luOyByZXR1cm4KICAgIGVsaWYgaGVhZCAtbjEgJGlzaF9zeXNfZGV2X3J1bl9vdXRwdXR8Z3JlcCAid2Fybjogbm90IHJpZ2h0IiAmPi9kZXYvbnVsbDsgdGhlbgogICAgICAgIGlzaF9zeXNfZGV2X3J1bl9sb2dpbjsgcmV0dXJuCiAgICBlbHNlCiAgICAgICAgaXNoX3N5c19kZXZfcnVuX3ByZXBhcmUgIiRAIgogICAgZmkKfQo=",
        "usr/intshell/sys/web/web.sh": "IyEvYmluL3NoCgppc2hfc3lzX3dlYl93b3JkKCkgewogICAgZWNobyAiJCoifHNlZCAicy9cIC8lMjAvZyJ8c2VkICJzL3wvJTdDL2cifHNlZCAicy9cOy8lM0IvZyJ8c2VkICJzL1xbLyU1Qi9nInxzZWQgInMvXF0vJTVEL2ciCn0KaXNoX3N5c193ZWJfcmVxdWVzdCgpIHsKICAgIGxvY2FsIHVybD0iJDEiICYmIHNoaWZ0ICYmIHdoaWxlIFsgIiQjIiAtZ3QgIjEiIF07IGRvCiAgICAgICAgZWNobyAiLUYiICIkMT0kKGlzaF9zeXNfd2ViX3dvcmQgJDIpIiAmJiBzaGlmdCAyCiAgICBkb25lIHx4YXJncyBjdXJsIC1zTCAkdXJsCn0K",

        "src/h1/h1.go": "cGFja2FnZSBoMQoKaW1wb3J0ICgKCSJzaHlsaW51eC5jb20veC9pY2UiCikKCnR5cGUgaDEgc3RydWN0IHsKCWljZS5ab25lCgoJbGlzdCBzdHJpbmcgYG5hbWU6Imxpc3Qgem9uZSBpZCBhdXRvIGluc2VydCIgaGVscDoi56S65L6LImAKfQoKZnVuYyAocyBoMSkgTGlzdChtICppY2UuTWVzc2FnZSwgYXJnIC4uLnN0cmluZykgewoJcy5ab25lLkxpc3QobSwgYXJnLi4uKQp9CgpmdW5jIGluaXQoKSB7IGljZS5DbWQoIndlYi5jb2RlLmgxLmgxIiwgaDF7fSkgfQo=",
        "src/h1/h1.js": "Vm9sY2Fub3MoIm9uaW1wb3J0Iiwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCW1zZy5FY2hvKCJoZWxsbyB3b3JsZCIpCgltc2cuRHVtcChjYW4pCn19KQ==",
        "src/h1/h1.shy": "Y2hhcHRlciAiaDEiCgpmaWVsZCAi56S65L6LIiB3ZWIuY29kZS5oMS5oMQo=",
        "src/help/devops.shy": "c291cmNlIGluZGV4LnNoeQoKdGl0bGUgIue8lueoi+aJi+WGjCIK",
        "src/help/devops/context.shy": "Y2hhcHRlciAi5qGG5p6257yW56iLIgoK",
        "src/help/devops/module.shy": "Y2hhcHRlciAi5qih5Z2X57yW56iLIgoK",
        "src/help/devops/script.shy": "Y2hhcHRlciAi6ISa5pys57yW56iLIgoKCg==",
        "src/help/index.shy": "bmF2bWVudSBgCuWbnuWIsOmmlumhtSBob21lCuWFpemXqOeugOS7iyB0dXRvci5zaHkK5L2/55So5omL5YaMIG1hbnVhbC5zaHkKICDlronoo4Xlkb3ku6QgbWFudWFsL2luc3RhbGwuc2h5CiAg5bqU55So576k57uEIG1hbnVhbC9yaXZlci5zaHkKICDlhbHkuqvpk77mjqUgbWFudWFsL3NoYXJlLnNoeQogIOW3peS9nOepuumXtCBtYW51YWwvc3BhY2Uuc2h5CiAg5bel5L2c6ISa5pysIG1hbnVhbC93b3JkLnNoeQoK5pyN5Yqh5omL5YaMIHNlcnZpY2Uuc2h5CiAg6K6k6K+B5pyN5YqhIHNlcnZpY2UvYXV0aC5zaHkKICDln5/lkI3mnI3liqEgc2VydmljZS9kb21haW4uc2h5CiAg56m66Ze05pyN5YqhIHNlcnZpY2Uvc3BhY2Uuc2h5CiAg5rqQ56CB5pyN5YqhIHNlcnZpY2UvY29kZS5zaHkKCue8lueoi+aJi+WGjCBkZXZvcHMuc2h5CiAg6ISa5pys57yW56iLIGRldm9wcy9zY3JpcHQuc2h5CiAg5qih5Z2X57yW56iLIGRldm9wcy9tb2R1bGUuc2h5CiAg5qGG5p6257yW56iLIGRldm9wcy9jb250ZXh0LnNoeQoK5Y+C6ICD5omL5YaMIHJlZmVyLnNoeQogIOWPguaVsOWIl+ihqCByZWZlci9ydW50aW1lLnNoeQogIOWHveaVsOWIl+ihqCByZWZlci9tZXNzYWdlLnNoeQogIOaooeWdl+WIl+ihqCByZWZlci9jb250ZXh0LnNoeQogIOWRveS7pOWIl+ihqCByZWZlci9jb21tYW5kLnNoeQogIOS6i+S7tuWIl+ihqCByZWZlci9zaWduYWwuc2h5CiAg5pyN5Yqh5YiX6KGoIHJlZmVyL3NwYWNlLnNoeQpgCg==",
        "src/help/manual.shy": "c291cmNlIGluZGV4LnNoeQoKdGl0bGUgIuS9v+eUqOaJi+WGjCIKCg==",
        "src/help/manual/install.shy": "Y2hhcHRlciAi5a6J6KOF5ZG95LukIgoKd2ViLmNvZGUucHVibGlzaCBjb250ZXh0cyBiaW5hcnkKCg==",
        "src/help/manual/river.shy": "Y2hhcHRlciAi5bqU55So57uEIgoKZmllbGQgIuW6lOeUqOe7hCIgcml2ZXIK",
        "src/help/manual/share.shy": "Y2hhcHRlciAi5YWx5Lqr6ZO+5o6lIgoKZmllbGQgIuWFseS6q+mTviIgc2hhcmUK",
        "src/help/manual/space.shy": "Y2hhcHRlciAi5bel5L2c56m66Ze0IgoKZmllbGQgIuepuumXtOermSIgc3BhY2UKCg==",
        "src/help/manual/word.shy": "Y2hhcHRlciAi5bel5L2c6ISa5pysIgoK",
        "src/help/refer.shy": "c291cmNlIGluZGV4LnNoeQoKdGl0bGUgIuWPguiAg+aJi+WGjCIKCg==",
        "src/help/refer/command.shy": "Y2hhcHRlciAi5ZG95Luk5YiX6KGoIgoKdGFibGUgcnVuIGNvbW1hbmQK",
        "src/help/refer/context.shy": "Y2hhcHRlciAi5qih5Z2X5YiX6KGoIgoKdGFibGUgcnVuIGNvbnRleHQK",
        "src/help/refer/message.shy": "Y2hhcHRlciAi5Ye95pWw5YiX6KGoIgoKdGFibGUgcnVuIG1lc3NhZ2UKCg==",
        "src/help/refer/runtime.shy": "Y2hhcHRlciAi5Y+C5pWw5YiX6KGoIgoKanNvbiBydW4gcnVudGltZQoK",
        "src/help/refer/signal.shy": "Y2hhcHRlciAi5ZG95Luk5YiX6KGoIgoKdGFibGUgcnVuIHNpZ25hbAoK",
        "src/help/refer/space.shy": "Y2hhcHRlciAi5pyN5Yqh5YiX6KGoIgoKdGFibGUgcnVuIHNwYWNlCgo=",
        "src/help/service.shy": "c291cmNlIGluZGV4LnNoeQoKY2hhcHRlciAi5pyN5Yqh5omL5YaMIgoKZmllbGQgIuacjeWKoSIgc3BpZGUK",
        "src/help/tutor.shy": "c291cmNlIGluZGV4LnNoeQoKdGl0bGUgIuWFpemXqOeugOS7iyIKYnJpZWYgIue7iOerr+W3peWFt+mTvu+8jOS4gOS4quWPr+S7peW9k+aIkOW6lOeUqOahhuaetuOAgee9kee7nOW5s+WPsOOAgeaTjeS9nOezu+e7n+adpeS9v+eUqOeahOi2hee6p+mhueebruOAgiIKCm9yZGVyIGAK5piT6YOo572y77yMY29udGV4dHMg5L2/55SoIGdvbGFuZyDlvIDlj5HvvIzmnIDnu4jlj6rmnInkuIDkuKrmiafooYzmlofku7bvvIzlkIzml7bliY3nq6/ku6PnoIHkuZ/ooqvmiZPljIXov5vkuobmiafooYzmlofku7bvvIzlj6/ku6XlnKjku7vmhI/mnLrlmajkuIrkuIDplK7lkK/liqjmiYDmnInmnI3liqEK5piT5byA5Y+R77yMY29udGV4dHMg5a6a5LmJ5LqG57uf5LiA55qE5qCH5YeG5o6l5Y+j77yM5omA5pyJ55qE5Yqf6IO96YO95piv5Lul5qih5Z2X5YyW55qE5pa55byP77yM6L+b6KGM5byA5Y+R5LiO5L2/55So77yM5Y+v5Lul6Ieq6KGM5byA5Y+R5Ye65Lu75oSP5Yqf6IO955qE5qih5Z2XCuaYk+WumuWItu+8jGNvbnRleHRzIOaPkOS+m+S6huWQhOenjeWcuuaZr+WMluS4juS4quaAp+WMlueahOS9v+eUqOaWueW8j++8jOeUqOaIt+WPr+S7pee7hOWQiOS7u+aEj+eahOWKn+iDve+8jOiHquWKqOeUn+aIkOWQhOenjee9kemhte+8jOS7juiAjOW/q+mAn+WIm+W7uuWQhOenjee9keermQoK5aSa55So5oi377yMY29udGV4dHMg5Y+v5Lul6YCa6L+H5Lu75oSP57uI56uv6L+b6KGM6K6/6Zeu77yM5omA5pyJ55qE5qih5Z2X5Yqf6IO96YO95Y+v5Lul5a6e546w5aSa55So5oi355qE5Zyo57q/5Y2P5ZCMCuWkmue+pOe7hO+8jGNvbnRleHRzIOeahOiuvuiuoeWujOWFqOWfuuS6jue+pOe7hOeahOaWueW8j++8jOWOu+e7hOe7h+eUqOaIt+OAgeadg+mZkOOAgeepuumXtOOAgeiuvuWkh+OAgeWKn+iDveOAgeaWh+ahowrlpJrnqbrpl7TvvIzlnKjlkIzkuIDorr7lpIfkuIrvvIzlj6/ku6XliJvlu7rlh7rku7vmhI/lpJrkuKrnqbrpl7TvvIzmr4/kuKrnqbrpl7Tpg73mmK/kuIDkuKrlrozlhajni6znq4vnmoTov5DooYzljZXlhYMK5aSa6K6+5aSH77yM5Lu75oSP6YOo572y5LqGIGNvbnRleHRzIOeahOiuvuWkh++8jOmDveWPr+S7peebuOS6kui/nuaOpee7hOWQiOaIkOS4gOS4que9kee7nO+8jOmAmui/h+S7u+S9leS4gOWPsOiuvuWkh++8jOmDveWPr+S7peS9v+eUqOaVtOS4que9kee7nOeahOaJgOacieiuvuWkh+eahOaJgOacieWKn+iDvQpgCgpjaGFwdGVyICLlronoo4XkuI7lkK/liqgiCnNwYXJrIHNoZWxsIGAKY3R4X3RlbXA9JChta3RlbXApXDsgY3VybCAtZnNTTCBodHRwczovL3NoeWxpbnV4LmNvbSAtbyAkY3R4X3RlbXBcOyBzb3VyY2UgJGN0eF90ZW1wIGJpbmFyeQpgCnNwYXJrIGAK5ZyoIGxpbnV4IOaIliBtYWNPU1gg5LiK77yM5omT5byA5ZG95Luk6KGM57uI56uv77yM55u05o6l5omn6KGM5aaC5LiK5ZG95Luk77yM5L6/5Y+v5Lul5LiL6L295bm25ZCv5YqoIGNvbnRleHRz77yM5aaC5p6c5ZyoIHdpbmRvd3Mg5LiK77yM5bu66K6u5a6J6KOFIDxhIGhyZWY9Imh0dHBzOi8vZ2l0LXNjbS5jb20vZG93bmxvYWQvd2luIj5HaXRCYXNoPC9hPu+8jOeEtuWQjuWcqOe7iOerr+S4reaJp+ihjOWuieijheWRveS7pOOAggpgCnNwYXJrIGAK5pyN5Yqh5ZCv5Yqo5ZCO77yM5L6/5Y+v6YCa6L+H5ZG95Luk5Lqk5LqS55qE5pa55byP5L2/55So5omA5pyJ5Yqf6IO944CC5Lmf5Y+v5Lul5omT5byA572R6aG1IDxhIGhyZWY9Imh0dHA6Ly9sb2NhbGhvc3Q6OTAyMCI+PC9hPu+8jOeUqOeVjOmdouS6pOS6kueahOaWueW8j+S9v+eUqOOAggpgCnNwYXJrIGAK5pyN5Yqh5ZCv5Yqo5ZCO77yM5L6/5Y+v6YCa6L+H5ZG95Luk5Lqk5LqS55qE5pa55byP5L2/55So5omA5pyJ5Yqf6IO944CC5Lmf5Y+v5Lul5omT5byA572R6aG1IDxhIGhyZWY9Imh0dHA6Ly9sb2NhbGhvc3Q6OTAyMCI+PC9hPu+8jOeUqOeVjOmdouS6pOS6kueahOaWueW8j+S9v+eUqOOAggrlpoLmnpzkuI3mmK/lnKjmnKzmnLrlkK/liqjnmoTmnI3liqHvvIzorr/pl67nvZHpobXml7bpnIDopoHnmbvlvZXorqTor4HvvIzpu5jorqTnlKjmiLflkI0gcm9vdCDlr4bnoIEgcm9vdO+8jOWPr+S7peWcqOWQr+WKqOWRveS7pOaXtuWKoOWPguaVsOaMh+Wumu+8jOS5n+WPr+WcqOWQr+WKqOWQjumAmui/h+e9kemhteS/ruaUueWvhueggeOAggpgCgpzZWN0aW9uICLlkb3ku6TkuqTkupIiCnNwYXJrIGAKY29udGV4dHMg5Zyo5ZCv5Yqo5pe277yM6buY6K6k5Lya5ZCv5Yqo5LiA5Liq57uI56uv6Kej5p6Q5Zmo77yM5Y+v5Lul5YOPIHNoZWxsIOS4gOagt+ino+aekOW5tuaJp+ihjOWRveS7pOOAggpjb250ZXh0cyDkuK3nmoTmiYDmnInlip/og73pg73mmK/ku6XmqKHlnZflkb3ku6TnmoTmlrnlvI/lvIDlj5HnmoTvvIzmiYDku6XpgJrov4flkb3ku6Tlj6/ku6Xkvb/nlKjmiYDmnInnmoTlip/og73jgIIKYApzZWN0aW9uICLnvZHpobXkuqTkupIiCnNwYXJrIGAKY29udGV4dHMg6Ieq5bim55qE5LiA5Liq5YmN56uv5qGG5p6277yM5Lya5a+55qih5Z2X5ZG95Luk6L+b6KGM6Kej5p6Q5bm26Ieq5Yqo55Sf5oiQ5YmN56uv57uE5Lu277yM5omA5pyJ55qE5qih5Z2X5ZG95Luk6ZqP5pe26YO95Y+v5Lul55So57uE5Lu255qE5b2i5byP5re75Yqg5Yiw5Lu75oSP572R6aG15LiK44CCCui/meagt+WwseWPr+S7pemaj+aXtumaj+WcsOeahOagueaNruWcuuaZr+S4jumcgOaxgu+8jOWwhuaJgOmcgOimgeeahOWKn+iDveW/q+mAn+eahOe7hOWQiOWIsOS4gOi1t++8jOWcqOS4gOS4que9kemhteS4remrmOaViOmhuueVheeahOWujOaIkOS4gOS4quWujOaVtOeahOW3peS9nOa1geOAggpgCgpjaGFwdGVyICLliJvlu7rnqbrpl7QiCnNwYXJrIGAKY29udGV4dHMg5Zyo5LiA5Y+w6K6+5aSH5LiK5Y+v5Lul5ZCv5Yqo5aSa5Liq6L+b56iL77yM57G75Ly8IG5naW54IOS4u+S7juW8j+eahOi/m+eoi+aooeWei++8jArmnInkuIDkuKogc2VydmVyIOiKgueCueS4juWkmuS4qiB3b3JrZXIg6IqC54K577yM5q+P5LiqIHdvcmtlciDoioLngrnpg73ov5DooYzlnKjlkIToh6rnmoTnm67lvZXkuIvvvIzmi6XmnInni6znq4vnmoTnqbrpl7TjgIIKc2VydmVyIOiKgueCueS8muWQr+WKqCB3ZWIg5pyN5Yqh5bm26Ieq5Yqo55Sf5oiQ572R6aG177yM5bCG572R6aG15Lit55qE5ZG95Luk6K+35rGC5YiG5Y+R5Yiw5ZCE5LiqIHdvcmtlciDoioLngrnkuIrvvIzlubblsIbmiafooYznu5PmnpzmmL7npLrliLDnvZHpobXkuIrjgIIKYApzZWN0aW9uICLnvZHpobXmk43kvZwiCnNwYXJrIGAK5omT5byA572R6aG1IDxhIGhyZWY9Imh0dHA6Ly9sb2NhbGhvc3Q6OTAyMCI+PC9hPiDvvIzmib7liLDliJvlu7roj5zljZXvvIjoj5zljZXmoI8gLT4g5Yib5bu6IC0+IOWIm+W7uuepuumXtO+8ie+8jArlnKjlvLnlh7rnmoTovpPlhaXmoYbkuK3vvIzovpPlhaUgbmFtZSDlkI7vvIzngrnlh7vmj5DkuqTljbPlj6/liJvlu7rmlrDnmoTnqbrpl7TvvIxzZXJ2ZXIg6IqC54K55Lya5ZCv5Yqo5LiA5Liq5paw55qEIHdvcmtlciDov5vnqIvmnaXnrqHnkIbmraTnqbrpl7TjgIIK6ZqP5ZCO5Lya6Ieq5Yqo5omT5byA5LiA5Liq5paw55qE572R6aG1IGh0dHA6Ly9sb2NhbGhvc3Q6OTAyMC9jaGF0L3BvZC94eHh477yM6YCa6L+H6L+Z5Liq572R6aG15bCx5Y+v5Lul5L2/55So5paw56m66Ze055qE5ZCE56eN5Yqf6IO944CCCmAKCnNlY3Rpb24gIuWRveS7pOaTjeS9nCIKc3BhcmsgYOS5n+WPr+S7peWcqOWQr+WKqOacjeWKoeeahOWRveS7pOihjOS4reWIm+W7uuepuumXtO+8jOi+k+WFpeWmguS4i+WRveS7pOWNs+WPr++8jGRlbW8g5piv5paw56m66Ze055qE5ZCN56ew77yM5Y+v5Lul6Ieq6KGM5a6a5LmJ44CCYApzcGFyayBzaGVsbCBgZHJlYW0gc3RhcnQgbmFtZSBkZW1vYApzcGFyayBg54S25ZCO6YCa6L+HIHNwYWNlIOWRveS7pO+8jOWPr+S7peWQkeatpOepuumXtOS4i+WPkeWQhOenjeWRveS7pO+8jOW5tuWwhuaJp+ihjOe7k+aenOaYvuekuuWIsOe7iOerr2AKc3Bhcmsgc2hlbGwgYHNwYWNlIGRlbW8gc3lzdGVtIHB3ZGAKCmNoYXB0ZXIgIuWIm+W7uuaooeWdlyIKc3BhcmsgYApjb250ZXh0cyDmj5DkvpvkuobkuIDkuKrlrozmlbTnmoTliY3lkI7nq6/moYbmnrbvvIzlj6/ku6Xlv6vpgJ/nmoTlvIDlj5Hlh7rlkITnp43lip/og73mqKHlnZfjgIIKY29udGV4dHMg5Lya6Ieq5Yqo5bCG6L+Z5Lqb5Yqf6IO95qih5Z2X6L2s5o2i5oiQ57uI56uv5ZG95Luk44CB5YmN56uv57uE5Lu244CB6L+c56iL6LCD55So562J77yM5LuO6ICM5YGa5Yiw5LiA5Lu95Luj56CB5Y+v5Lul6ZqP5pe26ZqP5Zyw6KKr5ZCE56eN5pa55byP5L2/55So44CCCmAKc2VjdGlvbiAi5re75Yqg5Luj56CBIgpzcGFyayBgCnZpbWVyIOWRveS7pOaPkOS+m+S6huS7o+eggee8lui+keeahOWKn+iDve+8jOmAmui/hyBhdXRvZ2VuIOWtkOWRveS7pOWPr+S7peeUn+aIkOaooeWdl+eahOekuuS+i+S7o+eggeOAguWcqOatpOWfuuehgOS4iua3u+WKoOiHquW3seeahOS7o+eggeWNs+WPr+OAggrlpoLkuIvlkb3ku6TvvIzkvJroh6rliqjnlJ/miJDkuIDkuKogc3JjL2hpL2hpLmdvIOeahOaooeWdl+aWh+S7tu+8jOW5tuWcqCBzcmMvbWFpbi5nbyDkuK3lvJXnlKjmraTmqKHlnZfjgIIKYApzcGFyayBzaGVsbCBgdmltZXIgYXV0b2dlbiBtYWluIHNyYy9tYWluLmdvIG5hbWUgaGlgCmZpZWxkICJzcmMvaGkvaGkuZ28iIHdlYi5jb2RlLmlubmVyIHNwYXJrIGAKcGFja2FnZSBoaQoKaW1wb3J0ICgKCSJzaHlsaW51eC5jb20veC9pY2UiCikKCnR5cGUgaGkgc3RydWN0IHsKCWljZS5ab25lCn0KCmZ1bmMgKGggaGkpIExpc3QobSAqaWNlLk1lc3NhZ2UsIGFyZyAuLi5zdHJpbmcpIHsKCWguWm9uZS5MaXN0KG0sIGFyZy4uLikKfQoKZnVuYyBpbml0KCkgeyBpY2UuQ21kKCJ3ZWIuY29kZS5oaS5oaSIsIGhpe30pIH0KYAoKc2VjdGlvbiAi57yW6K+R6aG555uuIgpzcGFyayBgCnZpbWVyIOeahCBjb21waWxlIOWtkOWRveS7pO+8jOaPkOS+m+S6hue8luivkeeahOWKn+iDve+8jOe8luivkeaIkOWKn+WQju+8jOacjeWKoei/m+eoi+S8muiHquWKqOmHjeWQr+OAggpgCnNwYXJrIHNoZWxsIGB2aW1lciBjb21waWxlYAoKc2VjdGlvbiAi5omn6KGM5ZG95LukIgpzcGFyayBg5pyN5Yqh6YeN5ZCv5ZCO77yM5Y2z5Y+v6YCa6L+HIHdlYi5jb2RlLmhpLmhpIOWRveS7pOS9v+eUqOaWsOWKn+iDveOAgmluc2VydCDlrZDlkb3ku6Tlj6/ku6Xmt7vliqDmlbDmja7vvIzkuLvlkb3ku6Tmn6XnnIvmlbDmja7jgIJgCnNwYXJrIHNoZWxsIGB3ZWIuY29kZS5oaS5oaSBpbnNlcnQgem9uZSBoaSB0ZXh0IGhlbGxvYApzcGFyayBzaGVsbCBgd2ViLmNvZGUuaGkuaGlgCgpjaGFwdGVyICLliJvlu7rnvZHnq5kiCnNwYXJrIGAK6YCa6L+HIGNvbnRleHRzIOWQr+WKqOS6huWkmuS4quepuumXtOOAgea3u+WKoOS6huWkmuS4quWRveS7pOWQju+8jOWwseWPr+S7peWwhui/meS6m+WFg+e0oOW/q+mAn+e7hOijheaIkOWQhOenjee9kemhte+8jOS7juiAjOWIm+W7uuWHuuWQhOenjeWQhOagt+eahOe9keermeOAggpgCnNwYXJrIGBjb250ZXh0cyDpgJrov4fkuIDnp43pnZ7luLjnroDljZXnmoTmj4/ov7DmgKfor63oqIDvvIznlKjnuq/mlofmnKznmoTmlrnlvI/lrprkuYnnvZHnq5njgIJgCnNwYXJrIGDlnKjnm67lvZUgc3JjL3dlYnNpdGUvIOS4i+WIm+W7uuaWh+S7tiBoaS50eHTvvIzmiZPlvIAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo5MDIwL2NoYXQvd2Vic2l0ZS9oaS50eHQiPjwvYT4g5Y2z5Y+v5p+l55yL6Ieq5Yqo55Sf5oiQ55qE572R6aG1YApmaWVsZCAic3JjL3dlYnNpdGUvaGkudHh0IiB3ZWIuY29kZS5pbm5lciBzcGFyayBgCuezu+e7n+euoeeQhgoJ57O757uf5ZG95LukCgkJY2xpLnJ1bnRpbWUKCQljbGkuc3lzdGVtCgkJY2xpLnFyY29kZQoJ5paH5Lu25ZG95LukCgkJbmZzLmRpcgoJCW5mcy5jYXQKCQluZnMudGFpbApgCgpzcGFyayBgCnNyYy93ZWJzaXRlLyDnm67lvZXmmK/lm7rlrprnmoTvvIxjb250ZXh0cyDlj6rkvJrlr7nmraTnm67lvZXnmoQgdHh0IOaWh+S7tui/m+ihjOino+aekOOAggrmr4/kuIDooYzpg73mmK/kuIDkuKrmoJHnmoToioLngrnvvIzpgJrov4fnvKnov5vku6PooajlsYLnuqfvvIzpgJrov4cga2V5IHZhbHVlIOeahOW9ouW8j+mZhOWKoOWQhOenjeWxnuaAp+OAggrliIblj4noioLngrnpg73kvJrmt7vliqDliLDlr7zoiKrmoI/nmoTnu5PmnoTmoJHkuK3vvIzkvZzkuLrlr7zoiKrpgInpobnvvIzlj7blrZDoioLngrnpg73kvJroh6rliqjop6PmnpDmiJDnu4Tku7bmt7vliqDliLDlt6XkvZzlj7DkuK3jgIIK5b2T5a+86Iiq5qCP6YCJ5Lit5Lu75oSP5Liq5YiG5Y+J6IqC54K55pe277yM5YW25Y+25a2Q6IqC54K555qE5ZG95Luk6Kej5p6Q55qE57uE5Lu277yM5Lya6Ieq5Yqo5pi+56S65Yiw5bel5L2c5Y+w5Lit44CCCmAKc3BhcmsgYOeUn+aIkOe9kemhteeahOmihOiniOaViOaenOWmguS4i2AKc3BhcmsgZmllbGQgYArns7vnu5/nrqHnkIYKCeezu+e7n+WRveS7pAoJCWNsaS5ydW50aW1lCgkJY2xpLnN5c3RlbQoJCWNsaS5xcmNvZGUKCeaWh+S7tuWRveS7pAoJCW5mcy5kaXIKCQluZnMuY2F0CgkJbmZzLnRhaWwKYAoKY2hhcHRlciAi5Yib5bu6576k57uEIgpzcGFyayBgCmNvbnRleHRzIOS4reeahOi1hOa6kOaYr+S7pee+pOe7hOeahOaWueW8j+i/m+ihjOe7hOe7h++8jOWDj+iBiuWkqei9r+S7tueahOe+pOe7hOS4gOagt++8jArnlKjmiLflj6/ku6XliJvlu7rku7vmhI/nmoTnvqTnu4TvvIznhLblkI7lsIbnm7jlhbPnmoTkurrlkZjjgIHlt6XlhbfjgIHotYTmupDnrYnlhajpg73mt7vliqDov5vljrvjgIIK5q+P5Liq576k57uE5LiL5Y+v5Lul5Yib5bu65aSa5Liq5bqU55So77yM5q+P5Liq5bqU55So5LiL5Y+v5Lul5re75Yqg5aSa5Liq5ZG95Luk44CCCuWcqOiPnOWNleagj+WSjOWPs+mUruiPnOWNleS4reWPr+S7peeci+WIsOWQhOenjeWIm+W7uumAiemhue+8jOi+k+WFpeebuOWFs+eahOS/oeaBr+WNs+WPr+WIm+W7uuOAggpgCnNwYXJrIHNoZWxsIGByaXZlciBjcmVhdGUgdHlwZSBwdWJsaWMgbmFtZSBkZW1vYAoKY2hhcHRlciAi5YWx5Lqr5bqU55SoIgpzcGFyayBgCuWQhOenjei1hOa6kO+8jOWmgue+pOe7hOOAgeW6lOeUqOOAgeW3peWFt+etie+8jOmDveWPr+S7peS4gOmUruWFseS6q++8jOWunueOsOWkmuS6uueahOWcqOe6v+WNj+WQjO+8jOS7juiAjOmZjeS9juayn+mAmuaIkOacrO+8jOaPkOWNh+W3peS9nOaViOeOh+OAggrlnKjoj5zljZXmoI/lkozlj7PplK7oj5zljZXkuK3lj6/ku6XnnIvliLDlkITnp43lhbHkuqvpgInpobnvvIzovpPlhaXnm7jlhbPnmoTkv6Hmga/ljbPlj6/kuIDplK7liIbkuqvjgIIKYAoKY2hhcHRlciAi5re75Yqg6K6+5aSHIgpzcGFyayBgCmNvbnRleHRzIOi/mOaUr+aMgeWkmuiuvuWkh+e7hOW7uumbhue+pO+8jOS7u+aEj+acjeWKoeiKgueCuemDveWPr+S7peS9nOS4uuS7o+eggeacjeWKoeWZqOOAgemVnOWDj+acjeWKoeWZqOOAgeiupOivgeacjeWKoeWZqOOAgeS7o+eQhuacjeWKoeWZqOOAgeaWh+S7tuacjeWKoeWZqOetieOAggrlpJrlj7Dpg6jnvbLkuoYgY29udGV4dHMg55qE6K6+5aSH77yM5Y+v5Lul5Lu75oSP57uE57uH572R57uc57uT5p6E77yM5q+P5Liq6IqC54K56YO95Y+v5Lul5Y2V54us5o+Q5L6b5omA5pyJ5pyN5Yqh77yM5Lmf5Y+v5Lul6K6/6Zeu5YW25a6D6IqC54K55LiK55qE5omA5pyJ5Yqf6IO944CCCmAKCg==",
        "src/help/tutor/func.shy": "cHJlbWVudQoKdGl0bGUgIuWkmuWKn+iDvSIKZmllbGQgIuaooeWdlyIgY29udGV4dApmaWVsZCAi5qih5Z2XIiBjb21tYW5kCgpjaGFwdGVyICLorqHliJIiCmZpZWxkICLorqHliJIiIHdlYi50ZWFtLnBsYW4KCmNoYXB0ZXIgIuebuOWGjCIKZmllbGQgIuebuOWGjCIgd2ViLndpa2kuZmVlbAoKY2hhcHRlciAi57uY5Zu+IgpmaWVsZCAi57uY5Zu+IiB3ZWIud2lraS5kcmF3CgpjaGFwdGVyICLnvJbnqIsiCmZpZWxkICLnvJbovpHlmagiIHdlYi5jb2RlLnZpbWVyCmZpZWxkICLotovlir/lm74iIHdlYi5jb2RlLmdpdC50cmVuZCBhcmdzIGBpY2ViZXJnc2AKZmllbGQgIuaetuaehOWbviIgd2ViLmNvZGUuZ2l0LnNwaWRlIGFyZ3MgYGljZWJlcmdzYAoKCg==",
        "src/help/tutor/node.shy": "Y2hhcHRlciAi5aSa6K6+5aSHIgoKZmllbGQgIuepuumXtOermSIgc3BhY2UKCg==",
        "src/help/tutor/task.shy": "Y2hhcHRlciAi5aSa5Lu75YqhIgoKZmllbGQgIuaipuaDs+WutiIgZHJlYW0KCgo=",
        "src/help/tutor/user.shy": "Y2hhcHRlciAi5aSa55So5oi3IgoKZmllbGQgIueUqOaItyIgdXNlcgoKCg==",
        "src/hi/hi.go": "cGFja2FnZSBoaQoKaW1wb3J0ICgKCSJzaHlsaW51eC5jb20veC9pY2UiCikKCnR5cGUgaGkgc3RydWN0IHsKCWljZS5ab25lCgoJbGlzdCBzdHJpbmcgYG5hbWU6Imxpc3Qgem9uZSBpZCBhdXRvIGluc2VydCIgaGVscDoi56S65L6LImAKfQoKZnVuYyAocyBoaSkgU2hvdyhtICppY2UuTWVzc2FnZSwgYXJnIC4uLnN0cmluZykgewoJbS5FY2hvKCJoZWxsbyB3b3JsZCIpCgltLlN0YXR1c1RpbWUoKQp9CgpmdW5jIChzIGhpKSBMaXN0KG0gKmljZS5NZXNzYWdlLCBhcmcgLi4uc3RyaW5nKSB7CglzLlpvbmUuTGlzdFBhZ2UobSwgYXJnLi4uKQoJbS5FY2hvKCJoZWxsbyB3b3JsZCIpCn0KCmZ1bmMgaW5pdCgpIHsgaWNlLkNtZCgid2ViLmNvZGUuaGkuaGkiLCBoaXt9KSB9Cg==",
        "src/hi/hi.js": "Vm9sY2Fub3MoIm9uaW1wb3J0Iiwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCW1zZy5FY2hvKCJoZWxsbyB3b3JsZCIpCgltc2cuRWNobygiaGVsbG8gd29ybGQiKQoJbXNnLkVjaG8oImhlbGxvIHdvcmxkIikKCW1zZy5FY2hvKCJoZWxsbyB3b3JsZCIpCgltc2cuRWNobygiaGVsbG8gd29ybGQiKQoJbXNnLkR1bXAoY2FuKQp9fSk=",
        "src/hi/hi.py": "cHJpbnQgImhlbGxvIHdvcmxkIgpwcmludCAiaGVsbG8gd29ybGQi",
        "src/hi/hi.sh": "IyEgL2Jpbi9zaAoKX2xpc3QKZWNobwoKX2xpc3QgaGkKZWNobwoKX2xpc3QgaGkgMQplY2hvCgplY2hvICJoZWxsbyB3b3JsZCIK",
        "src/hi/hi.shy": "Y2hhcHRlciAiaGkiCgpjaGFpbiBgCmNvbnRleHRzCgl2b2xjYW5vcwoJdm9sY2Fub3MKCQlsaWIKCQlwYWdlCgkJcGFuZWwKCQlwdWJsaXNoCglpY2ViZXJncwoJCWJhc2UKCQljb3JlCgkJbWlzYwoJdG9vbGtpdHMKYCBzaGlwLnN0cm9rZS13aWR0aCAxIGxpbmUuc3Ryb2tlLXdpZHRoIDEKCmNoYXJ0IHNlcXVlbmNlIGAKZmUgYmUgb3MgaGQKMCBjYWxsIDEgc29tZSAzCjAgY2FsbCAxIHNvbWUgMwowIGNhbGwgMSBzb21lIDMKMCBjYWxsIDEgc29tZSAzCjAgY2FsbCAxIHNvbWUgMwpgIG1hcmdpbnggODAKCmZpZWxkIGNsaS5zeXN0ZW0K",
        "src/main.go": "cGFja2FnZSBtYWluCgppbXBvcnQgKAoJInNoeWxpbnV4LmNvbS94L2ljZSIKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2MvYWxwaGEiCglfICJzaHlsaW51eC5jb20veC9pY2ViZXJncy9taXNjL2Nocm9tZSIKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2MvY29kZXIiCglfICJzaHlsaW51eC5jb20veC9pY2ViZXJncy9taXNjL2lucHV0IgoKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2MvamF2YSIKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2MvbGFyayIKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2MvbXAiCglfICJzaHlsaW51eC5jb20veC9pY2ViZXJncy9taXNjL25vZGUiCglfICJzaHlsaW51eC5jb20veC9pY2ViZXJncy9taXNjL3dld29yayIKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2Mvd3giCgoJXyAic2h5bGludXguY29tL3gvZ29sYW5nLXN0b3J5L3NyYy9jb21waWxlIgoJXyAic2h5bGludXguY29tL3gvZ29sYW5nLXN0b3J5L3NyYy9ncmFmYW5hIgoJXyAic2h5bGludXguY29tL3gvZ29sYW5nLXN0b3J5L3NyYy9wcm9qZWN0IgoJXyAic2h5bGludXguY29tL3gvZ29sYW5nLXN0b3J5L3NyYy9wcm9tZXRoZXVzIgoJXyAic2h5bGludXguY29tL3gvZ29sYW5nLXN0b3J5L3NyYy9ydW50aW1lIgoKCV8gInNoeWxpbnV4LmNvbS94L215c3FsLXN0b3J5L3NyYy9jbGllbnQiCglfICJzaHlsaW51eC5jb20veC9teXNxbC1zdG9yeS9zcmMvc2VhcmNoIgoJXyAic2h5bGludXguY29tL3gvbXlzcWwtc3Rvcnkvc3JjL3NlcnZlciIKCV8gInNoeWxpbnV4LmNvbS94L25naW54LXN0b3J5L3NyYy9zZXJ2ZXIiCglfICJzaHlsaW51eC5jb20veC9yZWRpcy1zdG9yeS9zcmMvY2xpZW50IgoJXyAic2h5bGludXguY29tL3gvcmVkaXMtc3Rvcnkvc3JjL3NlcnZlciIKKQoKZnVuYyBtYWluKCkgeyBwcmludChpY2UuUnVuKCkpIH0K",
        "src/main.js": "Vm9sY2Fub3MoIm9uaW1wb3J0Iiwge2hlbHA6ICLlr7zlhaXmlbDmja4iLCBfaW5pdDogZnVuY3Rpb24oY2FuLCBtc2cpIHsKCWNhbi5vbmFjdGlvbi5zaG93KGNhbiwgbXNnKQoJbXNnLkVjaG8oImhlbGxvIHdvcmxkIikKCW1zZy5FY2hvKCJoZWxsbyB3b3JsZCIpCgltc2cuRHVtcChjYW4pCn19KQpWb2xjYW5vcygib25hY3Rpb24iLCB7aGVscDogIuaTjeS9nOaVsOaNriIsIHNob3c6IGZ1bmN0aW9uKGNhbiwgbXNnKSB7Cgltc2cuUHVzaCgiaGkiLCAiaGVsbG8iKQoJbXNnLkVjaG8oImhlbGxvIHdvcmxkIikKfX0pCg==",
        "src/main.shy": "dGl0bGUgImNvbnRleHRzIgpyZWZlciBgCuWumOe9kSBodHRwczovL2NvbnRleHRzLmNvbS5jbgrmlofmoaMgaHR0cHM6Ly9jb250ZXh0cy5jb20uY24vaGVscC8K5rqQ56CBIGh0dHBzOi8vc2h5bGludXguY29tL3gvY29udGV4dHMKYAoKY2hhcHRlciAi5a6e6Le1IgpsYWJlbCBgCmNvZGUgd2lraSBjaGF0IHRlYW0gbWFsbApsaW51eCBuZ2lueCBjb250ZXh0IHJlZGlzIG15c3FsCmJhc2ggZ2l0IGdvbGFuZyB2aW0gdG11eApgCgpjaGFwdGVyICLnkIborroiCmxhYmVsIGAK6ZuG576k5YyWIOaooeWdl+WMliDoh6rliqjljJYKYCBmZyB5ZWxsb3cgYmcgYmxhY2sgdGV4dC5mb250LWZhbWlseSBub25lCgpjaGFwdGVyICLpobnnm64iCmxhYmVsIGAKaW50c2hlbGwgaWNlYmVyZ3Mgdm9sY2Fub3MKY29udGV4dHMgdG9vbGtpdHMgbGVhcm5pbmcKYCBmZyByZWQgYmcgYmxhY2sKCnNlY3Rpb24gIueBq+WxseaetiIKZmllbGQgIui2i+WKv+WbviIgd2ViLmNvZGUuZ2l0LnRyZW5kIGFyZ3MgYHZvbGNhbm9zYApmaWVsZCAi5p625p6E5Zu+IiB3ZWIuY29kZS5naXQuc3BpZGUgYXJncyBgdm9sY2Fub3NgCgpzZWN0aW9uICLlhrDlsbHmnrYiCmZpZWxkICLotovlir/lm74iIHdlYi5jb2RlLmdpdC50cmVuZCBhcmdzIGBpY2ViZXJnc2AKZmllbGQgIuaetuaehOWbviIgd2ViLmNvZGUuZ2l0LnNwaWRlIGFyZ3MgYGljZWJlcmdzYAoKc2VjdGlvbiAi56We5Yac5p62IgpmaWVsZCAi6LaL5Yq/5Zu+IiB3ZWIuY29kZS5naXQudHJlbmQgYXJncyBgaW50c2hlbGxgCmZpZWxkICLmnrbmnoTlm74iIHdlYi5jb2RlLmdpdC5zcGlkZSBhcmdzIGBpbnRzaGVsbGAKCnNwYXJrIG1kIFJFQURNRS5tZAoKc291cmNlICIuLi91c3IvaWNlYmVyZ3MvbWlzYy9ub2RlL3Z1ZS5zaHkiCnNvdXJjZSAiLi4vdXNyL2ljZWJlcmdzL21pc2MvamF2YS9zcHJpbmcuc2h5Igpzb3VyY2UgIi4uL3Vzci9pY2ViZXJncy9jb3JlL2NoYXQvbG9jYXRpb24uc2h5Igpzb3VyY2UgIi4uL3Vzci9pY2ViZXJncy9jb3JlL2NvZGUveHRlcm0uc2h5Igo=",
        "src/main.svg": "PHN2ZyB2ZXJ0aW9uPSIxLjEiIHhtbG5zPSJodHRwczovL3d3dy53My5vcmcvMjAwMC9zdmciIHRleHQtYW5jaG9yPSJtaWRkbGUiIGRvbWluYW50LWJhc2VsaW5lPSJtaWRkbGUiIGhlaWdodD0iMzg1IiB3aWR0aD0iNzUwIiBjb3VudD0iMTkiIHBpZD0icDE5IiBncmlkPSIxMCIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2U9InllbGxvdyIgZmlsbD0icHVycGxlIiBmb250LXNpemU9IjI0Ij48Zz48cmVjdCBoZWlnaHQ9IjQwIiB3aWR0aD0iMTIwIiByeT0iNCIgcng9IjQiIHg9IjMwMCIgeT0iNDAiIHBpZD0icDEiIGNsYXNzPSJwMSIgdGV4dD0icDIiIHNoaXA9Ilt7JnF1b3Q7cGlkJnF1b3Q7OiZxdW90O3A3JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjEsJnF1b3Q7YW5jaG9yJnF1b3Q7Ojh9LHsmcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDgmcXVvdDssJnF1b3Q7d2hpY2gmcXVvdDs6MSwmcXVvdDthbmNob3ImcXVvdDs6OH0seyZxdW90O3BpZCZxdW90OzomcXVvdDtwOSZxdW90OywmcXVvdDt3aGljaCZxdW90OzoxLCZxdW90O2FuY2hvciZxdW90Ozo4fSx7JnF1b3Q7cGlkJnF1b3Q7OiZxdW90O3AxMCZxdW90OywmcXVvdDt3aGljaCZxdW90OzoxLCZxdW90O2FuY2hvciZxdW90Ozo4fV0iIGluZGV4PSJjbGkuc3lzdGVtIiBhcmdzPSJwd2QiPjwvcmVjdD48dGV4dCB4PSIzNjAiIHk9IjYwIiBwaWQ9InAyIiBjbGFzcz0icDIiPnNoeTwvdGV4dD48L2c+PHJlY3QgaGVpZ2h0PSI0MCIgd2lkdGg9IjEyMCIgcnk9IjQiIHJ4PSI0IiB4PSI0OTAiIHk9IjE2MCIgdGV4dD0icDUiIHNoaXA9Ilt7JnF1b3Q7cGlkJnF1b3Q7OiZxdW90O3AxMCZxdW90OywmcXVvdDt3aGljaCZxdW90OzoyLCZxdW90O2FuY2hvciZxdW90OzoyfV0iIHBpZD0icDE5IiBjbGFzcz0icDE5IiBpbmRleD0id2ViLnJvdXRlIj48L3JlY3Q+PHJlY3QgaGVpZ2h0PSI0MCIgd2lkdGg9IjEyMCIgcnk9IjQiIHJ4PSI0IiB4PSIzMDAiIHk9IjE2MCIgdGV4dD0icDQiIHNoaXA9Ilt7JnF1b3Q7cGlkJnF1b3Q7OiZxdW90O3A5JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjIsJnF1b3Q7YW5jaG9yJnF1b3Q7OjJ9LHsmcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDE0JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjEsJnF1b3Q7YW5jaG9yJnF1b3Q7Ojh9LHsmcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDE1JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjEsJnF1b3Q7YW5jaG9yJnF1b3Q7Ojh9LHsmcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDE2JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjEsJnF1b3Q7YW5jaG9yJnF1b3Q7Ojh9XSIgcGlkPSJwMTciIGNsYXNzPSJwMTciIGluZGV4PSJjbGkucnVudGltZSI+PC9yZWN0PjxyZWN0IGhlaWdodD0iNDAiIHdpZHRoPSIxMjAiIHJ5PSI0IiByeD0iNCIgeD0iMTEwIiB5PSIxNjAiIHRleHQ9InAzIiBzaGlwPSJbeyZxdW90O3BpZCZxdW90OzomcXVvdDtwOCZxdW90OywmcXVvdDt3aGljaCZxdW90OzoyLCZxdW90O2FuY2hvciZxdW90OzoyfV0iIHBpZD0icDE4IiBjbGFzcz0icDE4Ij48L3JlY3Q+PHRleHQgeD0iMTcwIiB5PSIxODAiIHBpZD0icDMiIGNsYXNzPSJwMyI+b2xkPC90ZXh0Pjx0ZXh0IHg9IjM2MCIgeT0iMTgwIiBwaWQ9InA0IiBjbGFzcz0icDQiPmRldjwvdGV4dD48dGV4dCB4PSI1NTAiIHk9IjE4MCIgcGlkPSJwNSIgY2xhc3M9InA1Ij5jb208L3RleHQ+PGc+PC9nPjxsaW5lIHgxPSIzNjAiIHkxPSI4MCIgeDI9IjM2MCIgeTI9IjgwIiBzaGlwPSJbeyZxdW90O3BpZCZxdW90OzomcXVvdDtwMSZxdW90O30seyZxdW90O3BpZCZxdW90OzomcXVvdDsmcXVvdDt9XSIgcGlkPSJwNyIgY2xhc3M9InA3Ij48L2xpbmU+PGxpbmUgeDE9IjM2MCIgeTE9IjgwIiB4Mj0iMTcwIiB5Mj0iMTYwIiBzaGlwPSJbeyZxdW90O3BpZCZxdW90OzomcXVvdDtwMSZxdW90O30seyZxdW90O3BpZCZxdW90OzomcXVvdDsmcXVvdDt9XSIgcGlkPSJwOCIgY2xhc3M9InA4Ij48L2xpbmU+PGxpbmUgeDE9IjM2MCIgeTE9IjgwIiB4Mj0iMzYwIiB5Mj0iMTYwIiBzaGlwPSJbeyZxdW90O3BpZCZxdW90OzomcXVvdDtwMSZxdW90O30seyZxdW90O3BpZCZxdW90OzomcXVvdDsmcXVvdDt9XSIgcGlkPSJwOSIgY2xhc3M9InA5Ij48L2xpbmU+PGxpbmUgeDE9IjM2MCIgeTE9IjgwIiB4Mj0iNTUwIiB5Mj0iMTYwIiBzaGlwPSJbeyZxdW90O3BpZCZxdW90OzomcXVvdDtwMSZxdW90O30seyZxdW90O3BpZCZxdW90OzomcXVvdDsmcXVvdDt9XSIgcGlkPSJwMTAiIGNsYXNzPSJwMTAiPjwvbGluZT48ZyBjbGFzcz0ibWFjIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZT0iYmxhY2siIGZpbGw9ImN5YW4iIGZvbnQtc2l6ZT0iMjQiIHN0eWxlPSJvcGFjaXR5OiAxOyBkaXNwbGF5OiBibG9jazsiPjxyZWN0IGhlaWdodD0iNDAiIHdpZHRoPSIxMjAiIHJ5PSI0IiByeD0iNCIgeD0iMzAwIiB5PSIyNjAiIHRleHQ9InAxMSIgc2hpcD0iW3smcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDE1JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjIsJnF1b3Q7YW5jaG9yJnF1b3Q7OjJ9XSI+PC9yZWN0Pjx0ZXh0IHg9IjM2MCIgeT0iMjgwIiBwaWQ9InAxMSIgY2xhc3M9InAxMSI+TUIyPC90ZXh0PjxyZWN0IGhlaWdodD0iNDAiIHdpZHRoPSIxMjAiIHJ5PSI0IiByeD0iNCIgeD0iNDkwIiB5PSIyNjAiIHRleHQ9InAxMyIgc2hpcD0iW3smcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDE2JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjIsJnF1b3Q7YW5jaG9yJnF1b3Q7OjJ9XSI+PC9yZWN0PjxyZWN0IGhlaWdodD0iNDAiIHdpZHRoPSIxMjAiIHJ5PSI0IiByeD0iNCIgeD0iMTEwIiB5PSIyNjAiIHRleHQ9InAxMiIgc2hpcD0iW3smcXVvdDtwaWQmcXVvdDs6JnF1b3Q7cDE0JnF1b3Q7LCZxdW90O3doaWNoJnF1b3Q7OjIsJnF1b3Q7YW5jaG9yJnF1b3Q7OjJ9XSI+PC9yZWN0Pjx0ZXh0IHg9IjE3MCIgeT0iMjgwIiBwaWQ9InAxMiIgY2xhc3M9InAxMiI+TUIxPC90ZXh0Pjx0ZXh0IHg9IjU1MCIgeT0iMjgwIiBwaWQ9InAxMyIgY2xhc3M9InAxMyI+TUIwPC90ZXh0PjxsaW5lIHgxPSIzNjAiIHkxPSIyMDAiIHgyPSIxNzAiIHkyPSIyNjAiIHNoaXA9Ilt7JnF1b3Q7cGlkJnF1b3Q7OiZxdW90OyZxdW90O30seyZxdW90O3BpZCZxdW90OzomcXVvdDsmcXVvdDt9XSIgcGlkPSJwMTQiIGNsYXNzPSJwMTQiPjwvbGluZT48bGluZSB4MT0iMzYwIiB5MT0iMjAwIiB4Mj0iMzYwIiB5Mj0iMjYwIiBzaGlwPSJbeyZxdW90O3BpZCZxdW90OzomcXVvdDsmcXVvdDt9LHsmcXVvdDtwaWQmcXVvdDs6JnF1b3Q7JnF1b3Q7fV0iIHBpZD0icDE1IiBjbGFzcz0icDE1Ij48L2xpbmU+PGxpbmUgeDE9IjM2MCIgeTE9IjIwMCIgeDI9IjU1MCIgeTI9IjI2MCIgc2hpcD0iW3smcXVvdDtwaWQmcXVvdDs6JnF1b3Q7JnF1b3Q7fSx7JnF1b3Q7cGlkJnF1b3Q7OiZxdW90OyZxdW90O31dIiBwaWQ9InAxNiIgY2xhc3M9InAxNiI+PC9saW5lPjwvZz48L3N2Zz4=",
        "src/relay.go": "cGFja2FnZSBtYWluCgppbXBvcnQgKAoJIm9zIgoJInBhdGgiCgoJInNoeWxpbnV4LmNvbS94L2ljZSIKCV8gInNoeWxpbnV4LmNvbS94L2ljZWJlcmdzL21pc2Mvc3NoIgopCgpmdW5jIG1haW4oKSB7CglkZWZlciBmdW5jKCkgeyByZWNvdmVyKCkgfSgpCglhcmdzIDo9IFtdc3RyaW5neyJzc2guY29ubmVjdCIsICJvcGVuIiwgImF1dGhmaWxlIiwgcGF0aC5Kb2luKG9zLkdldGVudigiSE9NRSIpLCAiLnNzaC8iLCBwYXRoLkJhc2Uob3MuQXJnc1swXSkrIi5qc29uIil9CglwcmludChpY2UuUnVuKGFwcGVuZChhcmdzLCBvcy5BcmdzWzE6XS4uLikuLi4pKQp9Cg==",
        "src/webview.go": "cGFja2FnZSBtYWluCgppbXBvcnQgKAoJIm9zIgoJInRpbWUiCgoJInNoeWxpbnV4LmNvbS94L2ljZSIKCSJzaHlsaW51eC5jb20veC9pY2ViZXJncy9taXNjL3dlYnZpZXciCglraXQgInNoeWxpbnV4LmNvbS94L3Rvb2xraXRzIgopCgp0eXBlIHZpZXcgc3RydWN0eyAqd2Vidmlldy5XZWJWaWV3IH0KCmZ1bmMgbWFpbigpIHsKCW9zLkNoZGlyKGtpdC5Ib21lUGF0aCgiY29udGV4dHMiKSkKCWdvIGljZS5SdW4oInNlcnZlIiwgInN0YXJ0IikKCXRpbWUuU2xlZXAodGltZS5TZWNvbmQpCgoJd2Vidmlldy5SdW4oZnVuYyh3ICp3ZWJ2aWV3LldlYlZpZXcpIGludGVyZmFjZXt9IHsgcmV0dXJuIHZpZXd7d30gfSkKfQo=",
        "src/webview.txt": "bG9jYWxob3N0IGh0dHA6Ly9sb2NhbGhvc3Q6OTAyMApzaHlsaW51eCBodHRwczovL3NoeWxpbnV4LmNvbQo=",

        "etc/miss.sh": "IyEvYmluL2Jhc2gKCnJlcXVpcmUgJj4vZGV2L251bGwgfHwgaWYgWyAtZiAkUFdELy5pc2gvcGx1Zy5zaCBdOyB0aGVuIHNvdXJjZSAkUFdELy5pc2gvcGx1Zy5zaDsgZWxpZiBbIC1mICRIT01FLy5pc2gvcGx1Zy5zaCBdOyB0aGVuIHNvdXJjZSAkSE9NRS8uaXNoL3BsdWcuc2g7IGVsc2UKCWN0eF90ZW1wPSQobWt0ZW1wKTsgaWYgY3VybCAtaCAmPi9kZXYvbnVsbDsgdGhlbiBjdXJsIC1vICRjdHhfdGVtcCAtZnNTTCBodHRwczovL3NoeWxpbnV4LmNvbTsgZWxzZSB3Z2V0IC1PICRjdHhfdGVtcCAtcSBodHRwOi8vc2h5bGludXguY29tOyBmaTsgc291cmNlICRjdHhfdGVtcCBpbnRzaGVsbApmaQoKcmVxdWlyZSBzeXMvY2xpL2ZpbGUuc2gKaXNoX3N5c19wYXRoX2xvYWQKClsgLWYgfi8uYmFzaF9wcm9maWxlIF0gfHwgZWNobyAic291cmNlIH4vLmJhc2hyYyIgPj4gfi8uYmFzaF9wcm9maWxlCmlzaF9zeXNfbGlua19jcmVhdGUgfi8uYmFzaF9sb2NhbCAkUFdEL2V0Yy9jb25mL2Jhc2hfbG9jYWwuc2gKCnJlcXVpcmUgbWlzcy5zaAppc2hfbWlzc19wcmVwYXJlX2NvbXBpbGUKaXNoX21pc3NfcHJlcGFyZV9kZXZlbG9wCmlzaF9taXNzX3ByZXBhcmVfaW5zdGFsbAoKIyBpc2hfbWlzc19wcmVwYXJlIHdvcmQtZGljdAojIGlzaF9taXNzX3ByZXBhcmUgd3ViaS1kaWN0Cgppc2hfbWlzc19wcmVwYXJlIGxpbnV4LXN0b3J5CmlzaF9taXNzX3ByZXBhcmUgbmdpbngtc3RvcnkKaXNoX21pc3NfcHJlcGFyZSBnb2xhbmctc3RvcnkKaXNoX21pc3NfcHJlcGFyZSByZWRpcy1zdG9yeQppc2hfbWlzc19wcmVwYXJlIG15c3FsLXN0b3J5CmlzaF9taXNzX3ByZXBhcmUgcmVsZWFzZQoKaXNoX21pc3NfcHJlcGFyZV9jb250ZXh0cwppc2hfbWlzc19wcmVwYXJlX2ludHNoZWxsCmlzaF9taXNzX3ByZXBhcmVfaWNlYmVyZ3MKaXNoX21pc3NfcHJlcGFyZV90b29sa2l0cwppc2hfbWlzc19wcmVwYXJlX3ZvbGNhbm9zCmlzaF9taXNzX3ByZXBhcmVfbGVhcm5pbmcKCmlzaF9taXNzX21ha2U7IGlmIFsgLW4gIiQqIiBdOyB0aGVuIC4vYmluL2ljZS5iaW4gZm9yZXZlciBzZXJ2ZSAiJEAiOyBmaQoKaXNoX3N5c19saW5rX2NyZWF0ZSB+Ly52aW1fbG9jYWwudmltICRQV0QvZXRjL2NvbmYvdmltX2xvY2FsLnZpbQpyZXF1aXJlIGRldi92aW0vdmltLnNoCmlzaF9kZXZfdmltX3ByZXBhcmUKCmlmIHRtdXggLVY7IHRoZW4KICAgIHJlcXVpcmUgZGV2L3RtdXgvdG11eC5zaAogICAgaXNoX2Rldl90bXV4X3ByZXBhcmUKICAgIGlzaF9taXNzX3ByZXBhcmVfc2Vzc2lvbiBtaXNzIG1pc3MKZWxzZQogICAgY3R4X2xvZz0vZGV2L3N0ZG91dCBpc2hfbWlzc19zZXJ2ZQpmaQoK",
        "etc/init.shy": "fmFhYSAKCXJvbGUgd2hpdGUgdm9pZCB3ZWIuY29kZS5naXQuc3BpZGUKCXJvbGUgd2hpdGUgdm9pZCB3ZWIuY29kZS5naXQudHJlbmQKCXJvbGUgd2hpdGUgdm9pZCB3ZWIuY29kZS5pbnB1dC5maW5kCglyb2xlIHdoaXRlIHZvaWQgd2ViLndpa2kuYWxwaGEuZmluZAoKfndlYi5jb2RlCgl3ZWJwYWNrIGluc2VydCB4dGVybQoJd2VicGFjayBpbnNlcnQgeHRlcm0tYWRkb24tZml0Cgl3ZWJwYWNrIGluc2VydCB4dGVybS1hZGRvbi13ZWItbGlua3MKCXdlYnBhY2sgaW5zZXJ0IHh0ZXJtL2Nzcy94dGVybS5jc3MKCn53ZWIuY29kZQoJY29uZmlnIGlubmVyIG1ldGEuc2hvdy50YWJzICIiCgljb25maWcgaW5uZXIgbWV0YS5zaG93LmV4dHMgImlubmVyL3NlYXJjaC5qcz9hPTEiCgljb25maWcgaW5uZXIgbWV0YS5zaG93LnBsdWcgIiIKCWNvbmZpZyB2aW1lciBtZXRhLnNob3cudGFicyAiIgoJY29uZmlnIHZpbWVyIG1ldGEuc2hvdy5leHRzICJpbm5lci9zZWFyY2guanM/YT0xLGlubmVyL2Zhdm9yLmpzIgoJY29uZmlnIHZpbWVyIG1ldGEuc2hvdy5wbHVnICJ3ZWIuY29kZS50bXV4LnNlc3Npb24sd2ViLmNvZGUuZ2l0LnN0YXR1cyx3ZWIuY29kZS54dGVybSxjbGkuc3lzdGVtIgoKfndlYi5jb2RlLmlucHV0CgkjIHd1YmkgbG9hZCBmaWxlIHVzci93dWJpLWRpY3Qvd3ViaTg2Cgl3dWJpIGxvYWQgZmlsZSB1c3Ivd3ViaS1kaWN0L3BlcnNvbiB6b25lIHBlcnNvbgoKfmdkYgoJIyBjb25maWcgdGltZXIgbWV0YS5lbmFibGUgdHJ1ZQoJZXZlbnQgYWN0aW9uIGxpc3RlbiBldmVudCBkcmVhbS5jcmVhdGUgY21kIHdlYi5jb2RlLnRtdXguc2Vzc2lvbgoKfnNzaAoJdGFyZ2V0IHdlYi5jb2RlCgl0YXJnZXQgd2ViLmNoYXQKCXNvdXJjZSBsb2NhbC5zaHkK",
        "etc/exit.shy": "fmFhYQo=",

        "LICENSE": "TUlUIExpY2Vuc2UKCkNvcHlyaWdodCAoYykgMjAyMCDnoIHnpZ4KClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsCmNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUKU09GVFdBUkUuCg==",
        "Makefile": "ZXhwb3J0IENHT19FTkFCTEVEPTAKCnB1Ymxpc2ggPSB1c3IvcHVibGlzaC9pY2UuJChzaGVsbCBnbyBlbnYgR09PUykuJChzaGVsbCBnbyBlbnYgR09BUkNIKQpiaW5hcnlzID0gYmluL2ljZS5iaW4KCmFsbDogZGVmCglAZWNobyAmJiBkYXRlCglnbyBidWlsZCAtdiAtbyAke2JpbmFyeXN9IHNyYy9tYWluLmdvIHNyYy92ZXJzaW9uLmdvIHNyYy9iaW5wYWNrLmdvICYmIC4vJHtiaW5hcnlzfSBmb3JldmVyIHJlc3RhcnQgJj4vZGV2L251bGwKCW1rZGlyIC1wICQoZGlyICR7cHVibGlzaH0pICY+L2Rldi9udWxsOyBybSAke3B1Ymxpc2h9ICY+L2Rldi9udWxsOyBjcCAke2JpbmFyeXN9ICR7cHVibGlzaH0KCm1pcHNsZToKCUdPT1M9bGludXggR09BUkNIPW1pcHNsZSBnbyBidWlsZCAtbyB1c3IvcHVibGlzaC9pY2UubGludXgubWlwc2xlIHNyYy9tYWluLmdvIHNyYy92ZXJzaW9uLmdvIHNyYy9iaW5wYWNrLmdvCgphcm06CglHT09TPWxpbnV4IEdPQVJDSD1hcm0gZ28gYnVpbGQgLW8gdXNyL3B1Ymxpc2gvaWNlLmxpbnV4LmFybSBzcmMvbWFpbi5nbyBzcmMvdmVyc2lvbi5nbyBzcmMvYmlucGFjay5nbwoKZGVmOgoJQCBbIC1mIHNyYy92ZXJzaW9uLmdvIF0gfHwgZWNobyAicGFja2FnZSBtYWluIiA+IHNyYy92ZXJzaW9uLmdvCglAIFsgLWYgc3JjL2JpbnBhY2suZ28gXSB8fCBlY2hvICJwYWNrYWdlIG1haW4iID4gc3JjL2JpbnBhY2suZ28KCmFwcDoKCUNHT19FTkFCTEVEPTEgZ28gYnVpbGQgLW8gdXNyL3B1Ymxpc2gvY29udGV4dHMuYXBwL0NvbnRlbnRzL01hY09TL2NvbnRleHRzIHNyYy93ZWJ2aWV3LmdvIHNyYy9iaW5wYWNrLmdvICYmIG9wZW4gdXNyL3B1Ymxpc2gvY29udGV4dHMuYXBwCgkjIGhkaXV0aWwgY3JlYXRlIHVzci9wdWJsaXNoL3RtcC5kbWcgLW92IC12b2xuYW1lICJDb250ZXh0c0luc3RhbGwiIC1mcyBIRlMrIC1zcmNmb2xkZXIgInVzci9wdWJsaXNoL2NvbnRleHRzLmFwcCIKCSMgcm0gLWYgdXNyL3B1Ymxpc2gvQ29udGV4dHNJbnN0YWxsLmRtZwoJIyBoZGl1dGlsIGNvbnZlcnQgdXNyL3B1Ymxpc2gvdG1wLmRtZyAtZm9ybWF0IFVEWk8gLW8gdXNyL3B1Ymxpc2gvQ29udGV4dHNJbnN0YWxsLmRtZwoKJTogc3JjLyUuZ28KCUBlY2hvICYmIGRhdGUKCWdvIGJ1aWxkIC12IC1vIHVzci9wdWJsaXNoLyRAIHNyYy8kQC5nbyAmJiBjaG1vZCB1K3ggdXNyL3B1Ymxpc2gvJEAKCg==",
        "README.md": "IyBjb250ZXh0cwoKY29udGV4dHMg6YCa6L+H6ZuG576k5YyW44CB5qih5Z2X5YyW44CB6Ieq5Yqo5YyW55qE5pa55byP77yM55So5LiA5LiqIDIwTSDnmoTnqIvluo/mlofku7bvvIwg5bCx5Y+v5Lul5Zyo5ZCE56eN6K6+5aSH5LiK77yM5LiA6ZSu5pCt6LW35a6M5pW055qE5LqR6K6h566X5LiO5LqR56CU5Y+R5pyN5Yqh44CCCgojIyDlronoo4Xpobnnm64KCmBgYHNoCmN0eF90ZW1wPSQobWt0ZW1wKTsgY3VybCAtbyAkY3R4X3RlbXAgLWZzU0wgaHR0cHM6Ly9zaHlsaW51eC5jb207IHNvdXJjZSAkY3R4X3RlbXAgYmluYXJ5IHBvcnQgOTAyMApgYGAKCiMjIOS9v+eUqOmhueebrgrlpoLmnpzmmK/mnKzlnLDlkK/liqjvvIznm7TmjqXlhY3nmbvlvZXmiZPlvIDnvZHpobXvvIxodHRwOi8vbG9jYWxob3N0OjkwMjAg77yMCuWmguaenOaYr+i/nOeoi+aIluWuueWZqOWQr+WKqO+8jOi+k+WFpeebuOW6lOWcsOWdgOWQju+8jOi+k+WFpem7mOiupOeahCB1c2VybmFtZTogcm9vdCBwYXNzd29yZDogcm9vdCDljbPlj6/nmbvlvZUKCg==",

	}

	for k, v := range pack {
		if b, e := base64.StdEncoding.DecodeString(v); e == nil {
			nfs.PackFile.WriteFile(k, b)
		}
	}

}
